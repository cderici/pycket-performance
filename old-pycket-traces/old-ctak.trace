[3e4bfe518a60edb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb1000 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000008F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4bfe518a73c51] jit-backend-dump}
[3e4bfe518ab1c1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb10b0 +0  48894D50488945584889556048895D684889757048897D784C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000488B1C2548B35F0148C7042540B35F010000000048C7042548B35F010000000048895D388F45208F4510488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4bfe518ab49e1] jit-backend-dump}
[3e4bfe518ac14ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb1180 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB80EFA60041FFD3488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4bfe518ac2faf] jit-backend-dump}
[3e4bfe518ac9bb6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb11f0 +0  4889455848894D50488955604889757048897D784C8985800000004C898D880000004C899590000000488B7C240841BB601DA80041FFD3488B442408F6400480488B4558488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C20800
[3e4bfe518acb3d9] jit-backend-dump}
[3e4bfe518ad4c0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb1270 +0  4883EC384889442408F20F114424104889EF48895C24284C89642430488B1C2548B35F014C8B242540B35F0148C7042540B35F010000000048C7042548B35F010000000041BB80EFA60041FFD3F20F10442410488B44240848891C2548B35F014C89242540B35F01488B5C24284C8B642430488D642438C3
[3e4bfe518ad656d] jit-backend-dump}
[3e4bfe518ae0540] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb12f
[3e4bfe518ae3f9e] jit-backend-dump}
[3e4bfe518ae95f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb
[3e4bfe518aeb8ae] jit-backend-dump}
[3e4bfe518af078e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb
[3e4bfe518af2a5c] jit-backend-dump}
[3e4bfe518b81f98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb
[3e4bfe518b84c66] jit-backend-dump}
[3e4bfe518b8af49] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb18f
[3e4bfe518b8d60c] jit-backend-dump}
[3e4bfe518b925ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb1a70 +0  488B042548B35F0148C7042540B35F010000000048C7042548B35F01000000004889453848C74510A002F900488B9424B0000000488B842498000000488942384889E848832C258893F900104C8BBC24880000004C8BB424800000004C8B6C24784C8B642470488B5C2468488B6C24604881C4B8000000C3
[3e4bfe518b93dcf] jit-backend-dump}
[3e4bfe518bab3de] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb1af
[3e4bfe518bae78c] jit-backend-dump}
[3e4bfe518bb6a2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb1ce
[3e4bfe518bb9d36] jit-backend-dump}
[3e4bfe518bc198c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb1ee
[3e4bfe518bc4e50] jit-backend-dump}
[3e4bfe518bcafb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb20d
[3e4bfe518bcdcee] jit-backend-dump}
[3e4bfe518bd7a8b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb22c0 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB00000004883EC08FFD0488B0C258893F900488B69F8F64504010F85520000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000C349BB7012FB764C7F000041FFD3E99CFFFFFF
[3e4bfe518bd98ba] jit-backend-dump}
[3e4bfe518bdee53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2380 +0  4C8985800000004C898D880000004C8995900000004883EC08FFD0488B0C258893F900488B69F8F64504010F85320000004883C40848C7452000000000488B4D50488B5560488B7570488B7D784C8B85800000004C8B8D880000004C8B9590000000C349BB7012FB764C7F000041FFD3E9BCFFFFFF
[3e4bfe518be068b] jit-backend-dump}
[3e4bfe518be5bd8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2400 +0  48895D684C8985800000004C898D880000004C8995900000004C89A5980000004C89ADA00000004C89B5A80000004C89BDB0000000F20F1185B8000000F20F118DC0000000F20F1195C8000000F20F119DD0000000F20F11A5D8000000F20F11ADE0000000F20F11B5E8000000F20F11BDF0000000F2440F1185F8000000F2440F118D00010000F2440F119508010000F2440F119D10010000F2440F11A518010000F2440F11AD20010000F2440F11B5280100004883EC08FFD0488B0C258893F900488B69F8F64504010F85D10000004883C40848C7452000000000488B4D50488B5560488B5D68488B7570488B7D784C8B85800000004C8B8D880000004C8B95900000004C8BA5980000004C8BADA00000004C8BB5A80000004C8BBDB0000000F20F1085B8000000F20F108DC0000000F20F1095C8000000F20F109DD0000000F20F10A5D8000000F20F10ADE0000000F20F10B5E8000000F20F10BDF0000000F2440F1085F8000000F2440F108D00010000F2440F109508010000F2440F109D10010000F2440F10A518010000F2440F10AD20010000F2440F10B528010000C349BB7012FB764C7F000041FFD3E91DFFFFFF
[3e4bfe518be84e6] jit-backend-dump}
[3e4bfe518bed93f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb25c
[3e4bfe518bf0369] jit-backend-dump}
[3e4bfe518c01053] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2750 +0  4889E74883EC0841BBC027A90041FFD34883C408488B042540B35F014885C07501C34883C40849BB701AFB764C7F000041FFE3
[3e4bfe518c0288e] jit-backend-dump}
[3e4bfe5191f1f1b] {jit-backend
[3e4bfe5192de25e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb
[3e4bfe5192e76e6] jit-backend-dump}
[3e4bfe5192f68a4] {jit-backend-addr
Loop 1 ((let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))) has address 0x7f4c76fb2a4d to 0x7f4c76fb2bf0 (bootstrap 0x7f4c76fb29c0)
       gc table: 0x7f4c76fb2930
       function: 0x7f4c76fb29c0
         resops: 0x7f4c76fb2a4d
       failures: 0x7f4c76fb2bf0
            end: 0x7f4c76fb2dc3
[3e4bfe5192faf8e] jit-backend-addr}
[3e4bfe51930006c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2a77 +0  A4010000
[3e4bfe519301423] jit-backend-dump}
[3e4bfe519307f14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2a8d +0  AA010000
[3e4bfe519308f1d] jit-backend-dump}
[3e4bfe51930c2f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2aa0 +0  CF010000
[3e4bfe51930d060] jit-backend-dump}
[3e4bfe51930ffba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2ab0 +0  DB010000
[3e4bfe519310c9c] jit-backend-dump}
[3e4bfe519313ba0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2ac6 +0  E1010000
[3e4bfe5193148f0] jit-backend-dump}
[3e4bfe5193177d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2ad4 +0  EF010000
[3e4bfe51931849e] jit-backend-dump}
[3e4bfe51931b344] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2ae1 +0  FE010000
[3e4bfe51931c013] jit-backend-dump}
[3e4bfe51931ee63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2af7 +0  04020000
[3e4bfe51931fb48] jit-backend-dump}
[3e4bfe5193229cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2b04 +0  13020000
[3e4bfe5193236a1] jit-backend-dump}
[3e4bfe519326565] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2b11 +0  22020000
[3e4bfe519327271] jit-backend-dump}
[3e4bfe51932a20f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2b31 +0  3A020000
[3e4bfe51932af1b] jit-backend-dump}
[3e4bfe51932dd9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2b3a +0  4D020000
[3e4bfe51932ea86] jit-backend-dump}
[3e4bfe5193318d3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2b43 +0  60020000
[3e4bfe5193325b2] jit-backend-dump}
[3e4bfe5193362c6] jit-backend}
[3e4bfe51933a0ab] {jit-log-opt-loop
# Loop 1 ((let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))) : loop with 70 ops
[p0, p1]
+293: label(p0, p1, descr=TargetToken(60615520))
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+312: guard_class(p1, 16437352, descr=<Guard0x3966b60>) [p0, p1]
+331: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+335: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3966bc0>) [p0, p1]
debug_merge_point(0, 0, '(- x4849 1)')
+353: guard_not_invalidated(descr=<Guard0x39e9388>) [p0, p1]
+353: guard_class(p0, 16499664, descr=<Guard0x39e93d0>) [p0, p1]
+372: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+376: guard_class(p6, 16478448, descr=<Guard0x39e9418>) [p0, p1]
+388: p8 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+392: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x3966c20>) [p0, p1]
+410: i10 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+414: i12 = int_sub_ovf(i10, 1)
+418: guard_no_overflow(descr=<Guard0x39e9460>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4862 AppRand1 y4851 z4853)')
+424: p13 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+428: guard_nonnull(p13, descr=<Guard0x39e94a8>) [p0, p1]
+437: p14 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+441: guard_nonnull_class(p14, ConstClass(W_Fixnum), descr=<Guard0x3966c80>) [p0, p1]
+459: p16 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+463: guard_nonnull(p16, descr=<Guard0x39e94f0>) [p0, p1]
+472: p17 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+472: i18 = getfield_gc_i(p14, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+476: i19 = int_lt(i18, i12)
+479: guard_true(i19, descr=<Guard0x39e9538>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+485: label(i12, p16, p14, p3, p1, i18, descr=TargetToken(60615600))
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(- x4849 1)')
+504: guard_not_invalidated(descr=<Guard0x3966ce0>) [p1, i12, p14, p16, p3]
+504: i21 = int_sub_ovf(i12, 1)
+511: guard_no_overflow(descr=<Guard0x39e9580>) [p1, i12, p14, p16, p3]
debug_merge_point(0, 0, '(ctak-aux k4862 AppRand1 y4851 z4853)')
+517: guard_nonnull(p16, descr=<Guard0x39e95c8>) [p1, i12, p14, p16, p3]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+526: i22 = int_lt(i18, i21)
+529: guard_true(i22, descr=<Guard0x39e9610>) [p1, i12, p14, p16, p3]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+535: p23 = new_with_vtable(descr=<SizeDescr 48>)
+585: p24 = new_with_vtable(descr=<SizeDescr 48>)
+603: setfield_gc(p24, ConstPtr(ptr25), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+614: setfield_gc(p24, ConstPtr(ptr26), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+618: p27 = new_with_vtable(descr=<SizeDescr 16>)
+629: setfield_gc(p27, i12, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+633: setfield_gc(p24, p27, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+637: setfield_gc(p24, p16, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+641: setfield_gc(p24, p14, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+645: p28 = new_with_vtable(descr=<SizeDescr 24>)
+657: setfield_gc(p28, p1, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+662: setfield_gc(p28, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+671: setfield_gc(p23, p3, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+675: setfield_gc(p23, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+679: setfield_gc(p23, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+690: setfield_gc(p23, ConstPtr(ptr30), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+694: setfield_gc(p23, p28, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+698: jump(i21, p16, p14, p3, p23, i18, descr=TargetToken(60615600))
+704: --end of the loop--
[3e4bfe5193b3920] jit-log-opt-loop}
[3e4bfe5199ff2f2] {jit-backend
[3e4bfe519a58b2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2f50 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004881ECB800000048896C24604889B424B0000000488D8424980000004C8B56384C89104889600848C7401003000000488946384889FD48895C24684C896424704C896C24784C89B424800000004C89BC2488000000488B1C258893F90048C7030100000048896B084883C31048891C258893F900488B0425704A5E014829E0483B0425784A5E010F87E301000048FF042520F5E90266662E0F1F84000000000048FF042540F5E902488B8D300100008139300E01000F8500000000488B41104883F80172068138705402000F8500000000488B51184883FA017206813A601400000F8500000000488B59204883FB017206813B601400000F8500000000488B71284883FE017206813E601400000F8500000000488BBD38010000813FD81900000F85000000004C8B47084983F8017207418138900F00000F85000000004C8B4308488B5A084939D80F8C00000000488B58084839DF0F8500000000813BD81900000F8500000000488B43204C8B0526FEFFFF4C39C00F85000000004C8B4310488B4328488B4B30488B7B38488B53184C8985300100004889B5380100000F1F0048FF042560F5E9024883F80172068138705402000F85000000004883F90172068139601400000F85000000004883FF017206813F601400000F8500000000813AD81900000F8500000000488B72084883FE017206813E900F00000F8500000000488B77084C8B41084C39C60F8C000000004C8B40084C39C20F8500000000418138D81900000F8500000000498B7020488B1D62FDFFFF4839DE0F8500000000498B5810498B7028498B4030498B4838498B781848899D300100004889FA4889CF4889C14889F0E935FFFFFF0F1F44000049BB5027FB764C7F000041FFD3E90BFEFFFFFF35B8FCFFFF49BBE82DFB764C7F000041534D8D9B18E2FFFF41FFE3FF35A4FCFFFF49BBF82DFB764C7F000041534D8D9B08E2FFFF41FFE3FF3590FCFFFF49BB082EFB764C7F000041534D8D9BF8E1FFFF41FFE3FF357CFCFFFF49BB182EFB764C7F000041534D8D9BE8E1FFFF41FFE3FF3568FCFFFF49BB282EFB764C7F000041534D8D9BD8E1FFFF41FFE3FF3554FCFFFF49BB382EFB764C7F000041534D8D9BC8E1FFFF41FFE3FF3540FCFFFF49BB482EFB764C7F000041534D8D9BB8E1FFFF41FFE3FF352CFCFFFF49BB582EFB764C7F000041534D8D9BA8E1FFFF41FFE3FF3518FCFFFF49BB682EFB764C7F000041534D8D9B98E1FFFF41FFE3FF3504FCFFFF49BB782EFB764C7F000041534D8D9B88E1FFFF41FFE3FF35F0FBFFFF49BB882EFB764C7F000041534D8D9B78E1FFFF41FFE3FF35E4FBFFFF49BB982EFB764C7F000041534D8D9B68E1FFFF41FFE3FF35D0FBFFFF49BBA82EFB764C7F000041534D8D9B58E1FFFF41FFE3FF35BCFBFFFF49BBB82EFB764C7F000041534D8D9B48E1FFFF41FFE3FF35A8FBFFFF49BBC82EFB764C7F000041534D8D9B38E1FFFF41FFE3FF3594FBFFFF49BBD82EFB764C7F000041534D8D9B28E1FFFF41FFE3FF3580FBFFFF49BBE82EFB764C7F000041534D8D9B18E1FFFF41FFE3FF356CFBFFFF49BBF82EFB764C7F000041534D8D9B08E1FFFF41FFE3FF3558FBFFFF49BB082FFB764C7F000041534D8D9BF8E0FFFF41FFE3FF3544FBFFFF49BB182FFB764C7F000041534D8D9BE8E0FFFF41FFE3FF3530FBFFFF49BB282FFB764C7F000041534D8D9BD8E0FFFF41FFE3FF351CFBFFFF49BB382FFB764C7F000041534D8D9BC8E0FFFF41FFE3
[3e4bfe519a62c8c] jit-backend-dump}
[3e4bfe519a6cf68] {jit-backend-addr
Loop 2 ((ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)) has address 0x7f4c76fb309d to 0x7f4c76fb3280 (bootstrap 0x7f4c76fb3010)
       gc table: 0x7f4c76fb2f50
       function: 0x7f4c76fb3010
         resops: 0x7f4c76fb309d
       failures: 0x7f4c76fb3280
            end: 0x7f4c76fb34fa
[3e4bfe519a740aa] jit-backend-addr}
[3e4bfe519a78d7e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb30c7 +0  E3010000
[3e4bfe519a7a038] jit-backend-dump}
[3e4bfe519a7d4b2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb30dd +0  E9010000
[3e4bfe519a7e23f] jit-backend-dump}
[3e4bfe519a81222] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb30f3 +0  EF010000
[3e4bfe519a81eba] jit-backend-dump}
[3e4bfe519a84e76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3109 +0  F5010000
[3e4bfe519a85aed] jit-backend-dump}
[3e4bfe519a88a50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb311f +0  FB010000
[3e4bfe519a896bd] jit-backend-dump}
[3e4bfe519a8c588] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3132 +0  04020000
[3e4bfe519a8d1fb] jit-backend-dump}
[3e4bfe519a90115] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3149 +0  09020000
[3e4bfe519a90dde] jit-backend-dump}
[3e4bfe519a93d16] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb315a +0  14020000
[3e4bfe519a9495c] jit-backend-dump}
[3e4bfe519a97897] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3167 +0  23020000
[3e4bfe519a98560] jit-backend-dump}
[3e4bfe519a9b4b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3173 +0  33020000
[3e4bfe519a9c112] jit-backend-dump}
[3e4bfe519a9efe2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3187 +0  3B020000
[3e4bfe519a9fdc8] jit-backend-dump}
[3e4bfe519aa2e01] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb31c6 +0  34020000
[3e4bfe519aa3a7b] jit-backend-dump}
[3e4bfe519aa6973] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb31d8 +0  3E020000
[3e4bfe519aa760e] jit-backend-dump}
[3e4bfe519aaa540] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb31ea +0  48020000
[3e4bfe519aab1a7] jit-backend-dump}
[3e4bfe519aae093] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb31f6 +0  58020000
[3e4bfe519aaed38] jit-backend-dump}
[3e4bfe519ab1c36] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb320c +0  5E020000
[3e4bfe519ab28a6] jit-backend-dump}
[3e4bfe519ab57ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb321d +0  69020000
[3e4bfe519ab645e] jit-backend-dump}
[3e4bfe519ab932c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb322a +0  78020000
[3e4bfe519ab9f80] jit-backend-dump}
[3e4bfe519abce7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3237 +0  87020000
[3e4bfe519abdac4] jit-backend-dump}
[3e4bfe519ac0998] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb324b +0  8F020000
[3e4bfe519ac15ec] jit-backend-dump}
[3e4bfe519ac4fb5] jit-backend}
[3e4bfe519ac8add] {jit-log-opt-loop
# Loop 2 ((ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)) : loop with 66 ops
[p0, p1]
+341: label(p0, p1, descr=TargetToken(61039584))
+360: guard_not_invalidated(descr=<Guard0x3967100>) [p1, p0]
+360: guard_class(p0, 16500720, descr=<Guard0x3a31778>) [p1, p0]
+379: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_0 16 pure>)
+383: guard_nonnull_class(p3, 16584240, descr=<Guard0x3967160>) [p1, p0]
+401: p5 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_1 24 pure>)
+405: guard_nonnull_class(p5, ConstClass(W_Fixnum), descr=<Guard0x39671c0>) [p1, p0]
+423: p7 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_2 32 pure>)
+427: guard_nonnull_class(p7, ConstClass(W_Fixnum), descr=<Guard0x3967220>) [p1, p0]
+445: p9 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize4.inst__vals_3 40 pure>)
+449: guard_nonnull_class(p9, ConstClass(W_Fixnum), descr=<Guard0x3967280>) [p1, p0]
+467: p11 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+467: guard_class(p1, 16438168, descr=<Guard0x3a317c0>) [p1, p0]
+486: p13 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+490: guard_nonnull_class(p13, ConstClass(ForwardLink), descr=<Guard0x39672e0>) [p1, p0]
debug_merge_point(0, 0, '(< y4851 x4849)')
+509: i15 = getfield_gc_i(p7, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+513: i16 = getfield_gc_i(p5, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+517: i17 = int_lt(i15, i16)
+520: guard_false(i17, descr=<Guard0x3a31808>) [p1, p0]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+526: p18 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+530: p19 = getfield_gc_r(p3, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+530: i20 = instance_ptr_eq(p1, p18)
+533: guard_true(i20, descr=<Guard0x3a31850>) [p1, p0]
+539: guard_class(p18, 16438168, descr=<Guard0x3a31898>) [p1, p0]
+551: p22 = getfield_gc_r(p18, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+562: guard_value(p22, ConstPtr(ptr23), descr=<Guard0x3a318e0>) [p1, p0]
+571: p24 = getfield_gc_r(p18, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+575: p25 = getfield_gc_r(p18, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_0 40 pure>)
+579: p26 = getfield_gc_r(p18, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_1 48 pure>)
+583: p27 = getfield_gc_r(p18, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_2 56 pure>)
+587: p28 = getfield_gc_r(p18, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)')
+591: label(p24, p25, p26, p27, p9, p28, descr=TargetToken(61039664))
+616: guard_not_invalidated(descr=<Guard0x3967340>) [p28, p9, p27, p26, p25, p24]
+616: guard_nonnull_class(p25, 16584240, descr=<Guard0x39673a0>) [p28, p9, p27, p26, p25, p24]
+634: guard_nonnull_class(p26, ConstClass(W_Fixnum), descr=<Guard0x3967400>) [p28, p9, p27, p26, p25, p24]
+652: guard_nonnull_class(p27, ConstClass(W_Fixnum), descr=<Guard0x3967460>) [p28, p9, p27, p26, p25, p24]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+670: guard_class(p28, 16438168, descr=<Guard0x3a31928>) [p28, p9, p27, p26, p25, p24]
+682: p33 = getfield_gc_r(p28, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+686: guard_nonnull_class(p33, ConstClass(ForwardLink), descr=<Guard0x39674c0>) [p28, p9, p27, p26, p25, p24]
debug_merge_point(0, 0, '(< y4851 x4849)')
+704: i35 = getfield_gc_i(p27, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+708: i36 = getfield_gc_i(p26, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+712: i37 = int_lt(i35, i36)
+715: guard_false(i37, descr=<Guard0x3a31970>) [p28, p9, p27, p26, p25, p24]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+721: p38 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+725: p39 = getfield_gc_r(p25, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+725: i40 = instance_ptr_eq(p28, p38)
+728: guard_true(i40, descr=<Guard0x3a319b8>) [p28, p9, p27, p26, p25, p24]
+734: guard_class(p38, 16438168, descr=<Guard0x3a31a00>) [p28, p9, p27, p26, p25, p24]
+747: p42 = getfield_gc_r(p38, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+758: guard_value(p42, ConstPtr(ptr43), descr=<Guard0x3a31a48>) [p28, p9, p27, p26, p25, p24]
+767: p44 = getfield_gc_r(p38, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+771: p45 = getfield_gc_r(p38, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_0 40 pure>)
+775: p46 = getfield_gc_r(p38, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_1 48 pure>)
+779: p47 = getfield_gc_r(p38, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_2 56 pure>)
+783: p48 = getfield_gc_r(p38, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)')
+787: jump(p44, p45, p46, p47, p9, p48, descr=TargetToken(61039664))
+816: --end of the loop--
[3e4bfe519b0700d] jit-log-opt-loop}
[3e4bfe519c3c669] {jit-backend
[3e4bfe519c7dc0a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb35d
[3e4bfe519c84902] jit-backend-dump}
[3e4bfe519c8d170] {jit-backend-addr
Loop 3 ((call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)) has address 0x7f4c76fb36bd to 0x7f4c76fb37c0 (bootstrap 0x7f4c76fb3630)
       gc table: 0x7f4c76fb35d0
       function: 0x7f4c76fb3630
         resops: 0x7f4c76fb36bd
       failures: 0x7f4c76fb37c0
            end: 0x7f4c76fb3906
[3e4bfe519c8fbea] jit-backend-addr}
[3e4bfe519c939cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb36d4 +0  16010000
[3e4bfe519c94ba6] jit-backend-dump}
[3e4bfe519c97e4f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb36f0 +0  16010000
[3e4bfe519c98bd3] jit-backend-dump}
[3e4bfe519c9bb11] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3703 +0  1F010000
[3e4bfe519c9c814] jit-backend-dump}
[3e4bfe519c9f689] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3719 +0  25010000
[3e4bfe519ca034f] jit-backend-dump}
[3e4bfe519ca3186] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb372b +0  2F010000
[3e4bfe519ca3e43] jit-backend-dump}
[3e4bfe519ca6c53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3739 +0  3D010000
[3e4bfe519ca78fd] jit-backend-dump}
[3e4bfe519caa6ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb374b +0  47010000
[3e4bfe519cab37d] jit-backend-dump}
[3e4bfe519cae17e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb375d +0  51010000
[3e4bfe519caee1c] jit-backend-dump}
[3e4bfe519cb1bb1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb376a +0  60010000
[3e4bfe519cb2871] jit-backend-dump}
[3e4bfe519cb5717] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb377e +0  68010000
[3e4bfe519cb63e0] jit-backend-dump}
[3e4bfe519cb9dab] jit-backend}
[3e4bfe519cbd935] {jit-log-opt-loop
# Loop 3 ((call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)) : entry bridge with 36 ops
[p0, p1]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
+245: guard_not_invalidated(descr=<Guard0x3967520>) [p1, p0]
+245: guard_class(p0, 16478448, descr=<Guard0x3a31a90>) [p1, p0]
+264: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+268: p4 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+272: p5 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+276: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+280: guard_class(p6, 16505296, descr=<Guard0x3a31ad8>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
+292: guard_class(p1, 16438168, descr=<Guard0x3a31b20>) [p1, p0]
+311: p9 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+315: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x3967580>) [p1, p0]
debug_merge_point(0, 0, '(- z4853 1)')
+333: guard_nonnull_class(p4, ConstClass(W_Fixnum), descr=<Guard0x39675e0>) [p1, p0]
+351: i12 = getfield_gc_i(p4, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+355: i14 = int_sub_ovf(i12, 1)
+359: guard_no_overflow(descr=<Guard0x3a31b68>) [p1, p0]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
+365: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3967640>) [p1, p0]
+383: guard_nonnull_class(p5, ConstClass(W_Fixnum), descr=<Guard0x39676a0>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+401: i17 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+405: i18 = int_lt(i17, i14)
+408: guard_false(i18, descr=<Guard0x3a31bb0>) [p1, p0]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+414: p19 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+425: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3a31bf8>) [p1, p0]
+434: p21 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+438: p22 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_0 40 pure>)
+442: p23 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_1 48 pure>)
+446: p24 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_2 56 pure>)
+450: p25 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)')
+454: jump(p21, p22, p23, p24, p5, p25, descr=TargetToken(61039664))
+496: --end of the loop--
[3e4bfe519cdeb4b] jit-log-opt-loop}
[3e4bfe519dd4e54] {jit-backend
[3e4bfe519e132a2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb39a
[3e4bfe519e197bb] jit-backend-dump}
[3e4bfe519e22b45] {jit-backend-addr
Loop 4 ((let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))) has address 0x7f4c76fb3a7d to 0x7f4c76fb3bc0 (bootstrap 0x7f4c76fb39f0)
       gc table: 0x7f4c76fb39a0
       function: 0x7f4c76fb39f0
         resops: 0x7f4c76fb3a7d
       failures: 0x7f4c76fb3bc0
            end: 0x7f4c76fb3cb3
[3e4bfe519e25eaf] jit-backend-addr}
[3e4bfe519e29b1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3a94 +0  57010000
[3e4bfe519e2abfb] jit-backend-dump}
[3e4bfe519e2ddf6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3aab +0  5C010000
[3e4bfe519e2eb33] jit-backend-dump}
[3e4bfe519e31ae6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3ac1 +0  62010000
[3e4bfe519e328f0] jit-backend-dump}
[3e4bfe519e358fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3ad7 +0  68010000
[3e4bfe519e365c4] jit-backend-dump}
[3e4bfe519e3970b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3ae3 +0  94010000
[3e4bfe519e3a3ef] jit-backend-dump}
[3e4bfe519e3d438] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3b00 +0  93010000
[3e4bfe519e3e0ef] jit-backend-dump}
[3e4bfe519e41b3e] jit-backend}
[3e4bfe519e45616] {jit-log-opt-loop
# Loop 4 ((let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))) : entry bridge with 37 ops
[p0, p1]
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
+229: guard_class(p0, 16499664, descr=<Guard0x3967700>) [p1, p0]
+248: p3 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+252: guard_class(p1, 16438168, descr=<Guard0x3a31c40>) [p1, p0]
+271: p5 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+275: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x3967760>) [p1, p0]
debug_merge_point(0, 0, 'k4859')
+293: p7 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+297: guard_nonnull_class(p7, 16584240, descr=<Guard0x39677c0>) [p1, p0]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+315: guard_not_invalidated(descr=<Guard0x3a31c88>) [p1, p0]
+315: guard_class(p3, 16478448, descr=<Guard0x3a31cd0>) [p1, p0]
+327: p10 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+331: p11 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+335: p12 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+339: p13 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+343: guard_class(p13, 16505296, descr=<Guard0x3a31d18>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+356: p15 = new_with_vtable(descr=<SizeDescr 24>)
+403: p16 = new_with_vtable(descr=<SizeDescr 48>)
+414: setfield_gc(p16, p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+425: setfield_gc(p16, ConstPtr(ptr17), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+429: setfield_gc(p16, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+433: setfield_gc(p16, p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+437: setfield_gc(p16, p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+441: p18 = new_with_vtable(descr=<SizeDescr 24>)
+452: p19 = new_with_vtable(descr=<SizeDescr 48>)
+463: setfield_gc(p19, p5, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+467: setfield_gc(p19, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+471: setfield_gc(p19, p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+482: setfield_gc(p19, ConstPtr(ptr20), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+486: setfield_gc(p19, p7, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+490: setfield_gc(p18, p19, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+494: setfield_gc(p18, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+502: setfield_gc(p15, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+506: setfield_gc(p15, p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+510: jump(p15, p19, descr=TargetToken(60615520))
+544: --end of the loop--
[3e4bfe519e664c1] jit-log-opt-loop}
[3e4bfe51a11cf1c] {jit-backend
[3e4bfe51a1ada5d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3e30 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CB202000048FF042500F345034883F80172068138705402000F85000000004883F90172068139601400000F85000000004883FF017206813F601400000F8500000000813AA81600000F85000000004C8B7A084983FF01720741813F900F00000F85000000004C8B7F084C8B71084D39F70F8C000000004C8B70084C39F20F850000000041813EA81600000F85000000004D8B7E204C8B2DD3FEFFFF4D39EF0F85000000004D8B7E284D8B66104D8B56184983FF01720741813F705402000F85000000004C8BB5380100004D8B4E0841813AD81900000F85000000004D8B42084983F8017207418138900F00000F850000000041813C2430B700000F8500000000498B742418498B5C24204C89AD400100004D8B6C24284C89BD480100004D8B7C240841813F102001000F85000000004983FD01720841817D00601400000F85000000004D8B7D084983EF010F80000000004883FB017206813B601400000F85000000004885F60F84000000004C8B6B084D39FD0F8D00000000488B0C25F091F900488D9120010000483B14251092F9000F874601000048891425F091F90048C701100A0100488D511848C70230B70000488B0517FEFFFF48894208488B3D14FEFFFF48897A10488D7A3048C707601400004C897F0848897A184889722048895A284C8D7F1049C707705402004D8D771849C706A81600004D8946084D8D6E3049C7450030B7000049894508488B05CCFDFFFF4989451049897D184989752049895D284D896E10498D5D3048C703301700004C8943084C8963104C8953184C8B15A2FDFFFF4C8953204C894B284C8B8D480100004C894B3049895E184C8B8D400100004D894E204C8D4B3849C701705402004989590849C74110000000004D894E284D89770849C7471000000000488951084C89791048898D300100004C89B53801000049BB602AFB764C7F000041FFE3660F1F44000048C7442408FFFFFF0049BBC83CFB764C7F00004C895D204D8D9B28D6FFFF41FFD3E928FDFFFF49BB183EFB764C7F00004C895D204D8D9BD8DCFFFF41FFD3E9A5FEFFFFFF3527FCFFFF49BBD83CFB764C7F000041534D8D9B28D3FFFF41FFE3FF3513FCFFFF49BBE83CFB764C7F000041534D8D9B18D3FFFF41FFE3FF35FFFBFFFF49BBF83CFB764C7F000041534D8D9B08D3FFFF41FFE3FF35EBFBFFFF49BB083DFB764C7F000041534D8D9BF8D2FFFF41FFE3FF35D7FBFFFF49BB183DFB764C7F000041534D8D9BE8D2FFFF41FFE3FF35C3FBFFFF49BB283DFB764C7F000041534D8D9BD8D2FFFF41FFE3FF35AFFBFFFF49BB383DFB764C7F000041534D8D9BC8D2FFFF41FFE3FF359BFBFFFF49BB483DFB764C7F000041534D8D9BB8D2FFFF41FFE3FF3587FBFFFF49BB583DFB764C7F000041534D8D9BA8D2FFFF41FFE3FF357BFBFFFF49BB683DFB764C7F000041534D8D9B98D2FFFF41FFE3FF3567FBFFFF49BB783DFB764C7F000041534D8D9B88D2FFFF41FFE3FF3553FBFFFF49BB883DFB764C7F000041534D8D9B78D2FFFF41FFE3FF353FFBFFFF49BB983DFB764C7F000041534D8D9B68D2FFFF41FFE3FF352BFBFFFF49BBA83DFB764C7F000041534D8D9B58D2FFFF41FFE3FF3517FBFFFF49BBB83DFB764C7F000041534D8D9B48D2FFFF41FFE3FF3503FBFFFF49BBC83DFB764C7F000041534D8D9B38D2FFFF41FFE3FF35EFFAFFFF49BBD83DFB764C7F000041534D8D9B28D2FFFF41FFE3FF35DBFAFFFF49BBE83DFB764C7F000041534D8D9B18D2FFFF41FFE3FF35C7FAFFFF49BBF83DFB764C7F000041534D8D9B08D2FFFF41FFE3FF35B3FAFFFF49BB083EFB764C7F000041534D8D9BF8D1FFFF41FFE3
[3e4bfe51a1b70b0] jit-backend-dump}
[3e4bfe51a1c1948] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3f04 +0  20000000
[3e4bfe51a1c2fa3] jit-backend-dump}
[3e4bfe51a1c6d3c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb41c5 +0  20000000
[3e4bfe51a1c7caf] jit-backend-dump}
[3e4bfe51a1caf46] {jit-backend-addr
bridge out of Guard 0x3a31928 has address 0x7f4c76fb3f00 to 0x7f4c76fb41c0
       gc table: 0x7f4c76fb3e30
    jump target: 0x7f4c76fb3f00
         resops: 0x7f4c76fb3f0e
       failures: 0x7f4c76fb41c0
            end: 0x7f4c76fb4433
[3e4bfe51a1cd41f] jit-backend-addr}
[3e4bfe51a1d087b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3f24 +0  F7020000
[3e4bfe51a1d16bf] jit-backend-dump}
[3e4bfe51a1d48ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3f36 +0  01030000
[3e4bfe51a1d55ab] jit-backend-dump}
[3e4bfe51a1d8517] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3f48 +0  0B030000
[3e4bfe51a1d91ce] jit-backend-dump}
[3e4bfe51a1dfdcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3f54 +0  1B030000
[3e4bfe51a1e0b74] jit-backend-dump}
[3e4bfe51a1e3c49] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3f6b +0  20030000
[3e4bfe51a1e499c] jit-backend-dump}
[3e4bfe51a1e79e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3f7c +0  2B030000
[3e4bfe51a1e86c3] jit-backend-dump}
[3e4bfe51a1eb6ff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3f89 +0  3A030000
[3e4bfe51a1ec3c5] jit-backend-dump}
[3e4bfe51a1ef405] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3f96 +0  49030000
[3e4bfe51a1f0097] jit-backend-dump}
[3e4bfe51a1f347b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3faa +0  51030000
[3e4bfe51a1f4122] jit-backend-dump}
[3e4bfe51a1f71f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3fc9 +0  4E030000
[3e4bfe51a1f7ea2] jit-backend-dump}
[3e4bfe51a1fafb5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3fe1 +0  52030000
[3e4bfe51a1fbce9] jit-backend-dump}
[3e4bfe51a1fed6f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3ff8 +0  57030000
[3e4bfe51a1ffa38] jit-backend-dump}
[3e4bfe51a202afe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4006 +0  65030000
[3e4bfe51a2037d6] jit-backend-dump}
[3e4bfe51a206862] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4035 +0  52030000
[3e4bfe51a207531] jit-backend-dump}
[3e4bfe51a20a5f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4049 +0  5A030000
[3e4bfe51a20b2c0] jit-backend-dump}
[3e4bfe51a20e36b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4057 +0  68030000
[3e4bfe51a20f055] jit-backend-dump}
[3e4bfe51a2120d5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4069 +0  72030000
[3e4bfe51a212d7f] jit-backend-dump}
[3e4bfe51a215d9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4072 +0  85030000
[3e4bfe51a216a51] jit-backend-dump}
[3e4bfe51a219ae0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb407f +0  94030000
[3e4bfe51a21a78a] jit-backend-dump}
[3e4bfe51a21f792] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb31f6 +0  060D0000
[3e4bfe51a220519] jit-backend-dump}
[3e4bfe51a22758b] jit-backend}
[3e4bfe51a22b210] {jit-log-opt-bridge
# bridge out of Guard 0x3a31928 with 94 ops
[p0, p1, p2, p3, p4, p5]
+230: guard_not_invalidated(descr=<Guard0x3967820>) [p0, p1, p2, p3, p4, p5]
+230: guard_nonnull_class(p4, 16584240, descr=<Guard0x3967880>) [p0, p1, p2, p3, p4, p5]
+248: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x39678e0>) [p0, p1, p2, p3, p4, p5]
+266: guard_nonnull_class(p2, ConstClass(W_Fixnum), descr=<Guard0x3967940>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+284: guard_class(p0, 16437352, descr=<Guard0x3a31d60>) [p0, p1, p2, p3, p4, p5]
+296: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+300: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x39679a0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(< y4851 x4849)')
+319: i12 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+323: i13 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+327: i14 = int_lt(i12, i13)
+330: guard_false(i14, descr=<Guard0x3a31da8>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+336: p15 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+340: p16 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+340: i17 = instance_ptr_eq(p0, p15)
+343: guard_true(i17, descr=<Guard0x3a31df0>) [p0, p1, p2, p3, p4, p5]
+349: guard_class(p15, 16437352, descr=<Guard0x3a31e38>) [p0, p1, p2, p3, p4, p5]
+362: p19 = getfield_gc_r(p15, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+373: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3a31e80>) [p0, p1, p2, p3, p4, p5]
+382: p21 = getfield_gc_r(p15, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+386: p22 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+390: p23 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+394: guard_nonnull_class(p21, 16584240, descr=<Guard0x3967a00>) [p0, p1, p2, p3, p4, p5]
+413: i25 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+424: guard_class(p23, 16438168, descr=<Guard0x3a31ec8>) [p0, p1, p2, p3, p4, p5]
+437: p27 = getfield_gc_r(p23, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+441: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x3967a60>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)')
+460: guard_class(p22, 16478448, descr=<Guard0x3a31f10>) [p0, p1, p2, p3, p4, p5]
+474: p30 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+479: p31 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+484: p32 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+496: p33 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+508: guard_class(p33, 16505296, descr=<Guard0x3a31f58>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
debug_merge_point(0, 0, '(- y4851 1)')
+521: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3967ac0>) [p0, p1, p2, p3, p4, p5]
+541: i36 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+545: i38 = int_sub_ovf(i36, 1)
+549: guard_no_overflow(descr=<Guard0x3a31fa0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+555: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3967b20>) [p0, p1, p2, p3, p4, p5]
+573: guard_nonnull(p30, descr=<Guard0x3a72020>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+582: i40 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+586: i41 = int_lt(i40, i38)
+589: guard_true(i41, descr=<Guard0x3a72068>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+595: p42 = new_with_vtable(descr=<SizeDescr 24>)
+639: p43 = new_with_vtable(descr=<SizeDescr 48>)
+657: setfield_gc(p43, ConstPtr(ptr44), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+668: setfield_gc(p43, ConstPtr(ptr45), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+672: p46 = new_with_vtable(descr=<SizeDescr 16>)
+683: setfield_gc(p46, i38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+687: setfield_gc(p43, p46, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+691: setfield_gc(p43, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+695: setfield_gc(p43, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+699: p47 = new_with_vtable(descr=<SizeDescr 24>)
+710: p48 = new_with_vtable(descr=<SizeDescr 48>)
+721: setfield_gc(p48, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+725: p49 = new_with_vtable(descr=<SizeDescr 48>)
+737: setfield_gc(p49, ConstPtr(ptr44), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+748: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+752: setfield_gc(p49, p46, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+756: setfield_gc(p49, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+760: setfield_gc(p49, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+764: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+768: p51 = new_with_vtable(descr=<SizeDescr 56>)
+779: setfield_gc(p51, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+783: setfield_gc(p51, p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+787: setfield_gc(p51, p23, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+798: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+802: setfield_gc(p51, i25, descr=<FieldS pycket.small_list.LetContSize2Fixed01.inst_vals_fixed_1 40 pure>)
+806: setfield_gc(p51, p21, descr=<FieldP pycket.small_list.LetContSize2Fixed01.inst_w_val0 48 pure>)
+817: setfield_gc(p48, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+821: setfield_gc(p48, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+832: p54 = new_with_vtable(descr=<SizeDescr 24>)
+843: setfield_gc(p54, p51, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+847: setfield_gc(p54, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+855: setfield_gc(p48, p54, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+859: setfield_gc(p47, p48, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+863: setfield_gc(p47, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+871: setfield_gc(p42, p43, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+875: setfield_gc(p42, p47, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+879: jump(p42, p48, descr=TargetToken(60615520))
+912: --end of the loop--
[3e4bfe51a27e687] jit-log-opt-bridge}
[3e4bfe51a55e3fd] {jit-backend
[3e4bfe51a5ab5af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb45a
[3e4bfe51a5b3a07] jit-backend-dump}
[3e4bfe51a5bdbb4] {jit-backend-addr
Loop 6 ((call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)) has address 0x7f4c76fb46dd to 0x7f4c76fb48b0 (bootstrap 0x7f4c76fb4650)
       gc table: 0x7f4c76fb45a0
       function: 0x7f4c76fb4650
         resops: 0x7f4c76fb46dd
       failures: 0x7f4c76fb48b0
            end: 0x7f4c76fb4b0f
[3e4bfe51a5c0873] jit-backend-addr}
[3e4bfe51a5c4b22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb46f4 +0  03020000
[3e4bfe51a5c5e1c] jit-backend-dump}
[3e4bfe51a5c9360] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4710 +0  03020000
[3e4bfe51a5ca21c] jit-backend-dump}
[3e4bfe51a5cd37b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4723 +0  0C020000
[3e4bfe51a5ce0c1] jit-backend-dump}
[3e4bfe51a5d1178] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4739 +0  12020000
[3e4bfe51a5d1e22] jit-backend-dump}
[3e4bfe51a5d4e1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb474b +0  1C020000
[3e4bfe51a5d5ab6] jit-backend-dump}
[3e4bfe51a5d8a72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4759 +0  2A020000
[3e4bfe51a5d96ef] jit-backend-dump}
[3e4bfe51a5dc67d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb476b +0  34020000
[3e4bfe51a5dd2e4] jit-backend-dump}
[3e4bfe51a5e0213] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb477d +0  3E020000
[3e4bfe51a5e0ea5] jit-backend-dump}
[3e4bfe51a5e3e9e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb478a +0  4D020000
[3e4bfe51a5e4b2d] jit-backend-dump}
[3e4bfe51a5e7aa0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb479e +0  55020000
[3e4bfe51a5e8747] jit-backend-dump}
[3e4bfe51a5eb683] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb47ba +0  55020000
[3e4bfe51a5ec30b] jit-backend-dump}
[3e4bfe51a5ef32f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb47cb +0  60020000
[3e4bfe51a5effec] jit-backend-dump}
[3e4bfe51a5f3019] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb47e2 +0  65020000
[3e4bfe51a5f3ccd] jit-backend-dump}
[3e4bfe51a5f6c98] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb47fb +0  68020000
[3e4bfe51a5f7921] jit-backend-dump}
[3e4bfe51a5fa8a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb480f +0  70020000
[3e4bfe51a5fb51f] jit-backend-dump}
[3e4bfe51a5fe492] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb481e +0  7D020000
[3e4bfe51a5ff12a] jit-backend-dump}
[3e4bfe51a6020fb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4831 +0  86020000
[3e4bfe51a602d9c] jit-backend-dump}
[3e4bfe51a605d55] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4845 +0  8E020000
[3e4bfe51a606a52] jit-backend-dump}
[3e4bfe51a609a45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4852 +0  9D020000
[3e4bfe51a60a6d7] jit-backend-dump}
[3e4bfe51a60e07e] jit-backend}
[3e4bfe51a611a50] {jit-log-opt-loop
# Loop 6 ((call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)) : entry bridge with 63 ops
[p0, p1]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)')
+325: guard_not_invalidated(descr=<Guard0x3967b80>) [p1, p0]
+325: guard_class(p0, 16478448, descr=<Guard0x3a720b0>) [p1, p0]
+344: p3 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+348: p4 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+352: p5 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+356: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+360: guard_class(p6, 16505296, descr=<Guard0x3a720f8>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
+372: guard_class(p1, 16437488, descr=<Guard0x3a72140>) [p1, p0]
+391: p9 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+395: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x3967be0>) [p1, p0]
debug_merge_point(0, 0, '(- y4851 1)')
+413: guard_nonnull_class(p5, ConstClass(W_Fixnum), descr=<Guard0x3967c40>) [p1, p0]
+431: i12 = getfield_gc_i(p5, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+435: i14 = int_sub_ovf(i12, 1)
+439: guard_no_overflow(descr=<Guard0x3a72188>) [p1, p0]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+445: guard_nonnull_class(p4, ConstClass(W_Fixnum), descr=<Guard0x3967ca0>) [p1, p0]
+463: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3967d00>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+481: i17 = getfield_gc_i(p4, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+485: i18 = int_lt(i17, i14)
+488: guard_false(i18, descr=<Guard0x3a721d0>) [p1, p0]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+494: p19 = getfield_gc_r(p1, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+505: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3a72218>) [p1, p0]
+514: p21 = getfield_gc_r(p1, descr=<FieldP pycket.small_list.LetContSize2Fixed01.inst_w_val0 48 pure>)
+518: i22 = getfield_gc_i(p1, descr=<FieldS pycket.small_list.LetContSize2Fixed01.inst_vals_fixed_1 40 pure>)
+522: p23 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+526: p24 = getfield_gc_r(p1, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+530: guard_class(p23, 16478448, descr=<Guard0x3a72260>) [p1, p0]
+542: p26 = getfield_gc_r(p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+546: guard_class(p24, 16437352, descr=<Guard0x3a722a8>) [p1, p0]
+559: p28 = getfield_gc_r(p24, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+563: guard_nonnull_class(p28, ConstClass(ForwardLink), descr=<Guard0x3967d60>) [p1, p0]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
+582: p30 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+586: p31 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+590: p32 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+594: guard_class(p26, 16505296, descr=<Guard0x3a722f0>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+607: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3967dc0>) [p1, p0]
+627: i35 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+632: i37 = int_sub_ovf(i35, 1)
+636: guard_no_overflow(descr=<Guard0x3a72338>) [p1, p0]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
+642: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3967e20>) [p1, p0]
+661: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3967e80>) [p1, p0]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+681: i40 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+685: i41 = int_lt(i40, i37)
+688: guard_false(i41, descr=<Guard0x3a72380>) [p1, p0]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)')
+694: p42 = new_with_vtable(descr=<SizeDescr 16>)
+735: setfield_gc(p42, i22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+739: jump(p26, p21, p42, p3, p32, p24, descr=TargetToken(61039664))
+784: --end of the loop--
[3e4bfe51a646706] jit-log-opt-loop}
[3e4bfe51a9123c6] {jit-backend
[3e4bfe51a952110] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4bd
[3e4bfe51a957dad] jit-backend-dump}
[3e4bfe51a961f9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4c24 +0  20000000
[3e4bfe51a96340f] jit-backend-dump}
[3e4bfe51a966e08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4d35 +0  20000000
[3e4bfe51a967c43] jit-backend-dump}
[3e4bfe51a96ae07] {jit-backend-addr
bridge out of Guard 0x39e9610 has address 0x7f4c76fb4c20 to 0x7f4c76fb4d30
       gc table: 0x7f4c76fb4bd0
    jump target: 0x7f4c76fb4c20
         resops: 0x7f4c76fb4c2e
       failures: 0x7f4c76fb4d30
            end: 0x7f4c76fb4e6f
[3e4bfe51a96d1ef] jit-backend-addr}
[3e4bfe51a970607] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4c3f +0  4C010000
[3e4bfe51a9713d7] jit-backend-dump}
[3e4bfe51a974463] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4c52 +0  55010000
[3e4bfe51a97512f] jit-backend-dump}
[3e4bfe51a978101] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4c5f +0  64010000
[3e4bfe51a978da5] jit-backend-dump}
[3e4bfe51a97bc72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4c7b +0  64010000
[3e4bfe51a97c92f] jit-backend-dump}
[3e4bfe51a97f803] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4c85 +0  76010000
[3e4bfe51a9804b3] jit-backend-dump}
[3e4bfe51a983365] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4c8e +0  89010000
[3e4bfe51a984025] jit-backend-dump}
[3e4bfe51a986ef5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4c9b +0  98010000
[3e4bfe51a987ba6] jit-backend-dump}
[3e4bfe51a98aa61] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4ca4 +0  AB010000
[3e4bfe51a98b70e] jit-backend-dump}
[3e4bfe51a98e8ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2b43 +0  D9200000
[3e4bfe51a98f5f7] jit-backend-dump}
[3e4bfe51a993504] jit-backend}
[3e4bfe51a996f78] {jit-log-opt-bridge
# bridge out of Guard 0x39e9610 with 48 ops
[p0, i1, p2, p3, p4]
+102: guard_not_invalidated(descr=<Guard0x3967ee0>) [p0, i1, p2, p3, p4]
+102: i6 = int_sub_ovf(i1, 1)
+109: guard_no_overflow(descr=<Guard0x3a723c8>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(ctak-aux k4862 AppRand1 y4851 z4853)')
+115: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3967f40>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+134: i8 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+138: i9 = int_lt(i8, i6)
+141: guard_false(i9, descr=<Guard0x3a72410>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+147: i10 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+151: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+155: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x3967fa0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)')
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
debug_merge_point(0, 0, '(- y4851 1)')
+175: i14 = int_sub_ovf(i8, 1)
+179: guard_no_overflow(descr=<Guard0x3a72458>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+185: i15 = int_lt(i10, i14)
+188: guard_false(i15, descr=<Guard0x3a724a0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+194: i17 = int_sub_ovf(i10, 1)
+201: guard_no_overflow(descr=<Guard0x3a724e8>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+207: i18 = int_lt(i1, i17)
+210: guard_false(i18, descr=<Guard0x3a72530>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)')
+216: p19 = new_with_vtable(descr=<SizeDescr 24>)
+260: p20 = new_with_vtable(descr=<SizeDescr 16>)
+271: p21 = new_with_vtable(descr=<SizeDescr 16>)
+282: setfield_gc(p20, i10, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+286: setfield_gc(p21, i1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+290: setfield_gc(p19, p0, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+294: setfield_gc(p19, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+309: jump(ConstPtr(ptr23), p19, p20, p21, p2, p0, descr=TargetToken(61039664))
+352: --end of the loop--
[3e4bfe51a9bf4cf] jit-log-opt-bridge}
[3e4bfe51accd74b] {jit-backend
[3e4bfe51ad72629] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5000 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C0203000048FF042590753C034883F80172068138705402000F85000000004883F90172068139601400000F85000000004883FF017206813F601400000F8500000000813AA81600000F85000000004C8B7A084983FF01720741813F900F00000F85000000004C8B7F084C8B69084D39EF0F8C000000004C8B68084C39EA0F850000000041817D00A81600000F85000000004D8B7D204C8B25C2FEFFFF4D39E70F85000000004D8B7D284D8B55104D8B4D184983FF01720741813F705402000F85000000004D8B6E08418139301700000F85000000004D8B41084983F8017207418138900F00000F850000000041813A30B700000F8500000000498B7218498B5A204C89A5380100004D8B62284889B540010000498B7208813E102001000F85000000004983FC01720841813C24601400000F85000000004D8B5424084983EA010F80000000004883FB017206813B601400000F85000000004C89AD480100004C8BAD400100004983FD01720841817D00601400000F85000000004C8B6B084D39D50F8C000000004983ED010F80000000004C8B9540010000498B5A084C39EB0F8D00000000488B0C25F091F900488D9138010000483B14251092F9000F876A01000048891425F091F90048C701100A0100488D511848C70230B70000488B05EBFDFFFF48894208488B3DE8FDFFFF48897A10488D7A3048C707601400004C896F0848897A184C8962204C8952284C8D6F1049C74500705402004D8D751849C706A81600004D894608498D5E3048C70330B7000048894308488B05A0FDFFFF4889431048897B184C8963204C89532849895E104C8D633049C70424D81900004D8944240849897424104D894C24184C8B0D72FDFFFF4D894C24204D897C24284D8D7C244049C707601400004C8B8D480100004D894F084D897C24304D895424384D8966184C8B95380100004D8956204D8D571049C702705402004D89620849C74210000000004D8956284D89750849C7451000000000488951084C89691048898D300100004C89B53801000049BB602AFB764C7F000041FFE366666666662E0F1F84000000000048C7442408FFFFFF0049BB804EFB764C7F00004C895D204D8D9B70C4FFFF41FFD3E9D8FCFFFF49BBF04FFB764C7F00004C895D204D8D9B00CBFFFF41FFD3E981FEFFFFFF35C7FBFFFF49BB904EFB764C7F000041534D8D9B70C1FFFF41FFE3FF35B3FBFFFF49BBA04EFB764C7F000041534D8D9B60C1FFFF41FFE3FF359FFBFFFF49BBB04EFB764C7F000041534D8D9B50C1FFFF41FFE3FF358BFBFFFF49BBC04EFB764C7F000041534D8D9B40C1FFFF41FFE3FF3577FBFFFF49BBD04EFB764C7F000041534D8D9B30C1FFFF41FFE3FF3563FBFFFF49BBE04EFB764C7F000041534D8D9B20C1FFFF41FFE3FF354FFBFFFF49BBF04EFB764C7F000041534D8D9B10C1FFFF41FFE3FF353BFBFFFF49BB004FFB764C7F000041534D8D9B00C1FFFF41FFE3FF3527FBFFFF49BB104FFB764C7F000041534D8D9BF0C0FFFF41FFE3FF351BFBFFFF49BB204FFB764C7F000041534D8D9BE0C0FFFF41FFE3FF3507FBFFFF49BB304FFB764C7F000041534D8D9BD0C0FFFF41FFE3FF35F3FAFFFF49BB404FFB764C7F000041534D8D9BC0C0FFFF41FFE3FF35DFFAFFFF49BB504FFB764C7F000041534D8D9BB0C0FFFF41FFE3FF35CBFAFFFF49BB604FFB764C7F000041534D8D9BA0C0FFFF41FFE3FF35B7FAFFFF49BB704FFB764C7F000041534D8D9B90C0FFFF41FFE3FF35A3FAFFFF49BB804FFB764C7F000041534D8D9B80C0FFFF41FFE3FF358FFAFFFF49BB904FFB764C7F000041534D8D9B70C0FFFF41FFE3FF357BFAFFFF49BBA04FFB764C7F000041534D8D9B60C0FFFF41FFE3FF3567FAFFFF49BBB04FFB764C7F000041534D8D9B50C0FFFF41FFE3FF3553FAFFFF49BBC04FFB764C7F000041534D8D9B40C0FFFF41FFE3FF353FFAFFFF49BBD04FFB764C7F000041534D8D9B30C0FFFF41FFE3FF352BFAFFFF49BBE04FFB764C7F000041534D8D9B20C0FFFF41FFE3
[3e4bfe51ad7c5a0] jit-backend-dump}
[3e4bfe51ad86d90] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb50e4 +0  20000000
[3e4bfe51ad88214] jit-backend-dump}
[3e4bfe51ad8bedf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb53f5 +0  20000000
[3e4bfe51ad8cfb2] jit-backend-dump}
[3e4bfe51ad90313] {jit-backend-addr
bridge out of Guard 0x3a31ec8 has address 0x7f4c76fb50e0 to 0x7f4c76fb53f0
       gc table: 0x7f4c76fb5000
    jump target: 0x7f4c76fb50e0
         resops: 0x7f4c76fb50ee
       failures: 0x7f4c76fb53f0
            end: 0x7f4c76fb569b
[3e4bfe51ad92650] jit-backend-addr}
[3e4bfe51ad95bc5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5104 +0  47030000
[3e4bfe51ad96a83] jit-backend-dump}
[3e4bfe51ad99bfb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5116 +0  51030000
[3e4bfe51ad9a8d3] jit-backend-dump}
[3e4bfe51ad9d8e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5128 +0  5B030000
[3e4bfe51ad9e574] jit-backend-dump}
[3e4bfe51ada1579] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5134 +0  6B030000
[3e4bfe51ada220b] jit-backend-dump}
[3e4bfe51ada51d0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb514b +0  70030000
[3e4bfe51ada5e50] jit-backend-dump}
[3e4bfe51ada8d91] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb515c +0  7B030000
[3e4bfe51ada99dd] jit-backend-dump}
[3e4bfe51adac91b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5169 +0  8A030000
[3e4bfe51adad598] jit-backend-dump}
[3e4bfe51adb04ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5177 +0  98030000
[3e4bfe51adb115f] jit-backend-dump}
[3e4bfe51adb40aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb518b +0  A0030000
[3e4bfe51adb4d36] jit-backend-dump}
[3e4bfe51adb7c7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb51aa +0  9D030000
[3e4bfe51adb88f7] jit-backend-dump}
[3e4bfe51adbb8b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb51bb +0  A8030000
[3e4bfe51adbc570] jit-backend-dump}
[3e4bfe51adbf4d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb51d2 +0  AD030000
[3e4bfe51adc014c] jit-backend-dump}
[3e4bfe51adc30ed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb51df +0  BC030000
[3e4bfe51adc3d69] jit-backend-dump}
[3e4bfe51adc6cdc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5209 +0  AE030000
[3e4bfe51adc795e] jit-backend-dump}
[3e4bfe51adca8e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb521d +0  B6030000
[3e4bfe51adcb55d] jit-backend-dump}
[3e4bfe51adce4d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb522c +0  C3030000
[3e4bfe51adcf155] jit-backend-dump}
[3e4bfe51add20b8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb523e +0  CD030000
[3e4bfe51add2d66] jit-backend-dump}
[3e4bfe51add5cbd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5260 +0  C7030000
[3e4bfe51add6918] jit-backend-dump}
[3e4bfe51add98af] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb526d +0  D6030000
[3e4bfe51adda519] jit-backend-dump}
[3e4bfe51addd4b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5277 +0  E8030000
[3e4bfe51adde124] jit-backend-dump}
[3e4bfe51ade10ac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb528b +0  F0030000
[3e4bfe51ade1d2b] jit-backend-dump}
[3e4bfe51ade4faa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3fe1 +0  FB100000
[3e4bfe51ade5c1a] jit-backend-dump}
[3e4bfe51ade9c53] jit-backend}
[3e4bfe51aded6ca] {jit-log-opt-bridge
# bridge out of Guard 0x3a31ec8 with 110 ops
[p0, p1, p2, p3, p4, p5]
+246: guard_not_invalidated(descr=<Guard0x3a78020>) [p0, p1, p2, p3, p4, p5]
+246: guard_nonnull_class(p4, 16584240, descr=<Guard0x3a78080>) [p0, p1, p2, p3, p4, p5]
+264: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3a780e0>) [p0, p1, p2, p3, p4, p5]
+282: guard_nonnull_class(p2, ConstClass(W_Fixnum), descr=<Guard0x3a78140>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+300: guard_class(p0, 16437352, descr=<Guard0x3a72578>) [p0, p1, p2, p3, p4, p5]
+312: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+316: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3a781a0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(< y4851 x4849)')
+335: i12 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+339: i13 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+343: i14 = int_lt(i12, i13)
+346: guard_false(i14, descr=<Guard0x3a725c0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+352: p15 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+356: p16 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+356: i17 = instance_ptr_eq(p0, p15)
+359: guard_true(i17, descr=<Guard0x3a72608>) [p0, p1, p2, p3, p4, p5]
+365: guard_class(p15, 16437352, descr=<Guard0x3a72650>) [p0, p1, p2, p3, p4, p5]
+379: p19 = getfield_gc_r(p15, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+390: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3a72698>) [p0, p1, p2, p3, p4, p5]
+399: p21 = getfield_gc_r(p15, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+403: p22 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+407: p23 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+411: guard_nonnull_class(p21, 16584240, descr=<Guard0x3a78200>) [p0, p1, p2, p3, p4, p5]
+430: i25 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+434: guard_class(p23, 16437488, descr=<Guard0x3a726e0>) [p0, p1, p2, p3, p4, p5]
+447: p27 = getfield_gc_r(p23, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+451: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x3a78260>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)')
+470: guard_class(p22, 16478448, descr=<Guard0x3a72728>) [p0, p1, p2, p3, p4, p5]
+483: p30 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+487: p31 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+491: p32 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+502: p33 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+513: guard_class(p33, 16505296, descr=<Guard0x3a72770>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
debug_merge_point(0, 0, '(- y4851 1)')
+525: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3a782c0>) [p0, p1, p2, p3, p4, p5]
+545: i36 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+550: i38 = int_sub_ovf(i36, 1)
+554: guard_no_overflow(descr=<Guard0x3a727b8>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+560: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3a78320>) [p0, p1, p2, p3, p4, p5]
+578: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3a78380>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+612: i41 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+616: i42 = int_lt(i41, i38)
+619: guard_false(i42, descr=<Guard0x3a72800>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+625: i44 = int_sub_ovf(i41, 1)
+629: guard_no_overflow(descr=<Guard0x3a72848>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+635: i45 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+646: i46 = int_lt(i45, i44)
+649: guard_true(i46, descr=<Guard0x3a72890>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+655: p47 = new_with_vtable(descr=<SizeDescr 24>)
+699: p48 = new_with_vtable(descr=<SizeDescr 48>)
+717: setfield_gc(p48, ConstPtr(ptr49), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+728: setfield_gc(p48, ConstPtr(ptr50), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+732: p51 = new_with_vtable(descr=<SizeDescr 16>)
+743: setfield_gc(p51, i44, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+747: setfield_gc(p48, p51, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+751: setfield_gc(p48, p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+755: setfield_gc(p48, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+759: p52 = new_with_vtable(descr=<SizeDescr 24>)
+771: p53 = new_with_vtable(descr=<SizeDescr 48>)
+782: setfield_gc(p53, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+786: p54 = new_with_vtable(descr=<SizeDescr 48>)
+797: setfield_gc(p54, ConstPtr(ptr49), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+808: setfield_gc(p54, ConstPtr(ptr55), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+812: setfield_gc(p54, p51, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+816: setfield_gc(p54, p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+820: setfield_gc(p54, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+824: setfield_gc(p53, p54, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+828: p56 = new_with_vtable(descr=<SizeDescr 64>)
+840: setfield_gc(p56, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+845: setfield_gc(p56, p33, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+850: setfield_gc(p56, p23, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+862: setfield_gc(p56, ConstPtr(ptr57), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+867: setfield_gc(p56, p21, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_0 40 pure>)
+872: p58 = new_with_vtable(descr=<SizeDescr 16>)
+884: setfield_gc(p58, i25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+895: setfield_gc(p56, p58, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_1 48 pure>)
+900: setfield_gc(p56, p30, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_2 56 pure>)
+905: setfield_gc(p53, p56, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+909: setfield_gc(p53, ConstPtr(ptr59), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+920: p60 = new_with_vtable(descr=<SizeDescr 24>)
+931: setfield_gc(p60, p56, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+935: setfield_gc(p60, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+943: setfield_gc(p53, p60, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+947: setfield_gc(p52, p53, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+951: setfield_gc(p52, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+959: setfield_gc(p47, p48, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+963: setfield_gc(p47, p52, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+967: jump(p47, p53, descr=TargetToken(60615520))
+1008: --end of the loop--
[3e4bfe51ae4e26f] jit-log-opt-bridge}
[3e4bfe51af61cbe] {jit-backend
[3e4bfe51afa35e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb
[3e4bfe51afa9006] jit-backend-dump}
[3e4bfe51afb24e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5794 +0  20000000
[3e4bfe51afb37ed] jit-backend-dump}
[3e4bfe51afb70df] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb58d5 +0  20000000
[3e4bfe51afb7ed1] jit-backend-dump}
[3e4bfe51afbb008] {jit-backend-addr
bridge out of Guard 0x3a31c40 has address 0x7f4c76fb5790 to 0x7f4c76fb58d0
       gc table: 0x7f4c76fb5740
    jump target: 0x7f4c76fb5790
         resops: 0x7f4c76fb579e
       failures: 0x7f4c76fb58d0
            end: 0x7f4c76fb59d7
[3e4bfe51afbd296] jit-backend-addr}
[3e4bfe51afc05c9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb57ae +0  61010000
[3e4bfe51afc13ac] jit-backend-dump}
[3e4bfe51afc4573] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb57be +0  6D010000
[3e4bfe51afc52a4] jit-backend-dump}
[3e4bfe51afc84c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb57d5 +0  72010000
[3e4bfe51afc91dc] jit-backend-dump}
[3e4bfe51afcc2ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb57ed +0  76010000
[3e4bfe51afccfae] jit-backend-dump}
[3e4bfe51afd00fe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb57fa +0  A1010000
[3e4bfe51afd0e07] jit-backend-dump}
[3e4bfe51afd3eef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5817 +0  A0010000
[3e4bfe51afd4be6] jit-backend-dump}
[3e4bfe51afd7edc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3aab +0  E11C0000
[3e4bfe51afd8bcc] jit-backend-dump}
[3e4bfe51afdcc02] jit-backend}
[3e4bfe51afe0746] {jit-log-opt-bridge
# bridge out of Guard 0x3a31c40 with 36 ops
[p0, p1]
+102: guard_class(p1, 16499664, descr=<Guard0x3a783e0>) [p0, p1]
+114: p3 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+118: guard_class(p0, 16437488, descr=<Guard0x3a728d8>) [p0, p1]
+130: p5 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+134: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x3a78440>) [p0, p1]
debug_merge_point(0, 0, 'k4859')
+153: p7 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+157: guard_nonnull_class(p7, 16584240, descr=<Guard0x3a784a0>) [p0, p1]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+177: guard_not_invalidated(descr=<Guard0x3a72920>) [p0, p1]
+177: guard_class(p3, 16478448, descr=<Guard0x3a72968>) [p0, p1]
+190: p10 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+194: p11 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+198: p12 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+202: p13 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+206: guard_class(p13, 16505296, descr=<Guard0x3a729b0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+219: p15 = new_with_vtable(descr=<SizeDescr 24>)
+266: p16 = new_with_vtable(descr=<SizeDescr 48>)
+277: setfield_gc(p16, p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+288: setfield_gc(p16, ConstPtr(ptr17), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+292: setfield_gc(p16, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+296: setfield_gc(p16, p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+300: setfield_gc(p16, p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+304: p18 = new_with_vtable(descr=<SizeDescr 24>)
+315: p19 = new_with_vtable(descr=<SizeDescr 48>)
+326: setfield_gc(p19, p5, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+330: setfield_gc(p19, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+334: setfield_gc(p19, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+345: setfield_gc(p19, ConstPtr(ptr20), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+349: setfield_gc(p19, p7, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+353: setfield_gc(p18, p19, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+357: setfield_gc(p18, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+365: setfield_gc(p15, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+369: setfield_gc(p15, p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+373: jump(p15, p19, descr=TargetToken(60615520))
+400: --end of the loop--
[3e4bfe51b0004ed] jit-log-opt-bridge}
[3e4bfe51b2c0915] {jit-backend
[3e4bfe51b34a2f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5bb
[3e4bfe51b3547d3] jit-backend-dump}
[3e4bfe51b35ee0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5cb4 +0  20000000
[3e4bfe51b3601e0] jit-backend-dump}
[3e4bfe51b3641e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5ff5 +0  20000000
[3e4bfe51b3650e1] jit-backend-dump}
[3e4bfe51b368429] {jit-backend-addr
bridge out of Guard 0x39e9538 has address 0x7f4c76fb5cb0 to 0x7f4c76fb5ff0
       gc table: 0x7f4c76fb5bb0
    jump target: 0x7f4c76fb5cb0
         resops: 0x7f4c76fb5cbe
       failures: 0x7f4c76fb5ff0
            end: 0x7f4c76fb630b
[3e4bfe51b36a79d] jit-backend-addr}
[3e4bfe51b36dc17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5cce +0  61030000
[3e4bfe51b36e9f0] jit-backend-dump}
[3e4bfe51b371c66] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5ce5 +0  66030000
[3e4bfe51b37293b] jit-backend-dump}
[3e4bfe51b375a41] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5cf1 +0  92030000
[3e4bfe51b3766c7] jit-backend-dump}
[3e4bfe51b379768] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5d02 +0  9D030000
[3e4bfe51b37a3df] jit-backend-dump}
[3e4bfe51b37d3f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5d19 +0  A2030000
[3e4bfe51b37e0a1] jit-backend-dump}
[3e4bfe51b381133] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5d27 +0  B0030000
[3e4bfe51b381da6] jit-backend-dump}
[3e4bfe51b384e14] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5d3e +0  B5030000
[3e4bfe51b385a78] jit-backend-dump}
[3e4bfe51b388b10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5d56 +0  B9030000
[3e4bfe51b3897a2] jit-backend-dump}
[3e4bfe51b38c7c0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5d6d +0  BE030000
[3e4bfe51b38d424] jit-backend-dump}
[3e4bfe51b390595] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5d7b +0  CC030000
[3e4bfe51b3911f6] jit-backend-dump}
[3e4bfe51b39425a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5d88 +0  DB030000
[3e4bfe51b394eb5] jit-backend-dump}
[3e4bfe51b397f3b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5d96 +0  E9030000
[3e4bfe51b398bc4] jit-backend-dump}
[3e4bfe51b39bbf1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5daa +0  F1030000
[3e4bfe51b39c855] jit-backend-dump}
[3e4bfe51b39f8ce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5dc9 +0  EE030000
[3e4bfe51b3a0532] jit-backend-dump}
[3e4bfe51b3a3594] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5dda +0  F9030000
[3e4bfe51b3a420d] jit-backend-dump}
[3e4bfe51b3a72a8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5df1 +0  FE030000
[3e4bfe51b3a7f0c] jit-backend-dump}
[3e4bfe51b3aaf2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5dff +0  0C040000
[3e4bfe51b3abb91] jit-backend-dump}
[3e4bfe51b3aeba3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5e1f +0  08040000
[3e4bfe51b3af816] jit-backend-dump}
[3e4bfe51b3b2853] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5e31 +0  12040000
[3e4bfe51b3b34bd] jit-backend-dump}
[3e4bfe51b3b64e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5e3f +0  20040000
[3e4bfe51b3b715d] jit-backend-dump}
[3e4bfe51b3ba169] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5e51 +0  2A040000
[3e4bfe51b3badba] jit-backend-dump}
[3e4bfe51b3bdda1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5e64 +0  33040000
[3e4bfe51b3be9ed] jit-backend-dump}
[3e4bfe51b3c19ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5e71 +0  42040000
[3e4bfe51b3c2653] jit-backend-dump}
[3e4bfe51b3c563d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5e7b +0  54040000
[3e4bfe51b3c62e1] jit-backend-dump}
[3e4bfe51b3c92c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5e88 +0  63040000
[3e4bfe51b3c9f38] jit-backend-dump}
[3e4bfe51b3cd29c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb2b11 +0  9B310000
[3e4bfe51b3cdf37] jit-backend-dump}
[3e4bfe51b3d1f5e] jit-backend}
[3e4bfe51b3d5a12] {jit-log-opt-bridge
# bridge out of Guard 0x39e9538 with 123 ops
[p0, p1]
+278: guard_class(p1, 16437352, descr=<Guard0x3a78500>) [p0, p1]
+290: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+294: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3a78560>) [p0, p1]
debug_merge_point(0, 0, '(- x4849 1)')
+313: guard_not_invalidated(descr=<Guard0x3a729f8>) [p0, p1]
+313: guard_class(p0, 16499664, descr=<Guard0x3a72a40>) [p0, p1]
+325: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+329: guard_class(p6, 16478448, descr=<Guard0x3a72a88>) [p0, p1]
+342: p8 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+346: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x3a785c0>) [p0, p1]
+365: i10 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+369: i12 = int_sub_ovf(i10, 1)
+373: guard_no_overflow(descr=<Guard0x3a72ad0>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4862 AppRand1 y4851 z4853)')
+379: p13 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+383: guard_nonnull_class(p13, 16584240, descr=<Guard0x3a78620>) [p0, p1]
+402: p15 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+406: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3a78680>) [p0, p1]
+426: p17 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+430: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x3a786e0>) [p0, p1]
+449: p19 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+449: i20 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+454: i21 = int_lt(i20, i12)
+457: guard_false(i21, descr=<Guard0x3a72b18>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+463: p22 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+467: p23 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+467: i24 = instance_ptr_eq(p1, p22)
+470: guard_true(i24, descr=<Guard0x3a72b60>) [p0, p1]
+476: guard_class(p22, 16437352, descr=<Guard0x3a72ba8>) [p0, p1]
+490: p26 = getfield_gc_r(p22, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+501: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x3a72bf0>) [p0, p1]
+510: p28 = getfield_gc_r(p22, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+514: p29 = getfield_gc_r(p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+518: p30 = getfield_gc_r(p22, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+522: guard_nonnull_class(p28, 16584240, descr=<Guard0x3a78740>) [p0, p1]
+541: i32 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+545: guard_class(p30, 16437488, descr=<Guard0x3a72c38>) [p0, p1]
+558: p34 = getfield_gc_r(p30, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+562: guard_nonnull_class(p34, ConstClass(ForwardLink), descr=<Guard0x3a787a0>) [p0, p1]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)')
+581: guard_class(p29, 16478448, descr=<Guard0x3a72c80>) [p0, p1]
+595: p37 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+600: p38 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+605: p39 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+610: p40 = getfield_gc_r(p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+615: guard_class(p40, 16505296, descr=<Guard0x3a72cc8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
debug_merge_point(0, 0, '(- y4851 1)')
+627: guard_nonnull_class(p39, ConstClass(W_Fixnum), descr=<Guard0x3a78800>) [p0, p1]
+645: i43 = getfield_gc_i(p39, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+649: i45 = int_sub_ovf(i43, 1)
+653: guard_no_overflow(descr=<Guard0x3a72d10>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+659: guard_nonnull_class(p38, ConstClass(W_Fixnum), descr=<Guard0x3a78860>) [p0, p1]
+677: guard_nonnull_class(p37, ConstClass(W_Fixnum), descr=<Guard0x3a788c0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+696: i48 = getfield_gc_i(p38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+700: i49 = int_lt(i48, i45)
+703: guard_false(i49, descr=<Guard0x3a72d58>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+709: i51 = int_sub_ovf(i48, 1)
+713: guard_no_overflow(descr=<Guard0x3a72da0>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+719: i52 = getfield_gc_i(p37, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+723: i53 = int_lt(i52, i51)
+726: guard_true(i53, descr=<Guard0x3a72de8>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+732: p54 = new_with_vtable(descr=<SizeDescr 24>)
+776: p55 = new_with_vtable(descr=<SizeDescr 48>)
+794: setfield_gc(p55, ConstPtr(ptr56), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+805: setfield_gc(p55, ConstPtr(ptr57), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+809: p58 = new_with_vtable(descr=<SizeDescr 16>)
+820: setfield_gc(p58, i51, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+824: setfield_gc(p55, p58, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+828: setfield_gc(p55, p39, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+832: setfield_gc(p55, p37, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+836: p59 = new_with_vtable(descr=<SizeDescr 24>)
+847: p60 = new_with_vtable(descr=<SizeDescr 48>)
+865: setfield_gc(p60, p34, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+869: p61 = new_with_vtable(descr=<SizeDescr 48>)
+887: setfield_gc(p61, ConstPtr(ptr56), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+898: setfield_gc(p61, ConstPtr(ptr62), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+902: setfield_gc(p61, p58, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+906: setfield_gc(p61, p39, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+910: setfield_gc(p61, p37, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+914: setfield_gc(p60, p61, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+925: p63 = new_with_vtable(descr=<SizeDescr 64>)
+936: setfield_gc(p63, p34, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+940: setfield_gc(p63, p40, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+944: setfield_gc(p63, p30, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+955: setfield_gc(p63, ConstPtr(ptr64), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+959: setfield_gc(p63, p28, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_0 40 pure>)
+963: p65 = new_with_vtable(descr=<SizeDescr 16>)
+974: setfield_gc(p65, i32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+978: setfield_gc(p63, p65, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_1 48 pure>)
+982: setfield_gc(p63, p37, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_2 56 pure>)
+986: setfield_gc(p60, p63, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+990: setfield_gc(p60, ConstPtr(ptr66), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+994: p67 = new_with_vtable(descr=<SizeDescr 24>)
+1005: setfield_gc(p67, p63, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+1009: setfield_gc(p67, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+1017: setfield_gc(p60, p67, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+1021: setfield_gc(p59, p60, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+1025: setfield_gc(p59, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+1033: setfield_gc(p54, p55, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+1044: setfield_gc(p54, p59, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+1048: jump(p54, p60, descr=TargetToken(60615520))
+1088: --end of the loop--
[3e4bfe51b436063] jit-log-opt-bridge}
[3e4bfe51b684554] {jit-backend
[3e4bfe51b6d12b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb
[3e4bfe51b6d9a1d] jit-backend-dump}
[3e4bfe51b6e3aeb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6534 +0  20000000
[3e4bfe51b6e4edf] jit-backend-dump}
[3e4bfe51b6e89f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6705 +0  20000000
[3e4bfe51b6e986d] jit-backend-dump}
[3e4bfe51b6eca8a] {jit-backend-addr
bridge out of Guard 0x3a722a8 has address 0x7f4c76fb6530 to 0x7f4c76fb6700
       gc table: 0x7f4c76fb6480
    jump target: 0x7f4c76fb6530
         resops: 0x7f4c76fb653e
       failures: 0x7f4c76fb6700
            end: 0x7f4c76fb6973
[3e4bfe51b6eede8] jit-backend-addr}
[3e4bfe51b6f21e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb654e +0  0D020000
[3e4bfe51b6f2ff8] jit-backend-dump}
[3e4bfe51b6f62ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb656c +0  0B020000
[3e4bfe51b6f701c] jit-backend-dump}
[3e4bfe51b6fa1be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6578 +0  1B020000
[3e4bfe51b6faed1] jit-backend-dump}
[3e4bfe51b6fe152] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6590 +0  1F020000
[3e4bfe51b6fee3a] jit-backend-dump}
[3e4bfe51b70207b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb65a4 +0  27020000
[3e4bfe51b702d69] jit-backend-dump}
[3e4bfe51b705e7c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb65b2 +0  35020000
[3e4bfe51b706b07] jit-backend-dump}
[3e4bfe51b709b87] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb65c5 +0  3E020000
[3e4bfe51b70a80a] jit-backend-dump}
[3e4bfe51b70d83a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb65d8 +0  47020000
[3e4bfe51b70e4cf] jit-backend-dump}
[3e4bfe51b71158f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb65e5 +0  56020000
[3e4bfe51b71220b] jit-backend-dump}
[3e4bfe51b7152b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb65f9 +0  5E020000
[3e4bfe51b715f2c] jit-backend-dump}
[3e4bfe51b718fd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6616 +0  5D020000
[3e4bfe51b719c50] jit-backend-dump}
[3e4bfe51b71cd2f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6627 +0  68020000
[3e4bfe51b71d9c4] jit-backend-dump}
[3e4bfe51b7209ee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb663e +0  6D020000
[3e4bfe51b721683] jit-backend-dump}
[3e4bfe51b7246cc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6657 +0  70020000
[3e4bfe51b725388] jit-backend-dump}
[3e4bfe51b7283d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6669 +0  7A020000
[3e4bfe51b72907b] jit-backend-dump}
[3e4bfe51b72c0be] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6677 +0  88020000
[3e4bfe51b72cd53] jit-backend-dump}
[3e4bfe51b72fddc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb668a +0  91020000
[3e4bfe51b730a6b] jit-backend-dump}
[3e4bfe51b733adb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb669c +0  9B020000
[3e4bfe51b734758] jit-backend-dump}
[3e4bfe51b73779a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb66a9 +0  AA020000
[3e4bfe51b73841d] jit-backend-dump}
[3e4bfe51b73b6e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb47cb +0  611D0000
[3e4bfe51b73c3e2] jit-backend-dump}
[3e4bfe51b7404d2] jit-backend}
[3e4bfe51b743fa2] {jit-log-opt-bridge
# bridge out of Guard 0x3a722a8 with 62 ops
[p0, p1]
+198: guard_not_invalidated(descr=<Guard0x3a78920>) [p0, p1]
+198: guard_class(p1, 16478448, descr=<Guard0x3a72e30>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+214: p4 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+218: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+222: p6 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+226: guard_class(p6, 16505296, descr=<Guard0x3a72e78>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
+240: guard_class(p0, 16437488, descr=<Guard0x3a72ec0>) [p0, p1]
+252: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+256: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x3a78980>) [p0, p1]
debug_merge_point(0, 0, '(- y4851 1)')
+276: guard_nonnull_class(p5, ConstClass(W_Fixnum), descr=<Guard0x3a789e0>) [p0, p1]
+296: i12 = getfield_gc_i(p5, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+300: i14 = int_sub_ovf(i12, 1)
+304: guard_no_overflow(descr=<Guard0x3a72f08>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+310: guard_nonnull_class(p4, ConstClass(W_Fixnum), descr=<Guard0x3a78a40>) [p0, p1]
+329: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3a78aa0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+348: i17 = getfield_gc_i(p4, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+352: i18 = int_lt(i17, i14)
+355: guard_false(i18, descr=<Guard0x3a72f50>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+361: p19 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+372: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3a72f98>) [p0, p1]
+381: p21 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2Fixed01.inst_w_val0 48 pure>)
+385: i22 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.LetContSize2Fixed01.inst_vals_fixed_1 40 pure>)
+389: p23 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+393: p24 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+397: guard_class(p23, 16478448, descr=<Guard0x3a72fe0>) [p0, p1]
+410: p26 = getfield_gc_r(p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+414: guard_class(p24, 16437488, descr=<Guard0x3a73028>) [p0, p1]
+427: p28 = getfield_gc_r(p24, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+431: guard_nonnull_class(p28, ConstClass(ForwardLink), descr=<Guard0x3a78b00>) [p0, p1]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
+450: p30 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+454: p31 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+458: p32 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+462: guard_class(p26, 16505296, descr=<Guard0x3a73070>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+475: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3a78b60>) [p0, p1]
+493: i35 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+497: i37 = int_sub_ovf(i35, 1)
+501: guard_no_overflow(descr=<Guard0x3a730b8>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
+507: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3a78bc0>) [p0, p1]
+526: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3a78c20>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+544: i40 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+548: i41 = int_lt(i40, i37)
+551: guard_false(i41, descr=<Guard0x3a73100>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)')
+557: p42 = new_with_vtable(descr=<SizeDescr 16>)
+598: setfield_gc(p42, i22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+602: jump(p26, p21, p42, p3, p32, p24, descr=TargetToken(61039664))
+640: --end of the loop--
[3e4bfe51b77f86f] jit-log-opt-bridge}
[3e4bfe51b9f8194] {jit-backend
[3e4bfe51ba56e9f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6b00 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CE201000048FF0425B0793C034883F80172068138705402000F85000000004883F90172068139601400000F85000000004883FF017206813F601400000F8500000000813AA81600000F85000000004C8B7A084983FF01720741813F900F00000F85000000004C8B7F084C8B69084D39EF0F8C000000004C8B68084C39EA0F850000000041817D00A81600000F85000000004D8B7D204C8B25E2FEFFFF4D39E70F85000000004D8B65284D8B7D104D8B55184983FC01720841813C24705402000F85000000004D8B6E0841813AA81600000F85000000004D8B4A084983F9017207418139900F00000F850000000041813F30B700000F85000000004D8B4F184D8B4720498B7728498B5F08813B102001000F85000000004883FE017206813E601400000F85000000004C8B7E084983EF010F80000000004983F8017207418138601400000F85000000004983F9017207418139601400000F85000000004C89A5380100004D8B60084D39FC0F8C000000004983EC010F80000000004D8B79084D39E70F8C00000000488B0C25F091F900488D5110483B14251092F9000F876B00000048891425F091F90048C701601400004C89690848899D30010000488B85380100004C89CF4889B5380100004C89D249BBB031FB764C7F000041FFE3662E0F1F84000000000048C7442408FFFFFF0049BB8069FB764C7F00004C895D204D8D9B70A9FFFF41FFD3E9F8FDFFFF49BBF06AFB764C7F00004C895D204D8D9B00B0FFFF41FFD3E980FFFFFFFF3507FDFFFF49BB9069FB764C7F000041534D8D9B70A6FFFF41FFE3FF35F3FCFFFF49BBA069FB764C7F000041534D8D9B60A6FFFF41FFE3FF35DFFCFFFF49BBB069FB764C7F000041534D8D9B50A6FFFF41FFE3FF35CBFCFFFF49BBC069FB764C7F000041534D8D9B40A6FFFF41FFE3FF35B7FCFFFF49BBD069FB764C7F000041534D8D9B30A6FFFF41FFE3FF35A3FCFFFF49BBE069FB764C7F000041534D8D9B20A6FFFF41FFE3FF358FFCFFFF49BBF069FB764C7F000041534D8D9B10A6FFFF41FFE3FF357BFCFFFF49BB006AFB764C7F000041534D8D9B00A6FFFF41FFE3FF3567FCFFFF49BB106AFB764C7F000041534D8D9BF0A5FFFF41FFE3FF355BFCFFFF49BB206AFB764C7F000041534D8D9BE0A5FFFF41FFE3FF3547FCFFFF49BB306AFB764C7F000041534D8D9BD0A5FFFF41FFE3FF3533FCFFFF49BB406AFB764C7F000041534D8D9BC0A5FFFF41FFE3FF351FFCFFFF49BB506AFB764C7F000041534D8D9BB0A5FFFF41FFE3FF350BFCFFFF49BB606AFB764C7F000041534D8D9BA0A5FFFF41FFE3FF35F7FBFFFF49BB706AFB764C7F000041534D8D9B90A5FFFF41FFE3FF35E3FBFFFF49BB806AFB764C7F000041534D8D9B80A5FFFF41FFE3FF35CFFBFFFF49BB906AFB764C7F000041534D8D9B70A5FFFF41FFE3FF35BBFBFFFF49BBA06AFB764C7F000041534D8D9B60A5FFFF41FFE3FF35A7FBFFFF49BBB06AFB764C7F000041534D8D9B50A5FFFF41FFE3FF3593FBFFFF49BBC06AFB764C7F000041534D8D9B40A5FFFF41FFE3FF357FFBFFFF49BBD06AFB764C7F000041534D8D9B30A5FFFF41FFE3FF356BFBFFFF49BBE06AFB764C7F000041534D8D9B20A5FFFF41FFE3
[3e4bfe51ba5fb0b] jit-backend-dump}
[3e4bfe51ba69db2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6bc4 +0  20000000
[3e4bfe51ba6b1ea] jit-backend-dump}
[3e4bfe51ba6f2aa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6db5 +0  20000000
[3e4bfe51ba70077] jit-backend-dump}
[3e4bfe51ba73342] {jit-backend-addr
bridge out of Guard 0x3a726e0 has address 0x7f4c76fb6bc0 to 0x7f4c76fb6db0
       gc table: 0x7f4c76fb6b00
    jump target: 0x7f4c76fb6bc0
         resops: 0x7f4c76fb6bce
       failures: 0x7f4c76fb6db0
            end: 0x7f4c76fb705b
[3e4bfe51ba7575a] jit-backend-addr}
[3e4bfe51ba7907b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6be4 +0  27020000
[3e4bfe51ba79e66] jit-backend-dump}
[3e4bfe51ba7d19c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6bf6 +0  31020000
[3e4bfe51ba7de5c] jit-backend-dump}
[3e4bfe51ba80f62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6c08 +0  3B020000
[3e4bfe51ba81c2b] jit-backend-dump}
[3e4bfe51ba84ce2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6c14 +0  4B020000
[3e4bfe51ba859ba] jit-backend-dump}
[3e4bfe51ba88a53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6c2b +0  50020000
[3e4bfe51ba8970f] jit-backend-dump}
[3e4bfe51ba8c7b1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6c3c +0  5B020000
[3e4bfe51ba8d483] jit-backend-dump}
[3e4bfe51ba904e4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6c49 +0  6A020000
[3e4bfe51ba911a4] jit-backend-dump}
[3e4bfe51ba941a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6c57 +0  78020000
[3e4bfe51ba94e8e] jit-backend-dump}
[3e4bfe51ba9b733] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6c6b +0  80020000
[3e4bfe51ba9c5ae] jit-backend-dump}
[3e4bfe51ba9f876] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6c8b +0  7C020000
[3e4bfe51baa059b] jit-backend-dump}
[3e4bfe51baa3624] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6c9c +0  87020000
[3e4bfe51baa42d4] jit-backend-dump}
[3e4bfe51baa730e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6cb3 +0  8C020000
[3e4bfe51baa7fdd] jit-backend-dump}
[3e4bfe51baab001] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6cc0 +0  9B020000
[3e4bfe51baabcdc] jit-backend-dump}
[3e4bfe51baaed00] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6cdc +0  9B020000
[3e4bfe51baaf973] jit-backend-dump}
[3e4bfe51bab29c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6cee +0  A5020000
[3e4bfe51bab3666] jit-backend-dump}
[3e4bfe51bab66a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6cfc +0  B3020000
[3e4bfe51bab732f] jit-backend-dump}
[3e4bfe51baba309] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6d0f +0  BC020000
[3e4bfe51babafcc] jit-backend-dump}
[3e4bfe51babe002] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6d22 +0  C5020000
[3e4bfe51babecaa] jit-backend-dump}
[3e4bfe51bac1ca0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6d36 +0  CD020000
[3e4bfe51bac296f] jit-backend-dump}
[3e4bfe51bac5999] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6d40 +0  DF020000
[3e4bfe51bac662e] jit-backend-dump}
[3e4bfe51bac96ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6d4d +0  EE020000
[3e4bfe51baca340] jit-backend-dump}
[3e4bfe51bacd77d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb51bb +0  011A0000
[3e4bfe51bace436] jit-backend-dump}
[3e4bfe51bad24b0] jit-backend}
[3e4bfe51bad5ec2] {jit-log-opt-bridge
# bridge out of Guard 0x3a726e0 with 70 ops
[p0, p1, p2, p3, p4, p5]
+214: guard_not_invalidated(descr=<Guard0x3a78c80>) [p0, p1, p2, p3, p4, p5]
+214: guard_nonnull_class(p4, 16584240, descr=<Guard0x3a78ce0>) [p0, p1, p2, p3, p4, p5]
+232: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3a78d40>) [p0, p1, p2, p3, p4, p5]
+250: guard_nonnull_class(p2, ConstClass(W_Fixnum), descr=<Guard0x3a78da0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+268: guard_class(p0, 16437352, descr=<Guard0x3a73148>) [p0, p1, p2, p3, p4, p5]
+280: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+284: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3a78e00>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(< y4851 x4849)')
+303: i12 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+307: i13 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+311: i14 = int_lt(i12, i13)
+314: guard_false(i14, descr=<Guard0x3a73190>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+320: p15 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+324: p16 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+324: i17 = instance_ptr_eq(p0, p15)
+327: guard_true(i17, descr=<Guard0x3a731d8>) [p0, p1, p2, p3, p4, p5]
+333: guard_class(p15, 16437352, descr=<Guard0x3a73220>) [p0, p1, p2, p3, p4, p5]
+347: p19 = getfield_gc_r(p15, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+358: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3a73268>) [p0, p1, p2, p3, p4, p5]
+367: p21 = getfield_gc_r(p15, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+371: p22 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+375: p23 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+379: guard_nonnull_class(p21, 16584240, descr=<Guard0x3a78e60>) [p0, p1, p2, p3, p4, p5]
+399: i25 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+403: guard_class(p23, 16437352, descr=<Guard0x3a732b0>) [p0, p1, p2, p3, p4, p5]
+416: p27 = getfield_gc_r(p23, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+420: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x3a78ec0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)')
+439: guard_class(p22, 16478448, descr=<Guard0x3a732f8>) [p0, p1, p2, p3, p4, p5]
+452: p30 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+456: p31 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+460: p32 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+464: p33 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+468: guard_class(p33, 16505296, descr=<Guard0x3a73340>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
debug_merge_point(0, 0, '(- y4851 1)')
+480: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3a78f20>) [p0, p1, p2, p3, p4, p5]
+498: i36 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+502: i38 = int_sub_ovf(i36, 1)
+506: guard_no_overflow(descr=<Guard0x3a73388>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+512: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3a78f80>) [p0, p1, p2, p3, p4, p5]
+531: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3a78fe0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+550: i41 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+561: i42 = int_lt(i41, i38)
+564: guard_false(i42, descr=<Guard0x3a733d0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+570: i44 = int_sub_ovf(i41, 1)
+574: guard_no_overflow(descr=<Guard0x3a73418>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+580: i45 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+584: i46 = int_lt(i45, i44)
+587: guard_false(i46, descr=<Guard0x3a73460>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)')
+593: p47 = new_with_vtable(descr=<SizeDescr 16>)
+634: setfield_gc(p47, i25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+638: jump(p33, p21, p47, p30, p32, p23, descr=TargetToken(61039664))
+688: --end of the loop--
[3e4bfe51bb16ad3] jit-log-opt-bridge}
[3e4bfe51bc8f3e5] {jit-backend
[3e4bfe51bcdc3f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb71c
[3e4bfe51bce4be8] jit-backend-dump}
[3e4bfe51bceee37] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7264 +0  20000000
[3e4bfe51bcf01ba] jit-backend-dump}
[3e4bfe51bcf3da0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7425 +0  20000000
[3e4bfe51bcf4bde] jit-backend-dump}
[3e4bfe51bcf7e10] {jit-backend-addr
bridge out of Guard 0x3a31d60 has address 0x7f4c76fb7260 to 0x7f4c76fb7420
       gc table: 0x7f4c76fb71c0
    jump target: 0x7f4c76fb7260
         resops: 0x7f4c76fb726e
       failures: 0x7f4c76fb7420
            end: 0x7f4c76fb7677
[3e4bfe51bcfa0ab] jit-backend-addr}
[3e4bfe51bcfd47a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7284 +0  F7010000
[3e4bfe51bcfe1d2] jit-backend-dump}
[3e4bfe51bd01341] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7296 +0  01020000
[3e4bfe51bd02022] jit-backend-dump}
[3e4bfe51bd050eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb72a8 +0  0B020000
[3e4bfe51bd05db1] jit-backend-dump}
[3e4bfe51bd08d83] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb72b4 +0  1B020000
[3e4bfe51bd09a52] jit-backend-dump}
[3e4bfe51bd0c9f2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb72cb +0  20020000
[3e4bfe51bd0d6b2] jit-backend-dump}
[3e4bfe51bd13c11] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb72dc +0  2B020000
[3e4bfe51bd14ad6] jit-backend-dump}
[3e4bfe51bd17f1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb72e9 +0  3A020000
[3e4bfe51bd18c4d] jit-backend-dump}
[3e4bfe51bd1bee7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb72f6 +0  49020000
[3e4bfe51bd1cb76] jit-backend-dump}
[3e4bfe51bd1fca1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb730a +0  51020000
[3e4bfe51bd20936] jit-backend-dump}
[3e4bfe51bd239b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7328 +0  4F020000
[3e4bfe51bd24688] jit-backend-dump}
[3e4bfe51bd27776] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb733a +0  59020000
[3e4bfe51bd28454] jit-backend-dump}
[3e4bfe51bd2b4dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7351 +0  5E020000
[3e4bfe51bd2c184] jit-backend-dump}
[3e4bfe51bd2f0eb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb736d +0  5E020000
[3e4bfe51bd2fd67] jit-backend-dump}
[3e4bfe51bd32cb8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7380 +0  67020000
[3e4bfe51bd33941] jit-backend-dump}
[3e4bfe51bd368db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb738e +0  75020000
[3e4bfe51bd37570] jit-backend-dump}
[3e4bfe51bd3a5d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb73a1 +0  7E020000
[3e4bfe51bd3b28b] jit-backend-dump}
[3e4bfe51bd3e25c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb73b3 +0  88020000
[3e4bfe51bd3ef0d] jit-backend-dump}
[3e4bfe51bd41ed5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb73c0 +0  97020000
[3e4bfe51bd42b82] jit-backend-dump}
[3e4bfe51bd45e5d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3f54 +0  08330000
[3e4bfe51bd46b32] jit-backend-dump}
[3e4bfe51bd4ab93] jit-backend}
[3e4bfe51bd4e5ae] {jit-log-opt-bridge
# bridge out of Guard 0x3a31d60 with 56 ops
[p0, p1, p2, p3, p4, p5]
+182: guard_not_invalidated(descr=<Guard0x3a79040>) [p0, p1, p2, p3, p4, p5]
+182: guard_nonnull_class(p4, 16584240, descr=<Guard0x3a790a0>) [p0, p1, p2, p3, p4, p5]
+200: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3a79100>) [p0, p1, p2, p3, p4, p5]
+218: guard_nonnull_class(p2, ConstClass(W_Fixnum), descr=<Guard0x3a79160>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+236: guard_class(p0, 16437488, descr=<Guard0x3a734a8>) [p0, p1, p2, p3, p4, p5]
+248: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+252: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3a791c0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(< y4851 x4849)')
+271: i12 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+275: i13 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+279: i14 = int_lt(i12, i13)
+282: guard_false(i14, descr=<Guard0x3a734f0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+288: p15 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+292: p16 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+292: i17 = instance_ptr_eq(p0, p15)
+295: guard_true(i17, descr=<Guard0x3a73538>) [p0, p1, p2, p3, p4, p5]
+301: guard_class(p15, 16437488, descr=<Guard0x3a73580>) [p0, p1, p2, p3, p4, p5]
+314: p19 = getfield_gc_r(p15, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+325: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3a735c8>) [p0, p1, p2, p3, p4, p5]
+334: p21 = getfield_gc_r(p15, descr=<FieldP pycket.small_list.LetContSize2Fixed01.inst_w_val0 48 pure>)
+338: i22 = getfield_gc_i(p15, descr=<FieldS pycket.small_list.LetContSize2Fixed01.inst_vals_fixed_1 40 pure>)
+342: p23 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+346: p24 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+350: guard_class(p23, 16478448, descr=<Guard0x3a73610>) [p0, p1, p2, p3, p4, p5]
+364: p26 = getfield_gc_r(p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+369: guard_class(p24, 16437352, descr=<Guard0x3a73658>) [p0, p1, p2, p3, p4, p5]
+382: p28 = getfield_gc_r(p24, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+386: guard_nonnull_class(p28, ConstClass(ForwardLink), descr=<Guard0x3a79220>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
+405: p30 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+410: p31 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+415: p32 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+420: guard_class(p26, 16505296, descr=<Guard0x3a736a0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+433: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3a79280>) [p0, p1, p2, p3, p4, p5]
+452: i35 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+456: i37 = int_sub_ovf(i35, 1)
+460: guard_no_overflow(descr=<Guard0x3a736e8>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
+466: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3a792e0>) [p0, p1, p2, p3, p4, p5]
+485: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3a79340>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+503: i40 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+507: i41 = int_lt(i40, i37)
+510: guard_false(i41, descr=<Guard0x3a73730>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)')
+516: p42 = new_with_vtable(descr=<SizeDescr 16>)
+557: setfield_gc(p42, i22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+561: jump(p26, p21, p42, p1, p32, p24, descr=TargetToken(61039664))
+608: --end of the loop--
[3e4bfe51bd858aa] jit-log-opt-bridge}
[3e4bfe51bf413ab] {jit-backend
[3e4bfe51bf93c0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb
[3e4bfe51bf9a475] jit-backend-dump}
[3e4bfe51bfa3f71] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb77c4 +0  20000000
[3e4bfe51bfa52b1] jit-backend-dump}
[3e4bfe51bfa8d8a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7985 +0  20000000
[3e4bfe51bfa9adf] jit-backend-dump}
[3e4bfe51bfaccf0] {jit-backend-addr
bridge out of Guard 0x3a31bb0 has address 0x7f4c76fb77c0 to 0x7f4c76fb7980
       gc table: 0x7f4c76fb7750
    jump target: 0x7f4c76fb77c0
         resops: 0x7f4c76fb77ce
       failures: 0x7f4c76fb7980
            end: 0x7f4c76fb7adb
[3e4bfe51bfaf04e] jit-backend-addr}
[3e4bfe51bfb24fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb77de +0  FD010000
[3e4bfe51bfb32d2] jit-backend-dump}
[3e4bfe51bfb64a9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb77fc +0  FB010000
[3e4bfe51bfb7184] jit-backend-dump}
[3e4bfe51bfba1e5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7808 +0  0B020000
[3e4bfe51bfbaec7] jit-backend-dump}
[3e4bfe51bfbdec9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7820 +0  0F020000
[3e4bfe51bfbeb86] jit-backend-dump}
[3e4bfe51bfc1b94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7833 +0  18020000
[3e4bfe51bfc2851] jit-backend-dump}
[3e4bfe51bfc5822] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7841 +0  26020000
[3e4bfe51bfc64f8] jit-backend-dump}
[3e4bfe51bfc9506] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7854 +0  2F020000
[3e4bfe51bfca1e8] jit-backend-dump}
[3e4bfe51bfcd188] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb785d +0  42020000
[3e4bfe51bfcde45] jit-backend-dump}
[3e4bfe51bfd110d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb786a +0  51020000
[3e4bfe51bfd1dba] jit-backend-dump}
[3e4bfe51bfd5067] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb376a +0  52400000
[3e4bfe51bfd5d1d] jit-backend-dump}
[3e4bfe51bfd9cd0] jit-backend}
[3e4bfe51bfdd7e0] {jit-log-opt-bridge
# bridge out of Guard 0x3a31bb0 with 60 ops
[p0, p1]
+134: guard_not_invalidated(descr=<Guard0x3a793a0>) [p0, p1]
+134: guard_class(p1, 16478448, descr=<Guard0x3a73778>) [p0, p1]
+146: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+150: p4 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+154: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+158: p6 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+162: guard_class(p6, 16505296, descr=<Guard0x3a737c0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
+176: guard_class(p0, 16438168, descr=<Guard0x3a73808>) [p0, p1]
+188: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+192: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x3a79400>) [p0, p1]
debug_merge_point(0, 0, '(- z4853 1)')
+212: guard_nonnull_class(p4, ConstClass(W_Fixnum), descr=<Guard0x3a79460>) [p0, p1]
+231: i12 = getfield_gc_i(p4, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+235: i14 = int_sub_ovf(i12, 1)
+239: guard_no_overflow(descr=<Guard0x3a73850>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
+245: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3a794c0>) [p0, p1]
+264: guard_nonnull(p5, descr=<Guard0x3a73898>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+273: i16 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+277: i17 = int_lt(i16, i14)
+280: guard_true(i17, descr=<Guard0x3a738e0>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+286: p18 = new_with_vtable(descr=<SizeDescr 24>)
+330: p19 = new_with_vtable(descr=<SizeDescr 48>)
+348: setfield_gc(p19, ConstPtr(ptr20), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+359: setfield_gc(p19, ConstPtr(ptr21), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+363: p22 = new_with_vtable(descr=<SizeDescr 16>)
+374: setfield_gc(p22, i14, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+378: setfield_gc(p19, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+382: setfield_gc(p19, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+386: setfield_gc(p19, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+390: p23 = new_with_vtable(descr=<SizeDescr 24>)
+401: p24 = new_with_vtable(descr=<SizeDescr 48>)
+412: setfield_gc(p24, p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+416: p25 = new_with_vtable(descr=<SizeDescr 48>)
+428: setfield_gc(p25, ConstPtr(ptr20), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+440: setfield_gc(p25, ConstPtr(ptr26), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+445: setfield_gc(p25, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+450: setfield_gc(p25, p5, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+455: setfield_gc(p25, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+460: setfield_gc(p24, p25, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+464: setfield_gc(p24, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+475: setfield_gc(p24, ConstPtr(ptr27), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+479: p28 = new_with_vtable(descr=<SizeDescr 24>)
+491: setfield_gc(p28, p0, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+495: setfield_gc(p28, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+503: setfield_gc(p24, p28, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+507: setfield_gc(p23, p24, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+511: setfield_gc(p23, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+519: setfield_gc(p18, p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+523: setfield_gc(p18, p23, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+527: jump(p18, p24, descr=TargetToken(60615520))
+560: --end of the loop--
[3e4bfe51c00edd7] jit-log-opt-bridge}
[3e4bfe51c4dcdb6] {jit-backend
[3e4bfe51c5394d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7c70 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CE201000048FF0425507B3C034883F80172068138705402000F85000000004883F90172068139601400000F85000000004883FF017206813F601400000F8500000000813AA81600000F85000000004C8B7A084983FF01720741813F900F00000F85000000004C8B7F084C8B69084D39EF0F8C000000004C8B68084C39EA0F850000000041817D00A81600000F85000000004D8B7D204C8B25E2FEFFFF4D39E70F85000000004D8B65284D8B7D104D8B55184983FC01720841813C24705402000F85000000004D8B6E0841813AD81900000F85000000004D8B4A084983F9017207418139900F00000F850000000041813F30B700000F85000000004D8B4F184D8B4720498B7728498B5F08813B102001000F85000000004883FE017206813E601400000F85000000004C8B7E084983EF010F80000000004983F8017207418138601400000F85000000004983F9017207418139601400000F85000000004C89A5380100004D8B60084D39FC0F8C000000004983EC010F80000000004D8B79084D39E70F8C00000000488B0C25F091F900488D5110483B14251092F9000F876B00000048891425F091F90048C701601400004C89690848899D30010000488B85380100004C89CF4889B5380100004C89D249BBB031FB764C7F000041FFE3662E0F1F84000000000048C7442408FFFFFF0049BBE87AFB764C7F00004C895D204D8D9B0898FFFF41FFD3E9F8FDFFFF49BB587CFB764C7F00004C895D204D8D9B989EFFFF41FFD3E980FFFFFFFF3507FDFFFF49BBF87AFB764C7F000041534D8D9B0895FFFF41FFE3FF35F3FCFFFF49BB087BFB764C7F000041534D8D9BF894FFFF41FFE3FF35DFFCFFFF49BB187BFB764C7F000041534D8D9BE894FFFF41FFE3FF35CBFCFFFF49BB287BFB764C7F000041534D8D9BD894FFFF41FFE3FF35B7FCFFFF49BB387BFB764C7F000041534D8D9BC894FFFF41FFE3FF35A3FCFFFF49BB487BFB764C7F000041534D8D9BB894FFFF41FFE3FF358FFCFFFF49BB587BFB764C7F000041534D8D9BA894FFFF41FFE3FF357BFCFFFF49BB687BFB764C7F000041534D8D9B9894FFFF41FFE3FF3567FCFFFF49BB787BFB764C7F000041534D8D9B8894FFFF41FFE3FF355BFCFFFF49BB887BFB764C7F000041534D8D9B7894FFFF41FFE3FF3547FCFFFF49BB987BFB764C7F000041534D8D9B6894FFFF41FFE3FF3533FCFFFF49BBA87BFB764C7F000041534D8D9B5894FFFF41FFE3FF351FFCFFFF49BBB87BFB764C7F000041534D8D9B4894FFFF41FFE3FF350BFCFFFF49BBC87BFB764C7F000041534D8D9B3894FFFF41FFE3FF35F7FBFFFF49BBD87BFB764C7F000041534D8D9B2894FFFF41FFE3FF35E3FBFFFF49BBE87BFB764C7F000041534D8D9B1894FFFF41FFE3FF35CFFBFFFF49BBF87BFB764C7F000041534D8D9B0894FFFF41FFE3FF35BBFBFFFF49BB087CFB764C7F000041534D8D9BF893FFFF41FFE3FF35A7FBFFFF49BB187CFB764C7F000041534D8D9BE893FFFF41FFE3FF3593FBFFFF49BB287CFB764C7F000041534D8D9BD893FFFF41FFE3FF357FFBFFFF49BB387CFB764C7F000041534D8D9BC893FFFF41FFE3FF356BFBFFFF49BB487CFB764C7F000041534D8D9BB893FFFF41FFE3
[3e4bfe51c542f60] jit-backend-dump}
[3e4bfe51c54d829] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7d34 +0  20000000
[3e4bfe51c54ede5] jit-backend-dump}
[3e4bfe51c552c2e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7f25 +0  20000000
[3e4bfe51c553b18] jit-backend-dump}
[3e4bfe51c556ceb] {jit-backend-addr
bridge out of Guard 0x3a72068 has address 0x7f4c76fb7d30 to 0x7f4c76fb7f20
       gc table: 0x7f4c76fb7c70
    jump target: 0x7f4c76fb7d30
         resops: 0x7f4c76fb7d3e
       failures: 0x7f4c76fb7f20
            end: 0x7f4c76fb81cb
[3e4bfe51c5591a0] jit-backend-addr}
[3e4bfe51c55c82e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7d54 +0  27020000
[3e4bfe51c55d691] jit-backend-dump}
[3e4bfe51c5608f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7d66 +0  31020000
[3e4bfe51c56158c] jit-backend-dump}
[3e4bfe51c56456d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7d78 +0  3B020000
[3e4bfe51c5651d7] jit-backend-dump}
[3e4bfe51c568187] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7d84 +0  4B020000
[3e4bfe51c568df1] jit-backend-dump}
[3e4bfe51c56bf10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7d9b +0  50020000
[3e4bfe51c56cbbd] jit-backend-dump}
[3e4bfe51c56fc2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7dac +0  5B020000
[3e4bfe51c570903] jit-backend-dump}
[3e4bfe51c5738ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7db9 +0  6A020000
[3e4bfe51c57458e] jit-backend-dump}
[3e4bfe51c57752e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7dc7 +0  78020000
[3e4bfe51c5781b4] jit-backend-dump}
[3e4bfe51c57b1a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7ddb +0  80020000
[3e4bfe51c57be24] jit-backend-dump}
[3e4bfe51c57edbe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7dfb +0  7C020000
[3e4bfe51c57fa44] jit-backend-dump}
[3e4bfe51c5829a4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7e0c +0  87020000
[3e4bfe51c583623] jit-backend-dump}
[3e4bfe51c586587] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7e23 +0  8C020000
[3e4bfe51c587206] jit-backend-dump}
[3e4bfe51c58a166] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7e30 +0  9B020000
[3e4bfe51c58adef] jit-backend-dump}
[3e4bfe51c58ddcd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7e4c +0  9B020000
[3e4bfe51c58ea6e] jit-backend-dump}
[3e4bfe51c5919d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7e5e +0  A5020000
[3e4bfe51c59267f] jit-backend-dump}
[3e4bfe51c5955d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7e6c +0  B3020000
[3e4bfe51c59624f] jit-backend-dump}
[3e4bfe51c599197] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7e7f +0  BC020000
[3e4bfe51c599e10] jit-backend-dump}
[3e4bfe51c59cd1b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7e92 +0  C5020000
[3e4bfe51c59d99a] jit-backend-dump}
[3e4bfe51c5a0953] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7ea6 +0  CD020000
[3e4bfe51c5a1635] jit-backend-dump}
[3e4bfe51c5a4643] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7eb0 +0  DF020000
[3e4bfe51c5a52c3] jit-backend-dump}
[3e4bfe51c5a824b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb7ebd +0  EE020000
[3e4bfe51c5a8ec7] jit-backend-dump}
[3e4bfe51c5ac11b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb407f +0  AD3C0000
[3e4bfe51c5acdb9] jit-backend-dump}
[3e4bfe51c5b0c1b] jit-backend}
[3e4bfe51c5b46f7] {jit-log-opt-bridge
# bridge out of Guard 0x3a72068 with 70 ops
[p0, p1, p2, p3, p4, p5]
+214: guard_not_invalidated(descr=<Guard0x3a79520>) [p0, p1, p2, p3, p4, p5]
+214: guard_nonnull_class(p4, 16584240, descr=<Guard0x3a79640>) [p0, p1, p2, p3, p4, p5]
+232: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3a796a0>) [p0, p1, p2, p3, p4, p5]
+250: guard_nonnull_class(p2, ConstClass(W_Fixnum), descr=<Guard0x3a79700>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+268: guard_class(p0, 16437352, descr=<Guard0x3a73a90>) [p0, p1, p2, p3, p4, p5]
+280: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+284: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3a79760>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(< y4851 x4849)')
+303: i12 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+307: i13 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+311: i14 = int_lt(i12, i13)
+314: guard_false(i14, descr=<Guard0x3a73ad8>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+320: p15 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+324: p16 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+324: i17 = instance_ptr_eq(p0, p15)
+327: guard_true(i17, descr=<Guard0x3a73b20>) [p0, p1, p2, p3, p4, p5]
+333: guard_class(p15, 16437352, descr=<Guard0x3a73b68>) [p0, p1, p2, p3, p4, p5]
+347: p19 = getfield_gc_r(p15, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+358: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3a73bb0>) [p0, p1, p2, p3, p4, p5]
+367: p21 = getfield_gc_r(p15, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+371: p22 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+375: p23 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+379: guard_nonnull_class(p21, 16584240, descr=<Guard0x3a797c0>) [p0, p1, p2, p3, p4, p5]
+399: i25 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+403: guard_class(p23, 16438168, descr=<Guard0x3a73bf8>) [p0, p1, p2, p3, p4, p5]
+416: p27 = getfield_gc_r(p23, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+420: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x3a79820>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)')
+439: guard_class(p22, 16478448, descr=<Guard0x3a73c40>) [p0, p1, p2, p3, p4, p5]
+452: p30 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+456: p31 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+460: p32 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+464: p33 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+468: guard_class(p33, 16505296, descr=<Guard0x3a73c88>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
debug_merge_point(0, 0, '(- y4851 1)')
+480: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3a79880>) [p0, p1, p2, p3, p4, p5]
+498: i36 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+502: i38 = int_sub_ovf(i36, 1)
+506: guard_no_overflow(descr=<Guard0x3a73cd0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+512: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3a798e0>) [p0, p1, p2, p3, p4, p5]
+531: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3a79940>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+550: i41 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+561: i42 = int_lt(i41, i38)
+564: guard_false(i42, descr=<Guard0x3a73d18>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+570: i44 = int_sub_ovf(i41, 1)
+574: guard_no_overflow(descr=<Guard0x3a73d60>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+580: i45 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+584: i46 = int_lt(i45, i44)
+587: guard_false(i46, descr=<Guard0x3a73da8>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)')
+593: p47 = new_with_vtable(descr=<SizeDescr 16>)
+634: setfield_gc(p47, i25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+638: jump(p33, p21, p47, p30, p32, p23, descr=TargetToken(61039664))
+688: --end of the loop--
[3e4bfe51c5f2e14] jit-log-opt-bridge}
[3e4bfe51c7d335c] {jit-backend
[3e4bfe51c826bc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb
[3e4bfe51c830756] jit-backend-dump}
[3e4bfe51c83a466] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb83f4 +0  20000000
[3e4bfe51c83b79a] jit-backend-dump}
[3e4bfe51c83f285] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb85c5 +0  20000000
[3e4bfe51c840159] jit-backend-dump}
[3e4bfe51c843314] {jit-backend-addr
bridge out of Guard 0x3a73028 has address 0x7f4c76fb83f0 to 0x7f4c76fb85c0
       gc table: 0x7f4c76fb8340
    jump target: 0x7f4c76fb83f0
         resops: 0x7f4c76fb83fe
       failures: 0x7f4c76fb85c0
            end: 0x7f4c76fb8833
[3e4bfe51c845785] jit-backend-addr}
[3e4bfe51c848bcc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb840e +0  0D020000
[3e4bfe51c8498ea] jit-backend-dump}
[3e4bfe51c84c9b6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb842c +0  0B020000
[3e4bfe51c84d5fc] jit-backend-dump}
[3e4bfe51c85054a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8438 +0  1B020000
[3e4bfe51c851167] jit-backend-dump}
[3e4bfe51c8540dd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8450 +0  1F020000
[3e4bfe51c854d0a] jit-backend-dump}
[3e4bfe51c857c5b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8464 +0  27020000
[3e4bfe51c858882] jit-backend-dump}
[3e4bfe51c85b80a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8472 +0  35020000
[3e4bfe51c85c427] jit-backend-dump}
[3e4bfe51c85f36f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8485 +0  3E020000
[3e4bfe51c85ff99] jit-backend-dump}
[3e4bfe51c862eff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8498 +0  47020000
[3e4bfe51c863b42] jit-backend-dump}
[3e4bfe51c866ab1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb84a5 +0  56020000
[3e4bfe51c8676e4] jit-backend-dump}
[3e4bfe51c86a62c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb84b9 +0  5E020000
[3e4bfe51c86b253] jit-backend-dump}
[3e4bfe51c86e1c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb84d6 +0  5D020000
[3e4bfe51c86edff] jit-backend-dump}
[3e4bfe51c871da2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb84e7 +0  68020000
[3e4bfe51c8729c0] jit-backend-dump}
[3e4bfe51c87598b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb84fe +0  6D020000
[3e4bfe51c8765b5] jit-backend-dump}
[3e4bfe51c879546] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8517 +0  70020000
[3e4bfe51c87a16a] jit-backend-dump}
[3e4bfe51c87d0e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8529 +0  7A020000
[3e4bfe51c87dd00] jit-backend-dump}
[3e4bfe51c880cb6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8537 +0  88020000
[3e4bfe51c8818da] jit-backend-dump}
[3e4bfe51c88487a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb854a +0  91020000
[3e4bfe51c8854a7] jit-backend-dump}
[3e4bfe51c888549] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb855c +0  9B020000
[3e4bfe51c889160] jit-backend-dump}
[3e4bfe51c88c0f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8569 +0  AA020000
[3e4bfe51c88cd0f] jit-backend-dump}
[3e4bfe51c88ff60] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6627 +0  C51D0000
[3e4bfe51c890bd6] jit-backend-dump}
[3e4bfe51c8949d3] jit-backend}
[3e4bfe51c8983fb] {jit-log-opt-bridge
# bridge out of Guard 0x3a73028 with 62 ops
[p0, p1]
+198: guard_not_invalidated(descr=<Guard0x3a799a0>) [p0, p1]
+198: guard_class(p1, 16478448, descr=<Guard0x3a73df0>) [p0, p1]
+210: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+214: p4 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+218: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+222: p6 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+226: guard_class(p6, 16505296, descr=<Guard0x3a73e38>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
+240: guard_class(p0, 16437488, descr=<Guard0x3a73e80>) [p0, p1]
+252: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+256: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x3a79a00>) [p0, p1]
debug_merge_point(0, 0, '(- y4851 1)')
+276: guard_nonnull_class(p5, ConstClass(W_Fixnum), descr=<Guard0x3a79a60>) [p0, p1]
+296: i12 = getfield_gc_i(p5, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+300: i14 = int_sub_ovf(i12, 1)
+304: guard_no_overflow(descr=<Guard0x3a73ec8>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+310: guard_nonnull_class(p4, ConstClass(W_Fixnum), descr=<Guard0x3a79ac0>) [p0, p1]
+329: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3a79b20>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+348: i17 = getfield_gc_i(p4, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+352: i18 = int_lt(i17, i14)
+355: guard_false(i18, descr=<Guard0x3a73f10>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+361: p19 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+372: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3a73f58>) [p0, p1]
+381: p21 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2Fixed01.inst_w_val0 48 pure>)
+385: i22 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.LetContSize2Fixed01.inst_vals_fixed_1 40 pure>)
+389: p23 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+393: p24 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+397: guard_class(p23, 16478448, descr=<Guard0x3a73fa0>) [p0, p1]
+410: p26 = getfield_gc_r(p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+414: guard_class(p24, 16438168, descr=<Guard0x3a9c020>) [p0, p1]
+427: p28 = getfield_gc_r(p24, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+431: guard_nonnull_class(p28, ConstClass(ForwardLink), descr=<Guard0x3a79b80>) [p0, p1]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
+450: p30 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+454: p31 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+458: p32 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+462: guard_class(p26, 16505296, descr=<Guard0x3a9c068>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+475: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3a79be0>) [p0, p1]
+493: i35 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+497: i37 = int_sub_ovf(i35, 1)
+501: guard_no_overflow(descr=<Guard0x3a9c0b0>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
+507: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3a79c40>) [p0, p1]
+526: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3a79ca0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+544: i40 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+548: i41 = int_lt(i40, i37)
+551: guard_false(i41, descr=<Guard0x3a9c0f8>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)')
+557: p42 = new_with_vtable(descr=<SizeDescr 16>)
+598: setfield_gc(p42, i22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+602: jump(p26, p21, p42, p3, p32, p24, descr=TargetToken(61039664))
+640: --end of the loop--
[3e4bfe51c8cfa1e] jit-log-opt-bridge}
[3e4bfe51ca69353] {jit-backend
[3e4bfe51cab53d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb
[3e4bfe51cabb6c3] jit-backend-dump}
[3e4bfe51cac5a32] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8974 +0  20000000
[3e4bfe51cac6e69] jit-backend-dump}
[3e4bfe51cacaaa5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8b35 +0  20000000
[3e4bfe51cacb945] jit-backend-dump}
[3e4bfe51cacec5c] {jit-backend-addr
bridge out of Guard 0x3a721d0 has address 0x7f4c76fb8970 to 0x7f4c76fb8b30
       gc table: 0x7f4c76fb8900
    jump target: 0x7f4c76fb8970
         resops: 0x7f4c76fb897e
       failures: 0x7f4c76fb8b30
            end: 0x7f4c76fb8c8b
[3e4bfe51cad11e1] jit-backend-addr}
[3e4bfe51cad4753] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb898e +0  FD010000
[3e4bfe51cad54d7] jit-backend-dump}
[3e4bfe51cad85d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb89ac +0  FB010000
[3e4bfe51cad92a0] jit-backend-dump}
[3e4bfe51cadc2e2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb89b8 +0  0B020000
[3e4bfe51cadcfa8] jit-backend-dump}
[3e4bfe51cadffe2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb89d0 +0  0F020000
[3e4bfe51cae0c7a] jit-backend-dump}
[3e4bfe51cae3cb0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb89e4 +0  17020000
[3e4bfe51cae495a] jit-backend-dump}
[3e4bfe51cae79cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb89f2 +0  25020000
[3e4bfe51cae8657] jit-backend-dump}
[3e4bfe51caeb622] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8a05 +0  2E020000
[3e4bfe51caec2b7] jit-backend-dump}
[3e4bfe51caef20e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8a0e +0  41020000
[3e4bfe51caefeb8] jit-backend-dump}
[3e4bfe51caf2ebe] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8a1b +0  50020000
[3e4bfe51caf3b68] jit-backend-dump}
[3e4bfe51caf6d8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb478a +0  E2410000
[3e4bfe51caf7a57] jit-backend-dump}
[3e4bfe51cafb88e] jit-backend}
[3e4bfe51caff345] {jit-log-opt-bridge
# bridge out of Guard 0x3a721d0 with 60 ops
[p0, p1]
+134: guard_not_invalidated(descr=<Guard0x3a79d00>) [p0, p1]
+134: guard_class(p1, 16478448, descr=<Guard0x3a9c140>) [p0, p1]
+146: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+150: p4 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+154: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+158: p6 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+162: guard_class(p6, 16505296, descr=<Guard0x3a9c188>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
+176: guard_class(p0, 16437488, descr=<Guard0x3a9c1d0>) [p0, p1]
+188: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+192: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x3a79d60>) [p0, p1]
debug_merge_point(0, 0, '(- y4851 1)')
+212: guard_nonnull_class(p5, ConstClass(W_Fixnum), descr=<Guard0x3a79dc0>) [p0, p1]
+232: i12 = getfield_gc_i(p5, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+236: i14 = int_sub_ovf(i12, 1)
+240: guard_no_overflow(descr=<Guard0x3a9c218>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+246: guard_nonnull_class(p4, ConstClass(W_Fixnum), descr=<Guard0x3a79e20>) [p0, p1]
+265: guard_nonnull(p3, descr=<Guard0x3a9c260>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+274: i16 = getfield_gc_i(p4, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+278: i17 = int_lt(i16, i14)
+281: guard_true(i17, descr=<Guard0x3a9c2a8>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+287: p18 = new_with_vtable(descr=<SizeDescr 24>)
+331: p19 = new_with_vtable(descr=<SizeDescr 48>)
+349: setfield_gc(p19, ConstPtr(ptr20), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+360: setfield_gc(p19, ConstPtr(ptr21), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+364: p22 = new_with_vtable(descr=<SizeDescr 16>)
+375: setfield_gc(p22, i14, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+379: setfield_gc(p19, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+383: setfield_gc(p19, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+387: setfield_gc(p19, p4, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+391: p23 = new_with_vtable(descr=<SizeDescr 24>)
+402: p24 = new_with_vtable(descr=<SizeDescr 48>)
+413: setfield_gc(p24, p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+417: p25 = new_with_vtable(descr=<SizeDescr 48>)
+429: setfield_gc(p25, ConstPtr(ptr20), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+441: setfield_gc(p25, ConstPtr(ptr26), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+446: setfield_gc(p25, p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+451: setfield_gc(p25, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+456: setfield_gc(p25, p4, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+461: setfield_gc(p24, p25, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+465: setfield_gc(p24, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+476: setfield_gc(p24, ConstPtr(ptr27), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+480: p28 = new_with_vtable(descr=<SizeDescr 24>)
+492: setfield_gc(p28, p0, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+496: setfield_gc(p28, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+504: setfield_gc(p24, p28, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+508: setfield_gc(p23, p24, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+512: setfield_gc(p23, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+520: setfield_gc(p18, p19, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+524: setfield_gc(p18, p23, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+528: jump(p18, p24, descr=TargetToken(60615520))
+560: --end of the loop--
[3e4bfe51cb2cfe2] jit-log-opt-bridge}
[3e4bfe51cd8fbea] {jit-backend
[3e4bfe51cde7314] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8e60 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C2202000048FF042500783C038139A81600000F85000000004C8B79084983FF01720741813F900F00000F8500000000813A100A01000F85000000004C8B7A0841813F30B700000F85000000004D8B77184983FE01720741813E601400000F85000000004D8B6E084983ED010F80000000004C8B72104983FE01720741813E705402000F85000000004D8B67284983FC01720841813C24601400000F85000000004D8B57204983FA01720741813A601400000F85000000004D8B7C24084D39EF0F8C000000004D8B6E084C39E90F850000000041817D00A81600000F85000000004D8B75204C8B3D93FEFFFF4D39FE0F85000000004D8B7D284D8B75104D8B65184983FF01720741813F705402000F85000000004D8B6A0841813C24D81900000F85000000004D8B5424084983FA01720741813A900F00000F850000000041813E30B700000F85000000004D8B56184D8B4E204D8B4628498B7E08813F102001000F85000000004983F8017207418138601400000F85000000004D8B70084983EE010F80000000004983F9017207418139601400000F85000000004983FA01720741813A601400000F8500000000498B71084C39F60F8C000000004883EE010F80000000004D8B72084939F60F8C00000000488B0C25F091F900488D5110483B14251092F9000F876100000048891425F091F90048C701601400004C8969084889BD300100004C89F84C89D74C8985380100004C89E249BBB031FB764C7F000041FFE30F1F400048C7442408FFFFFF0049BBA08CFB764C7F00004C895D204D8D9B5086FFFF41FFD3E9B8FDFFFF49BB508EFB764C7F00004C895D204D8D9BA08CFFFF41FFD3E98AFFFFFFFF35A7FCFFFF49BBB08CFB764C7F000041534D8D9B5083FFFF41FFE3FF3593FCFFFF49BBC08CFB764C7F000041534D8D9B4083FFFF41FFE3FF357FFCFFFF49BBD08CFB764C7F000041534D8D9B3083FFFF41FFE3FF356BFCFFFF49BBE08CFB764C7F000041534D8D9B2083FFFF41FFE3FF3557FCFFFF49BBF08CFB764C7F000041534D8D9B1083FFFF41FFE3FF3543FCFFFF49BB008DFB764C7F000041534D8D9B0083FFFF41FFE3FF352FFCFFFF49BB108DFB764C7F000041534D8D9BF082FFFF41FFE3FF351BFCFFFF49BB208DFB764C7F000041534D8D9BE082FFFF41FFE3FF3507FCFFFF49BB308DFB764C7F000041534D8D9BD082FFFF41FFE3FF35F3FBFFFF49BB408DFB764C7F000041534D8D9BC082FFFF41FFE3FF35DFFBFFFF49BB508DFB764C7F000041534D8D9BB082FFFF41FFE3FF35CBFBFFFF49BB608DFB764C7F000041534D8D9BA082FFFF41FFE3FF35B7FBFFFF49BB708DFB764C7F000041534D8D9B9082FFFF41FFE3FF35ABFBFFFF49BB808DFB764C7F000041534D8D9B8082FFFF41FFE3FF3597FBFFFF49BB908DFB764C7F000041534D8D9B7082FFFF41FFE3FF3583FBFFFF49BBA08DFB764C7F000041534D8D9B6082FFFF41FFE3FF356FFBFFFF49BBB08DFB764C7F000041534D8D9B5082FFFF41FFE3FF355BFBFFFF49BBC08DFB764C7F000041534D8D9B4082FFFF41FFE3FF3547FBFFFF49BBD08DFB764C7F000041534D8D9B3082FFFF41FFE3FF3533FBFFFF49BBE08DFB764C7F000041534D8D9B2082FFFF41FFE3FF351FFBFFFF49BBF08DFB764C7F000041534D8D9B1082FFFF41FFE3FF350BFBFFFF49BB008EFB764C7F000041534D8D9B0082FFFF41FFE3FF35F7FAFFFF49BB108EFB764C7F000041534D8D9BF081FFFF41FFE3FF35E3FAFFFF49BB208EFB764C7F000041534D8D9BE081FFFF41FFE3FF35CFFAFFFF49BB308EFB764C7F000041534D8D9BD081FFFF41FFE3FF35BBFAFFFF49BB408EFB764C7F000041534D8D9BC081FFFF41FFE3
[3e4bfe51cdf0376] jit-backend-dump}
[3e4bfe51cdfaa2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8f44 +0  20000000
[3e4bfe51cdfbdd0] jit-backend-dump}
[3e4bfe51cdffb6e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9175 +0  20000000
[3e4bfe51ce00a1a] jit-backend-dump}
[3e4bfe51ce03cd0] {jit-backend-addr
bridge out of Guard 0x3a72c38 has address 0x7f4c76fb8f40 to 0x7f4c76fb9170
       gc table: 0x7f4c76fb8e60
    jump target: 0x7f4c76fb8f40
         resops: 0x7f4c76fb8f4e
       failures: 0x7f4c76fb9170
            end: 0x7f4c76fb948b
[3e4bfe51ce061da] jit-backend-addr}
[3e4bfe51ce0956c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8f5e +0  51020000
[3e4bfe51ce0a48a] jit-backend-dump}
[3e4bfe51ce0d6c5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8f75 +0  56020000
[3e4bfe51ce0e366] jit-backend-dump}
[3e4bfe51ce117f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8f81 +0  82020000
[3e4bfe51ce124cb] jit-backend-dump}
[3e4bfe51ce155c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8f92 +0  8D020000
[3e4bfe51ce16276] jit-backend-dump}
[3e4bfe51ce19232] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8fa9 +0  92020000
[3e4bfe51ce19ed0] jit-backend-dump}
[3e4bfe51ce1ce76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8fb7 +0  A0020000
[3e4bfe51ce1dad4] jit-backend-dump}
[3e4bfe51ce20a81] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8fce +0  A5020000
[3e4bfe51ce2170a] jit-backend-dump}
[3e4bfe51ce246b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8fe6 +0  A9020000
[3e4bfe51ce25348] jit-backend-dump}
[3e4bfe51ce282e0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb8ffd +0  AE020000
[3e4bfe51ce28f50] jit-backend-dump}
[3e4bfe51ce2becf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb900b +0  BC020000
[3e4bfe51ce2cb57] jit-backend-dump}
[3e4bfe51ce2faec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9018 +0  CB020000
[3e4bfe51ce30771] jit-backend-dump}
[3e4bfe51ce336ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9026 +0  D9020000
[3e4bfe51ce3437c] jit-backend-dump}
[3e4bfe51ce3730a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb903a +0  E1020000
[3e4bfe51ce37fba] jit-backend-dump}
[3e4bfe51ce3afb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9059 +0  DE020000
[3e4bfe51ce3bc42] jit-backend-dump}
[3e4bfe51ce3ec1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb906b +0  E8020000
[3e4bfe51ce3f8b2] jit-backend-dump}
[3e4bfe51ce42834] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9083 +0  EC020000
[3e4bfe51ce434c3] jit-backend-dump}
[3e4bfe51ce46454] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9090 +0  FB020000
[3e4bfe51ce470e9] jit-backend-dump}
[3e4bfe51ce4a07d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb90ac +0  FB020000
[3e4bfe51ce4ad06] jit-backend-dump}
[3e4bfe51ce4dca6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb90bf +0  04030000
[3e4bfe51ce4e938] jit-backend-dump}
[3e4bfe51ce51858] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb90cd +0  12030000
[3e4bfe51ce524c2] jit-backend-dump}
[3e4bfe51ce55432] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb90e0 +0  1B030000
[3e4bfe51ce560a2] jit-backend-dump}
[3e4bfe51ce58fce] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb90f3 +0  24030000
[3e4bfe51ce59c60] jit-backend-dump}
[3e4bfe51ce5cc0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9100 +0  33030000
[3e4bfe51ce5d8a5] jit-backend-dump}
[3e4bfe51ce63cd5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb910a +0  45030000
[3e4bfe51ce64b56] jit-backend-dump}
[3e4bfe51ce680d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9117 +0  54030000
[3e4bfe51ce68e15] jit-backend-dump}
[3e4bfe51ce6c173] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb5dda +0  62310000
[3e4bfe51ce6ceaa] jit-backend-dump}
[3e4bfe51ce70ddc] jit-backend}
[3e4bfe51ce7485f] {jit-log-opt-bridge
# bridge out of Guard 0x3a72c38 with 83 ops
[p0, p1]
+246: guard_class(p1, 16437352, descr=<Guard0x3a79e80>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+262: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3a79ee0>) [p0, p1]
debug_merge_point(0, 0, '(- x4849 1)')
+281: guard_not_invalidated(descr=<Guard0x3a9c2f0>) [p0, p1]
+281: guard_class(p0, 16499664, descr=<Guard0x3a9c338>) [p0, p1]
+293: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+297: guard_class(p6, 16478448, descr=<Guard0x3a9c380>) [p0, p1]
+310: p8 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+314: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x3a79f40>) [p0, p1]
+333: i10 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+337: i12 = int_sub_ovf(i10, 1)
+341: guard_no_overflow(descr=<Guard0x3a9c3c8>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4862 AppRand1 y4851 z4853)')
+347: p13 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+351: guard_nonnull_class(p13, 16584240, descr=<Guard0x3a79fa0>) [p0, p1]
+370: p15 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+374: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3aa0020>) [p0, p1]
+394: p17 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+398: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x3aa0080>) [p0, p1]
+417: p19 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+417: i20 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+422: i21 = int_lt(i20, i12)
+425: guard_false(i21, descr=<Guard0x3a9c410>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+431: p22 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+435: p23 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+435: i24 = instance_ptr_eq(p1, p22)
+438: guard_true(i24, descr=<Guard0x3a9c458>) [p0, p1]
+444: guard_class(p22, 16437352, descr=<Guard0x3a9c4a0>) [p0, p1]
+458: p26 = getfield_gc_r(p22, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+469: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x3a9c4e8>) [p0, p1]
+478: p28 = getfield_gc_r(p22, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+482: p29 = getfield_gc_r(p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+486: p30 = getfield_gc_r(p22, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+490: guard_nonnull_class(p28, 16584240, descr=<Guard0x3aa00e0>) [p0, p1]
+509: i32 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+513: guard_class(p30, 16438168, descr=<Guard0x3a9c530>) [p0, p1]
+527: p34 = getfield_gc_r(p30, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+532: guard_nonnull_class(p34, ConstClass(ForwardLink), descr=<Guard0x3aa0140>) [p0, p1]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)')
+551: guard_class(p29, 16478448, descr=<Guard0x3a9c578>) [p0, p1]
+564: p37 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+568: p38 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+572: p39 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+576: p40 = getfield_gc_r(p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+580: guard_class(p40, 16505296, descr=<Guard0x3a9c5c0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
debug_merge_point(0, 0, '(- y4851 1)')
+592: guard_nonnull_class(p39, ConstClass(W_Fixnum), descr=<Guard0x3aa01a0>) [p0, p1]
+611: i43 = getfield_gc_i(p39, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+615: i45 = int_sub_ovf(i43, 1)
+619: guard_no_overflow(descr=<Guard0x3a9c608>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+625: guard_nonnull_class(p38, ConstClass(W_Fixnum), descr=<Guard0x3aa0200>) [p0, p1]
+644: guard_nonnull_class(p37, ConstClass(W_Fixnum), descr=<Guard0x3aa0260>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+663: i48 = getfield_gc_i(p38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+667: i49 = int_lt(i48, i45)
+670: guard_false(i49, descr=<Guard0x3a9c650>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+676: i51 = int_sub_ovf(i48, 1)
+680: guard_no_overflow(descr=<Guard0x3a9c698>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+686: i52 = getfield_gc_i(p37, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+690: i53 = int_lt(i52, i51)
+693: guard_false(i53, descr=<Guard0x3a9c6e0>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)')
+699: p54 = new_with_vtable(descr=<SizeDescr 16>)
+740: setfield_gc(p54, i32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+744: jump(p40, p28, p54, p37, p39, p30, descr=TargetToken(61039664))
+784: --end of the loop--
[3e4bfe51cebaaff] jit-log-opt-bridge}
[3e4bfe51d1205cc] {jit-backend
[3e4bfe51d184a72] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb
[3e4bfe51d18d092] jit-backend-dump}
[3e4bfe51d197a5c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb96e4 +0  20000000
[3e4bfe51d198ecd] jit-backend-dump}
[3e4bfe51d19ce12] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb98d5 +0  20000000
[3e4bfe51d19dd3e] jit-backend-dump}
[3e4bfe51d1a1003] {jit-backend-addr
bridge out of Guard 0x3a72890 has address 0x7f4c76fb96e0 to 0x7f4c76fb98d0
       gc table: 0x7f4c76fb9620
    jump target: 0x7f4c76fb96e0
         resops: 0x7f4c76fb96ee
       failures: 0x7f4c76fb98d0
            end: 0x7f4c76fb9b7b
[3e4bfe51d1a3487] jit-backend-addr}
[3e4bfe51d1a6908] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9704 +0  27020000
[3e4bfe51d1a77c3] jit-backend-dump}
[3e4bfe51d1aaa1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9716 +0  31020000
[3e4bfe51d1ab732] jit-backend-dump}
[3e4bfe51d1ae848] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9728 +0  3B020000
[3e4bfe51d1af4ff] jit-backend-dump}
[3e4bfe51d1b24d9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9734 +0  4B020000
[3e4bfe51d1b31c7] jit-backend-dump}
[3e4bfe51d1b61bd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb974b +0  50020000
[3e4bfe51d1b6e4c] jit-backend-dump}
[3e4bfe51d1b9e0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb975c +0  5B020000
[3e4bfe51d1baa8a] jit-backend-dump}
[3e4bfe51d1bda50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9769 +0  6A020000
[3e4bfe51d1be6e8] jit-backend-dump}
[3e4bfe51d1c16b0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9777 +0  78020000
[3e4bfe51d1c2326] jit-backend-dump}
[3e4bfe51d1c53c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb978b +0  80020000
[3e4bfe51d1c6066] jit-backend-dump}
[3e4bfe51d1c9046] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb97ab +0  7C020000
[3e4bfe51d1c9d65] jit-backend-dump}
[3e4bfe51d1ccd92] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb97bc +0  87020000
[3e4bfe51d1cda33] jit-backend-dump}
[3e4bfe51d1d0a30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb97d3 +0  8C020000
[3e4bfe51d1d16d7] jit-backend-dump}
[3e4bfe51d1d47d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb97e0 +0  9B020000
[3e4bfe51d1d5466] jit-backend-dump}
[3e4bfe51d1d84ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb97fc +0  9B020000
[3e4bfe51d1d91be] jit-backend-dump}
[3e4bfe51d1dc1ba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb980e +0  A5020000
[3e4bfe51d1dce49] jit-backend-dump}
[3e4bfe51d1dfe02] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb981c +0  B3020000
[3e4bfe51d1e0a97] jit-backend-dump}
[3e4bfe51d1e3a99] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb982f +0  BC020000
[3e4bfe51d1e4744] jit-backend-dump}
[3e4bfe51d1e76f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9842 +0  C5020000
[3e4bfe51d1e839b] jit-backend-dump}
[3e4bfe51d1eb37e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9856 +0  CD020000
[3e4bfe51d1ec026] jit-backend-dump}
[3e4bfe51d1ef028] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9860 +0  DF020000
[3e4bfe51d1efceb] jit-backend-dump}
[3e4bfe51d1f2cd2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb986d +0  EE020000
[3e4bfe51d1f396d] jit-backend-dump}
[3e4bfe51d1f6c0d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb528b +0  51440000
[3e4bfe51d1f78ab] jit-backend-dump}
[3e4bfe51d1fb690] jit-backend}
[3e4bfe51d1ff1ef] {jit-log-opt-bridge
# bridge out of Guard 0x3a72890 with 70 ops
[p0, p1, p2, p3, p4, p5]
+214: guard_not_invalidated(descr=<Guard0x3aa02c0>) [p0, p1, p2, p3, p4, p5]
+214: guard_nonnull_class(p4, 16584240, descr=<Guard0x3aa0320>) [p0, p1, p2, p3, p4, p5]
+232: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3aa0380>) [p0, p1, p2, p3, p4, p5]
+250: guard_nonnull_class(p2, ConstClass(W_Fixnum), descr=<Guard0x3aa03e0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+268: guard_class(p0, 16437352, descr=<Guard0x3a9c728>) [p0, p1, p2, p3, p4, p5]
+280: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+284: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3aa0440>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(< y4851 x4849)')
+303: i12 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+307: i13 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+311: i14 = int_lt(i12, i13)
+314: guard_false(i14, descr=<Guard0x3a9c770>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+320: p15 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+324: p16 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+324: i17 = instance_ptr_eq(p0, p15)
+327: guard_true(i17, descr=<Guard0x3a9c7b8>) [p0, p1, p2, p3, p4, p5]
+333: guard_class(p15, 16437352, descr=<Guard0x3a9c800>) [p0, p1, p2, p3, p4, p5]
+347: p19 = getfield_gc_r(p15, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+358: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3a9c848>) [p0, p1, p2, p3, p4, p5]
+367: p21 = getfield_gc_r(p15, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+371: p22 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+375: p23 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+379: guard_nonnull_class(p21, 16584240, descr=<Guard0x3aa04a0>) [p0, p1, p2, p3, p4, p5]
+399: i25 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+403: guard_class(p23, 16437488, descr=<Guard0x3a9c890>) [p0, p1, p2, p3, p4, p5]
+416: p27 = getfield_gc_r(p23, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+420: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x3aa0500>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)')
+439: guard_class(p22, 16478448, descr=<Guard0x3a9c8d8>) [p0, p1, p2, p3, p4, p5]
+452: p30 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+456: p31 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+460: p32 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+464: p33 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+468: guard_class(p33, 16505296, descr=<Guard0x3a9c920>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
debug_merge_point(0, 0, '(- y4851 1)')
+480: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3aa0560>) [p0, p1, p2, p3, p4, p5]
+498: i36 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+502: i38 = int_sub_ovf(i36, 1)
+506: guard_no_overflow(descr=<Guard0x3a9c968>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+512: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3aa05c0>) [p0, p1, p2, p3, p4, p5]
+531: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3aa0620>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+550: i41 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+561: i42 = int_lt(i41, i38)
+564: guard_false(i42, descr=<Guard0x3a9c9b0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+570: i44 = int_sub_ovf(i41, 1)
+574: guard_no_overflow(descr=<Guard0x3a9c9f8>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+580: i45 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+584: i46 = int_lt(i45, i44)
+587: guard_false(i46, descr=<Guard0x3a9ca40>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)')
+593: p47 = new_with_vtable(descr=<SizeDescr 16>)
+634: setfield_gc(p47, i25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+638: jump(p33, p21, p47, p30, p32, p23, descr=TargetToken(61039664))
+688: --end of the loop--
[3e4bfe51d240a5f] jit-log-opt-bridge}
[3e4bfe51d3387eb] {jit-backend
[3e4bfe51d389887] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9c
[3e4bfe51d38f637] jit-backend-dump}
[3e4bfe51d399394] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9c84 +0  20000000
[3e4bfe51d39a5d2] jit-backend-dump}
[3e4bfe51d39e07a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9e05 +0  20000000
[3e4bfe51d39ee10] jit-backend-dump}
[3e4bfe51d3a20aa] {jit-backend-addr
bridge out of Guard 0x3a31da8 has address 0x7f4c76fb9c80 to 0x7f4c76fb9e00
       gc table: 0x7f4c76fb9c20
    jump target: 0x7f4c76fb9c80
         resops: 0x7f4c76fb9c8e
       failures: 0x7f4c76fb9e00
            end: 0x7f4c76fb9f07
[3e4bfe51d3a440b] jit-backend-addr}
[3e4bfe51d3a7c5f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9c9b +0  C0010000
[3e4bfe51d3a8a75] jit-backend-dump}
[3e4bfe51d3abcb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9cad +0  CA010000
[3e4bfe51d3ac973] jit-backend-dump}
[3e4bfe51d3afa21] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9cbf +0  D4010000
[3e4bfe51d3b06ea] jit-backend-dump}
[3e4bfe51d3b3742] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9ccb +0  E4010000
[3e4bfe51d3b4432] jit-backend-dump}
[3e4bfe51d3b743e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9ce2 +0  E9010000
[3e4bfe51d3b811f] jit-backend-dump}
[3e4bfe51d3bb12e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9cf3 +0  F4010000
[3e4bfe51d3bbe00] jit-backend-dump}
[3e4bfe51d3bf0a6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb3f7c +0  005D0000
[3e4bfe51d3bfdb3] jit-backend-dump}
[3e4bfe51d3c3bb9] jit-backend}
[3e4bfe51d3c7679] {jit-log-opt-bridge
# bridge out of Guard 0x3a31da8 with 47 ops
[p0, p1, p2, p3, p4, p5]
+118: guard_not_invalidated(descr=<Guard0x3aa0680>) [p0, p1, p2, p3, p4, p5]
+118: guard_nonnull(p4, descr=<Guard0x3a9ca88>) [p0, p1, p2, p3, p4, p5]
+127: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3aa06e0>) [p0, p1, p2, p3, p4, p5]
+145: guard_nonnull_class(p2, ConstClass(W_Fixnum), descr=<Guard0x3aa0740>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+163: guard_class(p0, 16437352, descr=<Guard0x3a9cad0>) [p0, p1, p2, p3, p4, p5]
+175: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+179: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x3aa07a0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(< y4851 x4849)')
+198: i11 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+202: i12 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+206: i13 = int_lt(i11, i12)
+209: guard_true(i13, descr=<Guard0x3a9cb18>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+215: p14 = new_with_vtable(descr=<SizeDescr 24>)
+265: p15 = new_with_vtable(descr=<SizeDescr 48>)
+283: setfield_gc(p15, ConstPtr(ptr16), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+294: setfield_gc(p15, ConstPtr(ptr17), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+298: setfield_gc(p15, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+302: setfield_gc(p15, p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+313: setfield_gc(p15, p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+317: p18 = new_with_vtable(descr=<SizeDescr 24>)
+328: p19 = new_with_vtable(descr=<SizeDescr 48>)
+339: setfield_gc(p19, p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+343: p20 = new_with_vtable(descr=<SizeDescr 48>)
+354: setfield_gc(p20, ConstPtr(ptr16), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+365: setfield_gc(p20, ConstPtr(ptr21), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+369: setfield_gc(p20, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+373: setfield_gc(p20, p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+377: setfield_gc(p20, p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+381: setfield_gc(p19, p20, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+385: setfield_gc(p19, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+396: setfield_gc(p19, ConstPtr(ptr22), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+400: p23 = new_with_vtable(descr=<SizeDescr 24>)
+411: setfield_gc(p23, p0, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+415: setfield_gc(p23, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+423: setfield_gc(p19, p23, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+427: setfield_gc(p18, p19, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+431: setfield_gc(p18, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+439: setfield_gc(p14, p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+443: setfield_gc(p14, p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+447: jump(p14, p19, descr=TargetToken(60615520))
+480: --end of the loop--
[3e4bfe51d3f0816] jit-log-opt-bridge}
[3e4bfe51d679920] {jit-backend
[3e4bfe51d7323a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba
[3e4bfe51d73b9e7] jit-backend-dump}
[3e4bfe51d746116] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba154 +0  20000000
[3e4bfe51d747572] jit-backend-dump}
[3e4bfe51d74b3c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba435 +0  20000000
[3e4bfe51d74c2af] jit-backend-dump}
[3e4bfe51d74f5f4] {jit-backend-addr
bridge out of Guard 0x3a72380 has address 0x7f4c76fba150 to 0x7f4c76fba430
       gc table: 0x7f4c76fba080
    jump target: 0x7f4c76fba150
         resops: 0x7f4c76fba15e
       failures: 0x7f4c76fba430
            end: 0x7f4c76fba6a3
[3e4bfe51d751cb1] jit-backend-addr}
[3e4bfe51d75532d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba16e +0  1D030000
[3e4bfe51d75616e] jit-backend-dump}
[3e4bfe51d759473] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba18c +0  1B030000
[3e4bfe51d75a118] jit-backend-dump}
[3e4bfe51d75d277] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba198 +0  2B030000
[3e4bfe51d75defc] jit-backend-dump}
[3e4bfe51d761012] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba1b0 +0  2F030000
[3e4bfe51d761c8b] jit-backend-dump}
[3e4bfe51d764d58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba1c4 +0  37030000
[3e4bfe51d76599d] jit-backend-dump}
[3e4bfe51d768a54] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba1d2 +0  45030000
[3e4bfe51d7696b2] jit-backend-dump}
[3e4bfe51d76c756] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba1e5 +0  4E030000
[3e4bfe51d76d392] jit-backend-dump}
[3e4bfe51d7704c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba1f8 +0  57030000
[3e4bfe51d771134] jit-backend-dump}
[3e4bfe51d7741f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba205 +0  66030000
[3e4bfe51d774e36] jit-backend-dump}
[3e4bfe51d777f4c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba219 +0  6E030000
[3e4bfe51d778bb0] jit-backend-dump}
[3e4bfe51d77bd03] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba236 +0  6D030000
[3e4bfe51d77c9ad] jit-backend-dump}
[3e4bfe51d77fb62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba247 +0  78030000
[3e4bfe51d780812] jit-backend-dump}
[3e4bfe51d783940] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba25e +0  7D030000
[3e4bfe51d7845ba] jit-backend-dump}
[3e4bfe51d7876ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba277 +0  80030000
[3e4bfe51d788318] jit-backend-dump}
[3e4bfe51d78b468] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba289 +0  8A030000
[3e4bfe51d78c149] jit-backend-dump}
[3e4bfe51d78f268] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba297 +0  98030000
[3e4bfe51d78fefd] jit-backend-dump}
[3e4bfe51d792feb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba2a9 +0  A2030000
[3e4bfe51d793c89] jit-backend-dump}
[3e4bfe51d796d18] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba2b2 +0  B5030000
[3e4bfe51d7979b9] jit-backend-dump}
[3e4bfe51d79aa26] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba2bf +0  C4030000
[3e4bfe51d79b6da] jit-backend-dump}
[3e4bfe51d79ea1f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4852 +0  FA580000
[3e4bfe51d79f72f] jit-backend-dump}
[3e4bfe51d7a37dc] jit-backend}
[3e4bfe51d7a732f] {jit-log-opt-bridge
# bridge out of Guard 0x3a72380 with 102 ops
[p0, p1]
+230: guard_not_invalidated(descr=<Guard0x3aa0800>) [p0, p1]
+230: guard_class(p1, 16478448, descr=<Guard0x3a9cb60>) [p0, p1]
+242: p3 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+246: p4 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+250: p5 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+254: p6 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+258: guard_class(p6, 16505296, descr=<Guard0x3a9cba8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
+272: guard_class(p0, 16437488, descr=<Guard0x3a9cbf0>) [p0, p1]
+284: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+288: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x3aa0860>) [p0, p1]
debug_merge_point(0, 0, '(- y4851 1)')
+308: guard_nonnull_class(p5, ConstClass(W_Fixnum), descr=<Guard0x3aa08c0>) [p0, p1]
+328: i12 = getfield_gc_i(p5, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+332: i14 = int_sub_ovf(i12, 1)
+336: guard_no_overflow(descr=<Guard0x3a9cc38>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+342: guard_nonnull_class(p4, ConstClass(W_Fixnum), descr=<Guard0x3aa0920>) [p0, p1]
+361: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3aa0980>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+380: i17 = getfield_gc_i(p4, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+384: i18 = int_lt(i17, i14)
+387: guard_false(i18, descr=<Guard0x3a9cc80>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+393: p19 = getfield_gc_r(p0, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+404: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3a9ccc8>) [p0, p1]
+413: p21 = getfield_gc_r(p0, descr=<FieldP pycket.small_list.LetContSize2Fixed01.inst_w_val0 48 pure>)
+417: i22 = getfield_gc_i(p0, descr=<FieldS pycket.small_list.LetContSize2Fixed01.inst_vals_fixed_1 40 pure>)
+421: p23 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+425: p24 = getfield_gc_r(p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+429: guard_class(p23, 16478448, descr=<Guard0x3a9cd10>) [p0, p1]
+442: p26 = getfield_gc_r(p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+446: guard_class(p24, 16437352, descr=<Guard0x3a9cd58>) [p0, p1]
+459: p28 = getfield_gc_r(p24, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+463: guard_nonnull_class(p28, ConstClass(ForwardLink), descr=<Guard0x3aa09e0>) [p0, p1]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
+482: p30 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+486: p31 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+490: p32 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+494: guard_class(p26, 16505296, descr=<Guard0x3a9cda0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+507: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3aa0a40>) [p0, p1]
+525: i35 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+529: i37 = int_sub_ovf(i35, 1)
+533: guard_no_overflow(descr=<Guard0x3a9cde8>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
+539: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3aa0aa0>) [p0, p1]
+557: guard_nonnull(p32, descr=<Guard0x3a9ce30>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+566: i39 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+570: i40 = int_lt(i39, i37)
+573: guard_true(i40, descr=<Guard0x3a9ce78>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+579: p41 = new_with_vtable(descr=<SizeDescr 24>)
+626: p42 = new_with_vtable(descr=<SizeDescr 48>)
+644: setfield_gc(p42, ConstPtr(ptr43), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+655: setfield_gc(p42, ConstPtr(ptr44), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+659: p45 = new_with_vtable(descr=<SizeDescr 16>)
+670: setfield_gc(p45, i37, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+674: setfield_gc(p42, p45, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+678: setfield_gc(p42, p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+682: setfield_gc(p42, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+686: p46 = new_with_vtable(descr=<SizeDescr 24>)
+697: p47 = new_with_vtable(descr=<SizeDescr 48>)
+715: setfield_gc(p47, p28, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+719: p48 = new_with_vtable(descr=<SizeDescr 48>)
+737: setfield_gc(p48, ConstPtr(ptr43), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+748: setfield_gc(p48, ConstPtr(ptr49), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+752: setfield_gc(p48, p45, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+756: setfield_gc(p48, p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+760: setfield_gc(p48, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+764: setfield_gc(p47, p48, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+775: p50 = new_with_vtable(descr=<SizeDescr 64>)
+786: setfield_gc(p50, p28, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+790: setfield_gc(p50, p26, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+794: setfield_gc(p50, p24, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+805: setfield_gc(p50, ConstPtr(ptr51), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+809: setfield_gc(p50, p21, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_0 40 pure>)
+813: p52 = new_with_vtable(descr=<SizeDescr 16>)
+825: setfield_gc(p52, i22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+829: setfield_gc(p50, p52, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_1 48 pure>)
+833: setfield_gc(p50, p3, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_2 56 pure>)
+837: setfield_gc(p47, p50, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+848: setfield_gc(p47, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+852: p54 = new_with_vtable(descr=<SizeDescr 24>)
+863: setfield_gc(p54, p50, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+867: setfield_gc(p54, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+875: setfield_gc(p47, p54, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+879: setfield_gc(p46, p47, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+883: setfield_gc(p46, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+891: setfield_gc(p41, p42, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+902: setfield_gc(p41, p46, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+906: jump(p41, p47, descr=TargetToken(60615520))
+944: --end of the loop--
[3e4bfe51d7f1e78] jit-log-opt-bridge}
[3e4bfe51d8f2609] {jit-backend
[3e4bfe51d936639] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba
[3e4bfe51d93c44b] jit-backend-dump}
[3e4bfe51d9468f8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba7a4 +0  20000000
[3e4bfe51d947c3e] jit-backend-dump}
[3e4bfe51d94b968] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba925 +0  20000000
[3e4bfe51d94c7af] jit-backend-dump}
[3e4bfe51d94fa09] {jit-backend-addr
bridge out of Guard 0x3a734f0 has address 0x7f4c76fba7a0 to 0x7f4c76fba920
       gc table: 0x7f4c76fba740
    jump target: 0x7f4c76fba7a0
         resops: 0x7f4c76fba7ae
       failures: 0x7f4c76fba920
            end: 0x7f4c76fbaa27
[3e4bfe51d951e99] jit-backend-addr}
[3e4bfe51d955256] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba7bb +0  C0010000
[3e4bfe51d95605d] jit-backend-dump}
[3e4bfe51d9593c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba7cd +0  CA010000
[3e4bfe51d95a05c] jit-backend-dump}
[3e4bfe51d95d0ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba7df +0  D4010000
[3e4bfe51d95dd58] jit-backend-dump}
[3e4bfe51d960d73] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba7eb +0  E4010000
[3e4bfe51d961a02] jit-backend-dump}
[3e4bfe51d9649d6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba802 +0  E9010000
[3e4bfe51d965662] jit-backend-dump}
[3e4bfe51d96864f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fba813 +0  F4010000
[3e4bfe51d9692d8] jit-backend-dump}
[3e4bfe51d96c519] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb72dc +0  C0340000
[3e4bfe51d96d1b4] jit-backend-dump}
[3e4bfe51d97109a] jit-backend}
[3e4bfe51d974b9d] {jit-log-opt-bridge
# bridge out of Guard 0x3a734f0 with 47 ops
[p0, p1, p2, p3, p4, p5]
+118: guard_not_invalidated(descr=<Guard0x3aa0b00>) [p0, p1, p2, p3, p4, p5]
+118: guard_nonnull(p4, descr=<Guard0x3a9cec0>) [p0, p1, p2, p3, p4, p5]
+127: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3aa0b60>) [p0, p1, p2, p3, p4, p5]
+145: guard_nonnull_class(p2, ConstClass(W_Fixnum), descr=<Guard0x3aa0bc0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+163: guard_class(p0, 16437488, descr=<Guard0x3a9cf08>) [p0, p1, p2, p3, p4, p5]
+175: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+179: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x3aa0c20>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(< y4851 x4849)')
+198: i11 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+202: i12 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+206: i13 = int_lt(i11, i12)
+209: guard_true(i13, descr=<Guard0x3a9cf50>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+215: p14 = new_with_vtable(descr=<SizeDescr 24>)
+265: p15 = new_with_vtable(descr=<SizeDescr 48>)
+283: setfield_gc(p15, ConstPtr(ptr16), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+294: setfield_gc(p15, ConstPtr(ptr17), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+298: setfield_gc(p15, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+302: setfield_gc(p15, p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+313: setfield_gc(p15, p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+317: p18 = new_with_vtable(descr=<SizeDescr 24>)
+328: p19 = new_with_vtable(descr=<SizeDescr 48>)
+339: setfield_gc(p19, p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+343: p20 = new_with_vtable(descr=<SizeDescr 48>)
+354: setfield_gc(p20, ConstPtr(ptr16), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+365: setfield_gc(p20, ConstPtr(ptr21), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+369: setfield_gc(p20, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+373: setfield_gc(p20, p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+377: setfield_gc(p20, p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+381: setfield_gc(p19, p20, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+385: setfield_gc(p19, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+396: setfield_gc(p19, ConstPtr(ptr22), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+400: p23 = new_with_vtable(descr=<SizeDescr 24>)
+411: setfield_gc(p23, p0, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+415: setfield_gc(p23, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+423: setfield_gc(p19, p23, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+427: setfield_gc(p18, p19, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+431: setfield_gc(p18, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+439: setfield_gc(p14, p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+443: setfield_gc(p14, p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+447: jump(p14, p19, descr=TargetToken(60615520))
+480: --end of the loop--
[3e4bfe51d99e541] jit-log-opt-bridge}
[3e4bfe51dbbe493] {jit-backend
[3e4bfe51dc11253] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbab
[3e4bfe51dc18b91] jit-backend-dump}
[3e4bfe51dc22a57] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbac34 +0  20000000
[3e4bfe51dc23e9a] jit-backend-dump}
[3e4bfe51dc27a52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbadf5 +0  20000000
[3e4bfe51dc287ee] jit-backend-dump}
[3e4bfe51dc2b9c2] {jit-backend-addr
bridge out of Guard 0x3a73658 has address 0x7f4c76fbac30 to 0x7f4c76fbadf0
       gc table: 0x7f4c76fbab90
    jump target: 0x7f4c76fbac30
         resops: 0x7f4c76fbac3e
       failures: 0x7f4c76fbadf0
            end: 0x7f4c76fbb047
[3e4bfe51dc2dc90] jit-backend-addr}
[3e4bfe51dc310ca] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbac54 +0  F7010000
[3e4bfe51dc31e8b] jit-backend-dump}
[3e4bfe51dc350b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbac66 +0  01020000
[3e4bfe51dc35db4] jit-backend-dump}
[3e4bfe51dc38e2a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbac78 +0  0B020000
[3e4bfe51dc39b06] jit-backend-dump}
[3e4bfe51dc3cb4b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbac84 +0  1B020000
[3e4bfe51dc3d830] jit-backend-dump}
[3e4bfe51dc40863] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbac9b +0  20020000
[3e4bfe51dc4153b] jit-backend-dump}
[3e4bfe51dc445bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbacac +0  2B020000
[3e4bfe51dc452c4] jit-backend-dump}
[3e4bfe51dc4831c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbacb9 +0  3A020000
[3e4bfe51dc48ff8] jit-backend-dump}
[3e4bfe51dc4c025] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbacc6 +0  49020000
[3e4bfe51dc4cd1f] jit-backend-dump}
[3e4bfe51dc4fd74] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbacda +0  51020000
[3e4bfe51dc50a49] jit-backend-dump}
[3e4bfe51dc53aa1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbacf8 +0  4F020000
[3e4bfe51dc54776] jit-backend-dump}
[3e4bfe51dc57808] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbad0a +0  59020000
[3e4bfe51dc584da] jit-backend-dump}
[3e4bfe51dc5b5da] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbad21 +0  5E020000
[3e4bfe51dc5c2ce] jit-backend-dump}
[3e4bfe51dc5f30b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbad3d +0  5E020000
[3e4bfe51dc5ffef] jit-backend-dump}
[3e4bfe51dc63078] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbad50 +0  67020000
[3e4bfe51dc63d66] jit-backend-dump}
[3e4bfe51dc66d96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbad5e +0  75020000
[3e4bfe51dc67a68] jit-backend-dump}
[3e4bfe51dc6aa7a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbad71 +0  7E020000
[3e4bfe51dc6b75b] jit-backend-dump}
[3e4bfe51dc6e785] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbad83 +0  88020000
[3e4bfe51dc6f479] jit-backend-dump}
[3e4bfe51dc72494] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbad90 +0  97020000
[3e4bfe51dc7317b] jit-backend-dump}
[3e4bfe51dc76456] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb733a +0  F2380000
[3e4bfe51dc77146] jit-backend-dump}
[3e4bfe51dc7b0a6] jit-backend}
[3e4bfe51dc7ec55] {jit-log-opt-bridge
# bridge out of Guard 0x3a73658 with 56 ops
[p0, p1, p2, p3, p4, p5]
+182: guard_not_invalidated(descr=<Guard0x3aa0c80>) [p0, p1, p2, p3, p4, p5]
+182: guard_nonnull_class(p4, 16584240, descr=<Guard0x3aa0ce0>) [p0, p1, p2, p3, p4, p5]
+200: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3aa0d40>) [p0, p1, p2, p3, p4, p5]
+218: guard_nonnull_class(p2, ConstClass(W_Fixnum), descr=<Guard0x3aa0da0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+236: guard_class(p0, 16437488, descr=<Guard0x3a9cf98>) [p0, p1, p2, p3, p4, p5]
+248: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+252: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3aa0e00>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(< y4851 x4849)')
+271: i12 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+275: i13 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+279: i14 = int_lt(i12, i13)
+282: guard_false(i14, descr=<Guard0x3a9cfe0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+288: p15 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+292: p16 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+292: i17 = instance_ptr_eq(p0, p15)
+295: guard_true(i17, descr=<Guard0x3a9d028>) [p0, p1, p2, p3, p4, p5]
+301: guard_class(p15, 16437488, descr=<Guard0x3a9d070>) [p0, p1, p2, p3, p4, p5]
+314: p19 = getfield_gc_r(p15, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+325: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3a9d0b8>) [p0, p1, p2, p3, p4, p5]
+334: p21 = getfield_gc_r(p15, descr=<FieldP pycket.small_list.LetContSize2Fixed01.inst_w_val0 48 pure>)
+338: i22 = getfield_gc_i(p15, descr=<FieldS pycket.small_list.LetContSize2Fixed01.inst_vals_fixed_1 40 pure>)
+342: p23 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+346: p24 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+350: guard_class(p23, 16478448, descr=<Guard0x3a9d100>) [p0, p1, p2, p3, p4, p5]
+364: p26 = getfield_gc_r(p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+369: guard_class(p24, 16438168, descr=<Guard0x3a9d148>) [p0, p1, p2, p3, p4, p5]
+382: p28 = getfield_gc_r(p24, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+386: guard_nonnull_class(p28, ConstClass(ForwardLink), descr=<Guard0x3aa0e60>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
+405: p30 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+410: p31 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+415: p32 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+420: guard_class(p26, 16505296, descr=<Guard0x3a9d190>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+433: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3aa0ec0>) [p0, p1, p2, p3, p4, p5]
+452: i35 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+456: i37 = int_sub_ovf(i35, 1)
+460: guard_no_overflow(descr=<Guard0x3a9d1d8>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
+466: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3aa0f20>) [p0, p1, p2, p3, p4, p5]
+485: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3aa0f80>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+503: i40 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+507: i41 = int_lt(i40, i37)
+510: guard_false(i41, descr=<Guard0x3a9d220>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)')
+516: p42 = new_with_vtable(descr=<SizeDescr 16>)
+557: setfield_gc(p42, i22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+561: jump(p26, p21, p42, p1, p32, p24, descr=TargetToken(61039664))
+608: --end of the loop--
[3e4bfe51dcb3ed4] jit-log-opt-bridge}
[3e4bfe51df65d71] {jit-backend
[3e4bfe51dfccbff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb
[3e4bfe51dfd3c3e] jit-backend-dump}
[3e4bfe51dfde721] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb174 +0  20000000
[3e4bfe51dfdfb68] jit-backend-dump}
[3e4bfe51dfe3b64] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb375 +0  20000000
[3e4bfe51dfe4a3e] jit-backend-dump}
[3e4bfe51dfe7d68] {jit-backend-addr
bridge out of Guard 0x3a72530 has address 0x7f4c76fbb170 to 0x7f4c76fbb370
       gc table: 0x7f4c76fbb100
    jump target: 0x7f4c76fbb170
         resops: 0x7f4c76fbb17e
       failures: 0x7f4c76fbb370
            end: 0x7f4c76fbb4af
[3e4bfe51dfea1b2] jit-backend-addr}
[3e4bfe51dfed584] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb18f +0  3C020000
[3e4bfe51dfee3b9] jit-backend-dump}
[3e4bfe51dff15b4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb1a2 +0  45020000
[3e4bfe51dff225e] jit-backend-dump}
[3e4bfe51dff5300] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb1af +0  54020000
[3e4bfe51dff5f8b] jit-backend-dump}
[3e4bfe51dff8ff9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb1cb +0  54020000
[3e4bfe51dff9c57] jit-backend-dump}
[3e4bfe51dffcc4a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb1d5 +0  66020000
[3e4bfe51dffd8c9] jit-backend-dump}
[3e4bfe51e0008b9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb1de +0  79020000
[3e4bfe51e001548] jit-backend-dump}
[3e4bfe51e004591] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb1eb +0  88020000
[3e4bfe51e0051f2] jit-backend-dump}
[3e4bfe51e00822e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb1f4 +0  9B020000
[3e4bfe51e008eab] jit-backend-dump}
[3e4bfe51e00c129] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4ca4 +0  C8640000
[3e4bfe51e00cdb2] jit-backend-dump}
[3e4bfe51e010c7c] jit-backend}
[3e4bfe51e01470e] {jit-log-opt-bridge
# bridge out of Guard 0x3a72530 with 88 ops
[p0, i1, p2, p3, p4]
+134: guard_not_invalidated(descr=<Guard0x3aa0fe0>) [p0, i1, p2, p3, p4]
+134: i6 = int_sub_ovf(i1, 1)
+141: guard_no_overflow(descr=<Guard0x3a9d268>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(ctak-aux k4862 AppRand1 y4851 z4853)')
+147: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3aa1040>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+166: i8 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+170: i9 = int_lt(i8, i6)
+173: guard_false(i9, descr=<Guard0x3a9d2b0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+179: i10 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+183: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+187: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x3aa10a0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)')
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
debug_merge_point(0, 0, '(- y4851 1)')
+207: i14 = int_sub_ovf(i8, 1)
+211: guard_no_overflow(descr=<Guard0x3a9d2f8>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+217: i15 = int_lt(i10, i14)
+220: guard_false(i15, descr=<Guard0x3a9d340>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+226: i17 = int_sub_ovf(i10, 1)
+233: guard_no_overflow(descr=<Guard0x3a9d388>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+239: i18 = int_lt(i1, i17)
+242: guard_true(i18, descr=<Guard0x3a9d3d0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+248: p19 = new_with_vtable(descr=<SizeDescr 24>)
+295: p20 = new_with_vtable(descr=<SizeDescr 48>)
+313: setfield_gc(p20, ConstPtr(ptr21), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+324: setfield_gc(p20, ConstPtr(ptr22), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+328: p23 = new_with_vtable(descr=<SizeDescr 16>)
+339: setfield_gc(p23, i17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+343: setfield_gc(p20, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+347: setfield_gc(p20, p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+351: p24 = new_with_vtable(descr=<SizeDescr 16>)
+362: setfield_gc(p24, i1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+366: setfield_gc(p20, p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+370: p25 = new_with_vtable(descr=<SizeDescr 24>)
+381: p26 = new_with_vtable(descr=<SizeDescr 48>)
+392: setfield_gc(p26, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+396: p27 = new_with_vtable(descr=<SizeDescr 48>)
+407: setfield_gc(p27, ConstPtr(ptr21), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+418: setfield_gc(p27, ConstPtr(ptr28), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+422: setfield_gc(p27, p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+426: setfield_gc(p27, p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+430: setfield_gc(p27, p24, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+434: setfield_gc(p26, p27, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+438: p29 = new_with_vtable(descr=<SizeDescr 64>)
+449: setfield_gc(p29, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+453: setfield_gc(p29, ConstPtr(ptr30), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+457: setfield_gc(p29, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+468: setfield_gc(p29, ConstPtr(ptr31), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+472: p32 = new_with_vtable(descr=<SizeDescr 24>)
+483: setfield_gc(p32, p0, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+487: setfield_gc(p32, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+495: setfield_gc(p29, p32, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_0 40 pure>)
+499: p34 = new_with_vtable(descr=<SizeDescr 16>)
+510: setfield_gc(p34, i10, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+514: setfield_gc(p29, p34, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_1 48 pure>)
+518: setfield_gc(p29, p24, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_2 56 pure>)
+522: setfield_gc(p26, p29, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+533: setfield_gc(p26, ConstPtr(ptr35), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+537: p36 = new_with_vtable(descr=<SizeDescr 24>)
+548: setfield_gc(p36, p29, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+552: setfield_gc(p36, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+560: setfield_gc(p26, p36, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+564: setfield_gc(p25, p26, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+568: setfield_gc(p25, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+576: setfield_gc(p19, p20, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+580: setfield_gc(p19, p25, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+584: jump(p19, p26, descr=TargetToken(60615520))
+624: --end of the loop--
[3e4bfe51e057268] jit-log-opt-bridge}
[3e4bfe51e259a1b] {jit-backend
[3e4bfe51e2c196a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb
[3e4bfe51e2c81b0] jit-backend-dump}
[3e4bfe51e2d29f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb5b4 +0  20000000
[3e4bfe51e2d3efd] jit-backend-dump}
[3e4bfe51e2d7d53] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb7b5 +0  20000000
[3e4bfe51e2d8dbb] jit-backend-dump}
[3e4bfe51e2dc098] {jit-backend-addr
bridge out of Guard 0x3a724a0 has address 0x7f4c76fbb5b0 to 0x7f4c76fbb7b0
       gc table: 0x7f4c76fbb550
    jump target: 0x7f4c76fbb5b0
         resops: 0x7f4c76fbb5be
       failures: 0x7f4c76fbb7b0
            end: 0x7f4c76fbb8b7
[3e4bfe51e2de746] jit-backend-addr}
[3e4bfe51e2e1c96] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb5cf +0  3C020000
[3e4bfe51e2e2b4f] jit-backend-dump}
[3e4bfe51e2e5eed] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb5e2 +0  45020000
[3e4bfe51e2e6c4c] jit-backend-dump}
[3e4bfe51e2e9e62] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb5ef +0  54020000
[3e4bfe51e2eab99] jit-backend-dump}
[3e4bfe51e2edd5a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb60b +0  54020000
[3e4bfe51e2eea0e] jit-backend-dump}
[3e4bfe51e2f1baa] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb615 +0  66020000
[3e4bfe51e2f284b] jit-backend-dump}
[3e4bfe51e2f59db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbb61e +0  79020000
[3e4bfe51e2f667f] jit-backend-dump}
[3e4bfe51e2f9aad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb4c8e +0  1E690000
[3e4bfe51e2fa792] jit-backend-dump}
[3e4bfe51e2fe7ac] jit-backend}
[3e4bfe51e3022b6] {jit-log-opt-bridge
# bridge out of Guard 0x3a724a0 with 79 ops
[p0, i1, p2, p3, p4]
+118: guard_not_invalidated(descr=<Guard0x3aa1100>) [p0, i1, p2, p3, p4]
+118: i6 = int_sub_ovf(i1, 1)
+125: guard_no_overflow(descr=<Guard0x3a9d418>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(ctak-aux k4862 AppRand1 y4851 z4853)')
+131: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3aa1160>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+150: i8 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+154: i9 = int_lt(i8, i6)
+157: guard_false(i9, descr=<Guard0x3a9d460>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+163: i10 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+167: p11 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+171: guard_nonnull_class(p11, ConstClass(ForwardLink), descr=<Guard0x3aa11c0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)')
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
debug_merge_point(0, 0, '(- y4851 1)')
+191: i14 = int_sub_ovf(i8, 1)
+195: guard_no_overflow(descr=<Guard0x3a9d4a8>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+201: i15 = int_lt(i10, i14)
+204: guard_true(i15, descr=<Guard0x3a9d4f0>) [p0, i1, p2, p3, p4]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+210: p16 = new_with_vtable(descr=<SizeDescr 24>)
+257: p17 = new_with_vtable(descr=<SizeDescr 48>)
+275: setfield_gc(p17, ConstPtr(ptr18), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+286: setfield_gc(p17, ConstPtr(ptr19), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+290: p20 = new_with_vtable(descr=<SizeDescr 16>)
+301: setfield_gc(p20, i14, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+305: setfield_gc(p17, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+309: p21 = new_with_vtable(descr=<SizeDescr 16>)
+321: setfield_gc(p21, i1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+325: setfield_gc(p17, p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+329: setfield_gc(p17, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+333: p22 = new_with_vtable(descr=<SizeDescr 24>)
+344: p23 = new_with_vtable(descr=<SizeDescr 48>)
+355: setfield_gc(p23, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+359: p24 = new_with_vtable(descr=<SizeDescr 48>)
+370: setfield_gc(p24, ConstPtr(ptr18), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+388: setfield_gc(p24, ConstPtr(ptr25), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+392: setfield_gc(p24, p20, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+396: setfield_gc(p24, p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+400: setfield_gc(p24, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+404: setfield_gc(p23, p24, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+408: p26 = new_with_vtable(descr=<SizeDescr 56>)
+419: setfield_gc(p26, p11, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+423: p27 = new_with_vtable(descr=<SizeDescr 48>)
+435: setfield_gc(p27, ConstPtr(ptr28), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+440: setfield_gc(p27, ConstPtr(ptr29), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+445: setfield_gc(p27, p21, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+450: setfield_gc(p27, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+455: setfield_gc(p27, p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+460: setfield_gc(p26, p27, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+464: setfield_gc(p26, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+475: setfield_gc(p26, ConstPtr(ptr30), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+479: setfield_gc(p26, i10, descr=<FieldS pycket.small_list.LetContSize2Fixed01.inst_vals_fixed_1 40 pure>)
+483: p31 = new_with_vtable(descr=<SizeDescr 24>)
+495: setfield_gc(p31, p0, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+499: setfield_gc(p31, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+507: setfield_gc(p26, p31, descr=<FieldP pycket.small_list.LetContSize2Fixed01.inst_w_val0 48 pure>)
+511: setfield_gc(p23, p26, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+522: setfield_gc(p23, ConstPtr(ptr33), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+526: p34 = new_with_vtable(descr=<SizeDescr 24>)
+537: setfield_gc(p34, p26, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+541: setfield_gc(p34, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+549: setfield_gc(p23, p34, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+553: setfield_gc(p22, p23, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+557: setfield_gc(p22, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+565: setfield_gc(p16, p17, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+576: setfield_gc(p16, p22, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+580: jump(p16, p23, descr=TargetToken(60615520))
+608: --end of the loop--
[3e4bfe51e33d74e] jit-log-opt-bridge}
[3e4bfe51e553b4b] {jit-backend
[3e4bfe51e5da4f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbba30 +0  0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CB202000048FF042500973D034883F80172068138705402000F85000000004883F90172068139601400000F85000000004883FF017206813F601400000F8500000000813AA81600000F85000000004C8B7A084983FF01720741813F900F00000F85000000004C8B7F084C8B69084D39EF0F8C000000004C8B68084C39EA0F850000000041817D00A81600000F85000000004D8B7D204C8B25D2FEFFFF4D39E70F85000000004D8B7D284D8B55104D8B4D184983FF01720741813F705402000F85000000004D8B6E08418139A81600000F85000000004D8B41084983F8017207418138900F00000F850000000041813A30B700000F8500000000498B7218498B5A204C89A5380100004D8B62284C89BD400100004D8B7A0841813F102001000F85000000004983FC01720841813C24601400000F85000000004D8B7C24084983EF010F80000000004883FB017206813B601400000F85000000004885F60F84000000004C8B63084D39FC0F8D00000000488B0C25F091F900488D9120010000483B14251092F9000F875001000048891425F091F90048C701100A0100488D511848C70230B70000488B0521FEFFFF48894208488B3D1EFEFFFF48897A10488D7A3048C707601400004C897F0848897A184889722048895A284C8D7F1049C707705402004D8D771849C706A81600004D8946084D8D663049C7042430B700004989442408488B05D5FDFFFF498944241049897C2418498974242049895C24284D896610498D5C243048C703301700004C8943084C8953104C894B184C8B0DA6FDFFFF4C894B204C896B284C8BAD400100004C896B3049895E184C8BAD380100004D896E204C8D6B3849C745007054020049895D0849C74510000000004D896E284D89770849C7471000000000488951084C89791048898D300100004C89B53801000049BB602AFB764C7F000041FFE3660F1F84000000000048C7442408FFFFFF0049BBC8B8FB764C7F00004C895D204D8D9B285AFFFF41FFD3E928FDFFFF49BB18BAFB764C7F00004C895D204D8D9BD860FFFF41FFD3E99BFEFFFFFF3527FCFFFF49BBD8B8FB764C7F000041534D8D9B2857FFFF41FFE3FF3513FCFFFF49BBE8B8FB764C7F000041534D8D9B1857FFFF41FFE3FF35FFFBFFFF49BBF8B8FB764C7F000041534D8D9B0857FFFF41FFE3FF35EBFBFFFF49BB08B9FB764C7F000041534D8D9BF856FFFF41FFE3FF35D7FBFFFF49BB18B9FB764C7F000041534D8D9BE856FFFF41FFE3FF35C3FBFFFF49BB28B9FB764C7F000041534D8D9BD856FFFF41FFE3FF35AFFBFFFF49BB38B9FB764C7F000041534D8D9BC856FFFF41FFE3FF359BFBFFFF49BB48B9FB764C7F000041534D8D9BB856FFFF41FFE3FF3587FBFFFF49BB58B9FB764C7F000041534D8D9BA856FFFF41FFE3FF357BFBFFFF49BB68B9FB764C7F000041534D8D9B9856FFFF41FFE3FF3567FBFFFF49BB78B9FB764C7F000041534D8D9B8856FFFF41FFE3FF3553FBFFFF49BB88B9FB764C7F000041534D8D9B7856FFFF41FFE3FF353FFBFFFF49BB98B9FB764C7F000041534D8D9B6856FFFF41FFE3FF352BFBFFFF49BBA8B9FB764C7F000041534D8D9B5856FFFF41FFE3FF3517FBFFFF49BBB8B9FB764C7F000041534D8D9B4856FFFF41FFE3FF3503FBFFFF49BBC8B9FB764C7F000041534D8D9B3856FFFF41FFE3FF35EFFAFFFF49BBD8B9FB764C7F000041534D8D9B2856FFFF41FFE3FF35DBFAFFFF49BBE8B9FB764C7F000041534D8D9B1856FFFF41FFE3FF35C7FAFFFF49BBF8B9FB764C7F000041534D8D9B0856FFFF41FFE3FF35B3FAFFFF49BB08BAFB764C7F000041534D8D9BF855FFFF41FFE3
[3e4bfe51e5e3429] jit-backend-dump}
[3e4bfe51e5ed800] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbb04 +0  20000000
[3e4bfe51e5eebc3] jit-backend-dump}
[3e4bfe51e5f29f1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbdc5 +0  20000000
[3e4bfe51e5f3863] jit-backend-dump}
[3e4bfe51e5f6c1a] {jit-backend-addr
bridge out of Guard 0x3a733d0 has address 0x7f4c76fbbb00 to 0x7f4c76fbbdc0
       gc table: 0x7f4c76fbba30
    jump target: 0x7f4c76fbbb00
         resops: 0x7f4c76fbbb0e
       failures: 0x7f4c76fbbdc0
            end: 0x7f4c76fbc033
[3e4bfe51e5f8fc4] jit-backend-addr}
[3e4bfe51e5fc5cf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbb24 +0  F7020000
[3e4bfe51e5fd359] jit-backend-dump}
[3e4bfe51e600787] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbb36 +0  01030000
[3e4bfe51e60146e] jit-backend-dump}
[3e4bfe51e604a39] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbb48 +0  0B030000
[3e4bfe51e60570e] jit-backend-dump}
[3e4bfe51e608a17] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbb54 +0  1B030000
[3e4bfe51e6096ac] jit-backend-dump}
[3e4bfe51e60c89a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbb6b +0  20030000
[3e4bfe51e60d523] jit-backend-dump}
[3e4bfe51e6106bc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbb7c +0  2B030000
[3e4bfe51e611345] jit-backend-dump}
[3e4bfe51e61456e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbb89 +0  3A030000
[3e4bfe51e615206] jit-backend-dump}
[3e4bfe51e618390] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbb97 +0  48030000
[3e4bfe51e618ffd] jit-backend-dump}
[3e4bfe51e61c199] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbbab +0  50030000
[3e4bfe51e61ce1c] jit-backend-dump}
[3e4bfe51e61fff2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbbca +0  4D030000
[3e4bfe51e620c7b] jit-backend-dump}
[3e4bfe51e623e3f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbbdb +0  58030000
[3e4bfe51e624ace] jit-backend-dump}
[3e4bfe51e627c7f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbbf2 +0  5D030000
[3e4bfe51e628911] jit-backend-dump}
[3e4bfe51e62baee] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbbff +0  6C030000
[3e4bfe51e62c74c] jit-backend-dump}
[3e4bfe51e62f8f4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbc2a +0  5D030000
[3e4bfe51e630577] jit-backend-dump}
[3e4bfe51e633790] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbc3e +0  65030000
[3e4bfe51e634438] jit-backend-dump}
[3e4bfe51e637594] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbc4d +0  72030000
[3e4bfe51e6381fb] jit-backend-dump}
[3e4bfe51e63b378] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbc5f +0  7C030000
[3e4bfe51e63bfdf] jit-backend-dump}
[3e4bfe51e63f126] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbc68 +0  8F030000
[3e4bfe51e63fdaf] jit-backend-dump}
[3e4bfe51e642f94] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbbc75 +0  9E030000
[3e4bfe51e643c20] jit-backend-dump}
[3e4bfe51e647008] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6d36 +0  C64D0000
[3e4bfe51e647cac] jit-backend-dump}
[3e4bfe51e64be1a] jit-backend}
[3e4bfe51e64fa1e] {jit-log-opt-bridge
# bridge out of Guard 0x3a733d0 with 94 ops
[p0, p1, p2, p3, p4, p5]
+230: guard_not_invalidated(descr=<Guard0x3aa1220>) [p0, p1, p2, p3, p4, p5]
+230: guard_nonnull_class(p4, 16584240, descr=<Guard0x3aa1280>) [p0, p1, p2, p3, p4, p5]
+248: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3aa12e0>) [p0, p1, p2, p3, p4, p5]
+266: guard_nonnull_class(p2, ConstClass(W_Fixnum), descr=<Guard0x3aa1340>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+284: guard_class(p0, 16437352, descr=<Guard0x3a9d538>) [p0, p1, p2, p3, p4, p5]
+296: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+300: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3aa13a0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(< y4851 x4849)')
+319: i12 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+323: i13 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+327: i14 = int_lt(i12, i13)
+330: guard_false(i14, descr=<Guard0x3a9d580>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+336: p15 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+340: p16 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+340: i17 = instance_ptr_eq(p0, p15)
+343: guard_true(i17, descr=<Guard0x3a9d5c8>) [p0, p1, p2, p3, p4, p5]
+349: guard_class(p15, 16437352, descr=<Guard0x3a9d610>) [p0, p1, p2, p3, p4, p5]
+363: p19 = getfield_gc_r(p15, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+374: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3a9d658>) [p0, p1, p2, p3, p4, p5]
+383: p21 = getfield_gc_r(p15, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+387: p22 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+391: p23 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+395: guard_nonnull_class(p21, 16584240, descr=<Guard0x3aa1400>) [p0, p1, p2, p3, p4, p5]
+414: i25 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+418: guard_class(p23, 16437352, descr=<Guard0x3a9d6a0>) [p0, p1, p2, p3, p4, p5]
+431: p27 = getfield_gc_r(p23, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+435: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x3aa1460>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)')
+454: guard_class(p22, 16478448, descr=<Guard0x3a9d6e8>) [p0, p1, p2, p3, p4, p5]
+467: p30 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+471: p31 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+475: p32 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+486: p33 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+497: guard_class(p33, 16505296, descr=<Guard0x3a9d730>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
debug_merge_point(0, 0, '(- y4851 1)')
+510: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3aa14c0>) [p0, p1, p2, p3, p4, p5]
+530: i36 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+535: i38 = int_sub_ovf(i36, 1)
+539: guard_no_overflow(descr=<Guard0x3a9d778>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+545: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3aa1520>) [p0, p1, p2, p3, p4, p5]
+563: guard_nonnull(p30, descr=<Guard0x3a9d7c0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+572: i40 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+576: i41 = int_lt(i40, i38)
+579: guard_true(i41, descr=<Guard0x3a9d808>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+585: p42 = new_with_vtable(descr=<SizeDescr 24>)
+629: p43 = new_with_vtable(descr=<SizeDescr 48>)
+647: setfield_gc(p43, ConstPtr(ptr44), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+658: setfield_gc(p43, ConstPtr(ptr45), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+662: p46 = new_with_vtable(descr=<SizeDescr 16>)
+673: setfield_gc(p46, i38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+677: setfield_gc(p43, p46, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+681: setfield_gc(p43, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+685: setfield_gc(p43, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+689: p47 = new_with_vtable(descr=<SizeDescr 24>)
+700: p48 = new_with_vtable(descr=<SizeDescr 48>)
+711: setfield_gc(p48, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+715: p49 = new_with_vtable(descr=<SizeDescr 48>)
+727: setfield_gc(p49, ConstPtr(ptr44), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+739: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+744: setfield_gc(p49, p46, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+749: setfield_gc(p49, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+754: setfield_gc(p49, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+759: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+763: p51 = new_with_vtable(descr=<SizeDescr 56>)
+775: setfield_gc(p51, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+779: setfield_gc(p51, p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+783: setfield_gc(p51, p23, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+794: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+798: setfield_gc(p51, i25, descr=<FieldS pycket.small_list.LetContSize2Fixed01.inst_vals_fixed_1 40 pure>)
+802: setfield_gc(p51, p21, descr=<FieldP pycket.small_list.LetContSize2Fixed01.inst_w_val0 48 pure>)
+813: setfield_gc(p48, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+817: setfield_gc(p48, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+828: p54 = new_with_vtable(descr=<SizeDescr 24>)
+840: setfield_gc(p54, p51, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+844: setfield_gc(p54, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+852: setfield_gc(p48, p54, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+856: setfield_gc(p47, p48, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+860: setfield_gc(p47, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+868: setfield_gc(p42, p43, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+872: setfield_gc(p42, p47, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+876: jump(p42, p48, descr=TargetToken(60615520))
+912: --end of the loop--
[3e4bfe51e69cd5c] jit-log-opt-bridge}
[3e4bfe51e7cecb8] {jit-backend
[3e4bfe51e8178cb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc0d
[3e4bfe51e81d6a0] jit-backend-dump}
[3e4bfe51e82759c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc134 +0  20000000
[3e4bfe51e82883d] jit-backend-dump}
[3e4bfe51e82c3cd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc2b5 +0  20000000
[3e4bfe51e82d255] jit-backend-dump}
[3e4bfe51e83055d] {jit-backend-addr
bridge out of Guard 0x3a31970 has address 0x7f4c76fbc130 to 0x7f4c76fbc2b0
       gc table: 0x7f4c76fbc0d0
    jump target: 0x7f4c76fbc130
         resops: 0x7f4c76fbc13e
       failures: 0x7f4c76fbc2b0
            end: 0x7f4c76fbc3b7
[3e4bfe51e832929] jit-backend-addr}
[3e4bfe51e835d76] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc14b +0  C0010000
[3e4bfe51e836b67] jit-backend-dump}
[3e4bfe51e839f52] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc15d +0  CA010000
[3e4bfe51e83ac27] jit-backend-dump}
[3e4bfe51e83ddb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc16f +0  D4010000
[3e4bfe51e83ea7d] jit-backend-dump}
[3e4bfe51e841bb4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc17b +0  E4010000
[3e4bfe51e84285f] jit-backend-dump}
[3e4bfe51e84595c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc192 +0  E9010000
[3e4bfe51e84660c] jit-backend-dump}
[3e4bfe51e84974a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc1a3 +0  F4010000
[3e4bfe51e84a3ee] jit-backend-dump}
[3e4bfe51e84d7ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb321d +0  0F8F0000
[3e4bfe51e84e489] jit-backend-dump}
[3e4bfe51e852460] jit-backend}
[3e4bfe51e856028] {jit-log-opt-bridge
# bridge out of Guard 0x3a31970 with 47 ops
[p0, p1, p2, p3, p4, p5]
+118: guard_not_invalidated(descr=<Guard0x3aa1580>) [p0, p1, p2, p3, p4, p5]
+118: guard_nonnull(p4, descr=<Guard0x3a9d850>) [p0, p1, p2, p3, p4, p5]
+127: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3aa15e0>) [p0, p1, p2, p3, p4, p5]
+145: guard_nonnull_class(p2, ConstClass(W_Fixnum), descr=<Guard0x3aa1640>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+163: guard_class(p0, 16438168, descr=<Guard0x3a9d898>) [p0, p1, p2, p3, p4, p5]
+175: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+179: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x3aa16a0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(< y4851 x4849)')
+198: i11 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+202: i12 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+206: i13 = int_lt(i11, i12)
+209: guard_true(i13, descr=<Guard0x3a9d8e0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+215: p14 = new_with_vtable(descr=<SizeDescr 24>)
+265: p15 = new_with_vtable(descr=<SizeDescr 48>)
+283: setfield_gc(p15, ConstPtr(ptr16), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+294: setfield_gc(p15, ConstPtr(ptr17), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+298: setfield_gc(p15, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+302: setfield_gc(p15, p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+313: setfield_gc(p15, p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+317: p18 = new_with_vtable(descr=<SizeDescr 24>)
+328: p19 = new_with_vtable(descr=<SizeDescr 48>)
+339: setfield_gc(p19, p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+343: p20 = new_with_vtable(descr=<SizeDescr 48>)
+354: setfield_gc(p20, ConstPtr(ptr16), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+365: setfield_gc(p20, ConstPtr(ptr21), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+369: setfield_gc(p20, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+373: setfield_gc(p20, p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+377: setfield_gc(p20, p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+381: setfield_gc(p19, p20, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+385: setfield_gc(p19, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+396: setfield_gc(p19, ConstPtr(ptr22), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+400: p23 = new_with_vtable(descr=<SizeDescr 24>)
+411: setfield_gc(p23, p0, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+415: setfield_gc(p23, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+423: setfield_gc(p19, p23, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+427: setfield_gc(p18, p19, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+431: setfield_gc(p18, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+439: setfield_gc(p14, p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+443: setfield_gc(p14, p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+447: jump(p14, p19, descr=TargetToken(60615520))
+480: --end of the loop--
[3e4bfe51e87dbfc] jit-log-opt-bridge}
[3e4bfe51eaebc83] {jit-backend
[3e4bfe51eb429a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc590 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C2202000048FF042560993D038139A81600000F85000000004C8B79084983FF01720741813F900F00000F8500000000813A100A01000F85000000004C8B7A0841813F30B700000F85000000004D8B77184983FE01720741813E601400000F85000000004D8B6E084983ED010F80000000004C8B72104983FE01720741813E705402000F85000000004D8B67284983FC01720841813C24601400000F85000000004D8B57204983FA01720741813A601400000F85000000004D8B7C24084D39EF0F8C000000004D8B6E084C39E90F850000000041817D00A81600000F85000000004D8B75204C8B3D93FEFFFF4D39FE0F85000000004D8B7D284D8B75104D8B65184983FF01720741813F705402000F85000000004D8B6A0841813C24A81600000F85000000004D8B5424084983FA01720741813A900F00000F850000000041813E30B700000F85000000004D8B56184D8B4E204D8B4628498B7E08813F102001000F85000000004983F8017207418138601400000F85000000004D8B70084983EE010F80000000004983F9017207418139601400000F85000000004983FA01720741813A601400000F8500000000498B71084C39F60F8C000000004883EE010F80000000004D8B72084939F60F8C00000000488B0C25F091F900488D5110483B14251092F9000F876100000048891425F091F90048C701601400004C8969084889BD300100004C89F84C89D74C8985380100004C89E249BBB031FB764C7F000041FFE30F1F400048C7442408FFFFFF0049BBC8C3FB764C7F00004C895D204D8D9B284FFFFF41FFD3E9B8FDFFFF49BB78C5FB764C7F00004C895D204D8D9B7855FFFF41FFD3E98AFFFFFFFF35A7FCFFFF49BBD8C3FB764C7F000041534D8D9B284CFFFF41FFE3FF3593FCFFFF49BBE8C3FB764C7F000041534D8D9B184CFFFF41FFE3FF357FFCFFFF49BBF8C3FB764C7F000041534D8D9B084CFFFF41FFE3FF356BFCFFFF49BB08C4FB764C7F000041534D8D9BF84BFFFF41FFE3FF3557FCFFFF49BB18C4FB764C7F000041534D8D9BE84BFFFF41FFE3FF3543FCFFFF49BB28C4FB764C7F000041534D8D9BD84BFFFF41FFE3FF352FFCFFFF49BB38C4FB764C7F000041534D8D9BC84BFFFF41FFE3FF351BFCFFFF49BB48C4FB764C7F000041534D8D9BB84BFFFF41FFE3FF3507FCFFFF49BB58C4FB764C7F000041534D8D9BA84BFFFF41FFE3FF35F3FBFFFF49BB68C4FB764C7F000041534D8D9B984BFFFF41FFE3FF35DFFBFFFF49BB78C4FB764C7F000041534D8D9B884BFFFF41FFE3FF35CBFBFFFF49BB88C4FB764C7F000041534D8D9B784BFFFF41FFE3FF35B7FBFFFF49BB98C4FB764C7F000041534D8D9B684BFFFF41FFE3FF35ABFBFFFF49BBA8C4FB764C7F000041534D8D9B584BFFFF41FFE3FF3597FBFFFF49BBB8C4FB764C7F000041534D8D9B484BFFFF41FFE3FF3583FBFFFF49BBC8C4FB764C7F000041534D8D9B384BFFFF41FFE3FF356FFBFFFF49BBD8C4FB764C7F000041534D8D9B284BFFFF41FFE3FF355BFBFFFF49BBE8C4FB764C7F000041534D8D9B184BFFFF41FFE3FF3547FBFFFF49BBF8C4FB764C7F000041534D8D9B084BFFFF41FFE3FF3533FBFFFF49BB08C5FB764C7F000041534D8D9BF84AFFFF41FFE3FF351FFBFFFF49BB18C5FB764C7F000041534D8D9BE84AFFFF41FFE3FF350BFBFFFF49BB28C5FB764C7F000041534D8D9BD84AFFFF41FFE3FF35F7FAFFFF49BB38C5FB764C7F000041534D8D9BC84AFFFF41FFE3FF35E3FAFFFF49BB48C5FB764C7F000041534D8D9BB84AFFFF41FFE3FF35CFFAFFFF49BB58C5FB764C7F000041534D8D9BA84AFFFF41FFE3FF35BBFAFFFF49BB68C5FB764C7F000041534D8D9B984AFFFF41FFE3
[3e4bfe51eb4b563] jit-backend-dump}
[3e4bfe51eb56080] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc674 +0  20000000
[3e4bfe51eb575d1] jit-backend-dump}
[3e4bfe51eb5b3b3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc8a5 +0  20000000
[3e4bfe51eb5c1d8] jit-backend-dump}
[3e4bfe51eb5f49d] {jit-backend-addr
bridge out of Guard 0x3a9c530 has address 0x7f4c76fbc670 to 0x7f4c76fbc8a0
       gc table: 0x7f4c76fbc590
    jump target: 0x7f4c76fbc670
         resops: 0x7f4c76fbc67e
       failures: 0x7f4c76fbc8a0
            end: 0x7f4c76fbcbbb
[3e4bfe51eb61943] jit-backend-addr}
[3e4bfe51eb64e50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc68e +0  51020000
[3e4bfe51eb65c01] jit-backend-dump}
[3e4bfe51eb68e24] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc6a5 +0  56020000
[3e4bfe51eb69b0c] jit-backend-dump}
[3e4bfe51eb6ccd0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc6b1 +0  82020000
[3e4bfe51eb6d9b7] jit-backend-dump}
[3e4bfe51eb70ad9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc6c2 +0  8D020000
[3e4bfe51eb71790] jit-backend-dump}
[3e4bfe51eb747c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc6d9 +0  92020000
[3e4bfe51eb75470] jit-backend-dump}
[3e4bfe51eb7855b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc6e7 +0  A0020000
[3e4bfe51eb7927d] jit-backend-dump}
[3e4bfe51eb7c46c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc6fe +0  A5020000
[3e4bfe51eb7d119] jit-backend-dump}
[3e4bfe51eb80244] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc716 +0  A9020000
[3e4bfe51eb80f19] jit-backend-dump}
[3e4bfe51eb83fc4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc72d +0  AE020000
[3e4bfe51eb84c96] jit-backend-dump}
[3e4bfe51eb87d22] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc73b +0  BC020000
[3e4bfe51eb889cc] jit-backend-dump}
[3e4bfe51eb8ba5e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc748 +0  CB020000
[3e4bfe51eb8c74c] jit-backend-dump}
[3e4bfe51eb8f806] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc756 +0  D9020000
[3e4bfe51eb904c6] jit-backend-dump}
[3e4bfe51eb9359b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc76a +0  E1020000
[3e4bfe51eb9425e] jit-backend-dump}
[3e4bfe51eb972c8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc789 +0  DE020000
[3e4bfe51eb97f8b] jit-backend-dump}
[3e4bfe51eb9b026] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc79b +0  E8020000
[3e4bfe51eb9bd14] jit-backend-dump}
[3e4bfe51eb9ed7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc7b3 +0  EC020000
[3e4bfe51eb9fa44] jit-backend-dump}
[3e4bfe51eba2b04] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc7c0 +0  FB020000
[3e4bfe51eba37bb] jit-backend-dump}
[3e4bfe51eba67f7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc7dc +0  FB020000
[3e4bfe51eba74ab] jit-backend-dump}
[3e4bfe51ebaa50f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc7ef +0  04030000
[3e4bfe51ebab1cf] jit-backend-dump}
[3e4bfe51ebae276] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc7fd +0  12030000
[3e4bfe51ebaef3c] jit-backend-dump}
[3e4bfe51ebb1fbf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc810 +0  1B030000
[3e4bfe51ebb2c8e] jit-backend-dump}
[3e4bfe51ebb5cd7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc823 +0  24030000
[3e4bfe51ebb697b] jit-backend-dump}
[3e4bfe51ebb9aff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc830 +0  33030000
[3e4bfe51ebba7a6] jit-backend-dump}
[3e4bfe51ebbd885] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc83a +0  45030000
[3e4bfe51ebbe52c] jit-backend-dump}
[3e4bfe51ebc156c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbc847 +0  54030000
[3e4bfe51ebc2222] jit-backend-dump}
[3e4bfe51ebc5515] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb906b +0  01360000
[3e4bfe51ebc6200] jit-backend-dump}
[3e4bfe51ebca309] jit-backend}
[3e4bfe51ebcde3a] {jit-log-opt-bridge
# bridge out of Guard 0x3a9c530 with 83 ops
[p0, p1]
+246: guard_class(p1, 16437352, descr=<Guard0x3aa1700>) [p0, p1]
+258: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+262: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3aa1760>) [p0, p1]
debug_merge_point(0, 0, '(- x4849 1)')
+281: guard_not_invalidated(descr=<Guard0x3a9d928>) [p0, p1]
+281: guard_class(p0, 16499664, descr=<Guard0x3a9d970>) [p0, p1]
+293: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+297: guard_class(p6, 16478448, descr=<Guard0x3a9d9b8>) [p0, p1]
+310: p8 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+314: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x3aa17c0>) [p0, p1]
+333: i10 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+337: i12 = int_sub_ovf(i10, 1)
+341: guard_no_overflow(descr=<Guard0x3a9da00>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4862 AppRand1 y4851 z4853)')
+347: p13 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+351: guard_nonnull_class(p13, 16584240, descr=<Guard0x3aa1820>) [p0, p1]
+370: p15 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+374: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3aa1880>) [p0, p1]
+394: p17 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+398: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x3aa18e0>) [p0, p1]
+417: p19 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+417: i20 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+422: i21 = int_lt(i20, i12)
+425: guard_false(i21, descr=<Guard0x3a9da48>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+431: p22 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+435: p23 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+435: i24 = instance_ptr_eq(p1, p22)
+438: guard_true(i24, descr=<Guard0x3a9da90>) [p0, p1]
+444: guard_class(p22, 16437352, descr=<Guard0x3a9dad8>) [p0, p1]
+458: p26 = getfield_gc_r(p22, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+469: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x3a9db20>) [p0, p1]
+478: p28 = getfield_gc_r(p22, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+482: p29 = getfield_gc_r(p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+486: p30 = getfield_gc_r(p22, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+490: guard_nonnull_class(p28, 16584240, descr=<Guard0x3aa1940>) [p0, p1]
+509: i32 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+513: guard_class(p30, 16437352, descr=<Guard0x3a9db68>) [p0, p1]
+527: p34 = getfield_gc_r(p30, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+532: guard_nonnull_class(p34, ConstClass(ForwardLink), descr=<Guard0x3aa19a0>) [p0, p1]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)')
+551: guard_class(p29, 16478448, descr=<Guard0x3a9dbb0>) [p0, p1]
+564: p37 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+568: p38 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+572: p39 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+576: p40 = getfield_gc_r(p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+580: guard_class(p40, 16505296, descr=<Guard0x3a9dbf8>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
debug_merge_point(0, 0, '(- y4851 1)')
+592: guard_nonnull_class(p39, ConstClass(W_Fixnum), descr=<Guard0x3aa1a00>) [p0, p1]
+611: i43 = getfield_gc_i(p39, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+615: i45 = int_sub_ovf(i43, 1)
+619: guard_no_overflow(descr=<Guard0x3a9dc40>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+625: guard_nonnull_class(p38, ConstClass(W_Fixnum), descr=<Guard0x3aa1a60>) [p0, p1]
+644: guard_nonnull_class(p37, ConstClass(W_Fixnum), descr=<Guard0x3aa1ac0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+663: i48 = getfield_gc_i(p38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+667: i49 = int_lt(i48, i45)
+670: guard_false(i49, descr=<Guard0x3a9dc88>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+676: i51 = int_sub_ovf(i48, 1)
+680: guard_no_overflow(descr=<Guard0x3a9dcd0>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+686: i52 = getfield_gc_i(p37, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+690: i53 = int_lt(i52, i51)
+693: guard_false(i53, descr=<Guard0x3a9dd18>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)')
+699: p54 = new_with_vtable(descr=<SizeDescr 16>)
+740: setfield_gc(p54, i32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+744: jump(p40, p28, p54, p37, p39, p30, descr=TargetToken(61039664))
+784: --end of the loop--
[3e4bfe51ec137ed] jit-log-opt-bridge}
[3e4bfe51ef11a45] {jit-backend
[3e4bfe51ef9cee2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbcd50 +0  000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8C0203000048FF0425C0963D034883F80172068138705402000F85000000004883F90172068139601400000F85000000004883FF017206813F601400000F8500000000813AA81600000F85000000004C8B7A084983FF01720741813F900F00000F85000000004C8B7F084C8B69084D39EF0F8C000000004C8B68084C39EA0F850000000041817D00A81600000F85000000004D8B7D204C8B25C2FEFFFF4D39E70F85000000004D8B7D284D8B55104D8B4D184983FF01720741813F705402000F85000000004D8B6E08418139A81600000F85000000004D8B41084983F8017207418138900F00000F850000000041813A30B700000F8500000000498B7218498B5A204C89A5380100004D8B62284889B540010000498B7208813E102001000F85000000004983FC01720841813C24601400000F85000000004D8B5424084983EA010F80000000004883FB017206813B601400000F85000000004C89AD480100004C8BAD400100004983FD01720841817D00601400000F85000000004C8B6B084D39D50F8C000000004983ED010F80000000004C8B9540010000498B5A084C39EB0F8D00000000488B0C25F091F900488D9138010000483B14251092F9000F876A01000048891425F091F90048C701100A0100488D511848C70230B70000488B05EBFDFFFF48894208488B3DE8FDFFFF48897A10488D7A3048C707601400004C896F0848897A184C8962204C8952284C8D6F1049C74500705402004D8D751849C706A81600004D894608498D5E3048C70330B7000048894308488B05A0FDFFFF4889431048897B184C8963204C89532849895E104C8D633049C70424D81900004D8944240849897424104D894C24184C8B0D72FDFFFF4D894C24204D897C24284D8D7C244049C707601400004C8B8D480100004D894F084D897C24304D895424384D8966184C8B95380100004D8956204D8D571049C702705402004D89620849C74210000000004D8956284D89750849C7451000000000488951084C89691048898D300100004C89B53801000049BB602AFB764C7F000041FFE366666666662E0F1F84000000000048C7442408FFFFFF0049BBC8CBFB764C7F00004C895D204D8D9B2847FFFF41FFD3E9D8FCFFFF49BB38CDFB764C7F00004C895D204D8D9BB84DFFFF41FFD3E981FEFFFFFF35C7FBFFFF49BBD8CBFB764C7F000041534D8D9B2844FFFF41FFE3FF35B3FBFFFF49BBE8CBFB764C7F000041534D8D9B1844FFFF41FFE3FF359FFBFFFF49BBF8CBFB764C7F000041534D8D9B0844FFFF41FFE3FF358BFBFFFF49BB08CCFB764C7F000041534D8D9BF843FFFF41FFE3FF3577FBFFFF49BB18CCFB764C7F000041534D8D9BE843FFFF41FFE3FF3563FBFFFF49BB28CCFB764C7F000041534D8D9BD843FFFF41FFE3FF354FFBFFFF49BB38CCFB764C7F000041534D8D9BC843FFFF41FFE3FF353BFBFFFF49BB48CCFB764C7F000041534D8D9BB843FFFF41FFE3FF3527FBFFFF49BB58CCFB764C7F000041534D8D9BA843FFFF41FFE3FF351BFBFFFF49BB68CCFB764C7F000041534D8D9B9843FFFF41FFE3FF3507FBFFFF49BB78CCFB764C7F000041534D8D9B8843FFFF41FFE3FF35F3FAFFFF49BB88CCFB764C7F000041534D8D9B7843FFFF41FFE3FF35DFFAFFFF49BB98CCFB764C7F000041534D8D9B6843FFFF41FFE3FF35CBFAFFFF49BBA8CCFB764C7F000041534D8D9B5843FFFF41FFE3FF35B7FAFFFF49BBB8CCFB764C7F000041534D8D9B4843FFFF41FFE3FF35A3FAFFFF49BBC8CCFB764C7F000041534D8D9B3843FFFF41FFE3FF358FFAFFFF49BBD8CCFB764C7F000041534D8D9B2843FFFF41FFE3FF357BFAFFFF49BBE8CCFB764C7F000041534D8D9B1843FFFF41FFE3FF3567FAFFFF49BBF8CCFB764C7F000041534D8D9B0843FFFF41FFE3FF3553FAFFFF49BB08CDFB764C7F000041534D8D9BF842FFFF41FFE3FF353FFAFFFF49BB18CDFB764C7F000041534D8D9BE842FFFF41FFE3FF352BFAFFFF49BB28CDFB764C7F000041534D8D9BD842FFFF41FFE3
[3e4bfe51efa6765] jit-backend-dump}
[3e4bfe51efb1343] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbce34 +0  20000000
[3e4bfe51efb283c] jit-backend-dump}
[3e4bfe51efb6841] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd145 +0  20000000
[3e4bfe51efb775b] jit-backend-dump}
[3e4bfe51efbab2d] {jit-backend-addr
bridge out of Guard 0x3a73460 has address 0x7f4c76fbce30 to 0x7f4c76fbd140
       gc table: 0x7f4c76fbcd50
    jump target: 0x7f4c76fbce30
         resops: 0x7f4c76fbce3e
       failures: 0x7f4c76fbd140
            end: 0x7f4c76fbd3eb
[3e4bfe51efbd072] jit-backend-addr}
[3e4bfe51efc074a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbce54 +0  47030000
[3e4bfe51efc157c] jit-backend-dump}
[3e4bfe51efc4a1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbce66 +0  51030000
[3e4bfe51efc5736] jit-backend-dump}
[3e4bfe51efc884c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbce78 +0  5B030000
[3e4bfe51efc950c] jit-backend-dump}
[3e4bfe51efcc68f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbce84 +0  6B030000
[3e4bfe51efcd343] jit-backend-dump}
[3e4bfe51efd043a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbce9b +0  70030000
[3e4bfe51efd10d5] jit-backend-dump}
[3e4bfe51efd4170] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbceac +0  7B030000
[3e4bfe51efd4e24] jit-backend-dump}
[3e4bfe51efd7ef9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbceb9 +0  8A030000
[3e4bfe51efd8b73] jit-backend-dump}
[3e4bfe51efdbc45] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbcec7 +0  98030000
[3e4bfe51efdc8a3] jit-backend-dump}
[3e4bfe51efdf966] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbcedb +0  A0030000
[3e4bfe51efe05c7] jit-backend-dump}
[3e4bfe51efe36c7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbcefa +0  9D030000
[3e4bfe51efe4325] jit-backend-dump}
[3e4bfe51efe743e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbcf0b +0  A8030000
[3e4bfe51efe80d3] jit-backend-dump}
[3e4bfe51efeb19c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbcf22 +0  AD030000
[3e4bfe51efebe15] jit-backend-dump}
[3e4bfe51efeef0f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbcf2f +0  BC030000
[3e4bfe51efefb83] jit-backend-dump}
[3e4bfe51eff2c43] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbcf59 +0  AE030000
[3e4bfe51eff38c8] jit-backend-dump}
[3e4bfe51eff693f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbcf6d +0  B6030000
[3e4bfe51eff75af] jit-backend-dump}
[3e4bfe51effa66c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbcf7c +0  C3030000
[3e4bfe51effb2ca] jit-backend-dump}
[3e4bfe51effe387] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbcf8e +0  CD030000
[3e4bfe51efff019] jit-backend-dump}
[3e4bfe51f00210a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbcfb0 +0  C7030000
[3e4bfe51f002db4] jit-backend-dump}
[3e4bfe51f005e9c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbcfbd +0  D6030000
[3e4bfe51f006b31] jit-backend-dump}
[3e4bfe51f009c2b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbcfc7 +0  E8030000
[3e4bfe51f00a8b7] jit-backend-dump}
[3e4bfe51f00d989] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbcfdb +0  F0030000
[3e4bfe51f00e5ff] jit-backend-dump}
[3e4bfe51f011a30] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6d4d +0  DF600000
[3e4bfe51f0126e7] jit-backend-dump}
[3e4bfe51f01674e] jit-backend}
[3e4bfe51f01a1c5] {jit-log-opt-bridge
# bridge out of Guard 0x3a73460 with 110 ops
[p0, p1, p2, p3, p4, p5]
+246: guard_not_invalidated(descr=<Guard0x3aa1b20>) [p0, p1, p2, p3, p4, p5]
+246: guard_nonnull_class(p4, 16584240, descr=<Guard0x3aa1b80>) [p0, p1, p2, p3, p4, p5]
+264: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3aa1be0>) [p0, p1, p2, p3, p4, p5]
+282: guard_nonnull_class(p2, ConstClass(W_Fixnum), descr=<Guard0x3aa1c40>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+300: guard_class(p0, 16437352, descr=<Guard0x3a9dec8>) [p0, p1, p2, p3, p4, p5]
+312: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+316: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3aa1ca0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(< y4851 x4849)')
+335: i12 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+339: i13 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+343: i14 = int_lt(i12, i13)
+346: guard_false(i14, descr=<Guard0x3a9df10>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+352: p15 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+356: p16 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+356: i17 = instance_ptr_eq(p0, p15)
+359: guard_true(i17, descr=<Guard0x3a9df58>) [p0, p1, p2, p3, p4, p5]
+365: guard_class(p15, 16437352, descr=<Guard0x3a9dfa0>) [p0, p1, p2, p3, p4, p5]
+379: p19 = getfield_gc_r(p15, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+390: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3abc020>) [p0, p1, p2, p3, p4, p5]
+399: p21 = getfield_gc_r(p15, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+403: p22 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+407: p23 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+411: guard_nonnull_class(p21, 16584240, descr=<Guard0x3aa1d00>) [p0, p1, p2, p3, p4, p5]
+430: i25 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+434: guard_class(p23, 16437352, descr=<Guard0x3abc068>) [p0, p1, p2, p3, p4, p5]
+447: p27 = getfield_gc_r(p23, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+451: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x3aa1d60>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)')
+470: guard_class(p22, 16478448, descr=<Guard0x3abc0b0>) [p0, p1, p2, p3, p4, p5]
+483: p30 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+487: p31 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+491: p32 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+502: p33 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+513: guard_class(p33, 16505296, descr=<Guard0x3abc0f8>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
debug_merge_point(0, 0, '(- y4851 1)')
+525: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3aa1dc0>) [p0, p1, p2, p3, p4, p5]
+545: i36 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+550: i38 = int_sub_ovf(i36, 1)
+554: guard_no_overflow(descr=<Guard0x3abc140>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+560: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3aa1e20>) [p0, p1, p2, p3, p4, p5]
+578: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3aa1e80>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+612: i41 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+616: i42 = int_lt(i41, i38)
+619: guard_false(i42, descr=<Guard0x3abc188>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+625: i44 = int_sub_ovf(i41, 1)
+629: guard_no_overflow(descr=<Guard0x3abc1d0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+635: i45 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+646: i46 = int_lt(i45, i44)
+649: guard_true(i46, descr=<Guard0x3abc218>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+655: p47 = new_with_vtable(descr=<SizeDescr 24>)
+699: p48 = new_with_vtable(descr=<SizeDescr 48>)
+717: setfield_gc(p48, ConstPtr(ptr49), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+728: setfield_gc(p48, ConstPtr(ptr50), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+732: p51 = new_with_vtable(descr=<SizeDescr 16>)
+743: setfield_gc(p51, i44, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+747: setfield_gc(p48, p51, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+751: setfield_gc(p48, p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+755: setfield_gc(p48, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+759: p52 = new_with_vtable(descr=<SizeDescr 24>)
+771: p53 = new_with_vtable(descr=<SizeDescr 48>)
+782: setfield_gc(p53, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+786: p54 = new_with_vtable(descr=<SizeDescr 48>)
+797: setfield_gc(p54, ConstPtr(ptr49), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+808: setfield_gc(p54, ConstPtr(ptr55), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+812: setfield_gc(p54, p51, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+816: setfield_gc(p54, p32, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+820: setfield_gc(p54, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+824: setfield_gc(p53, p54, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+828: p56 = new_with_vtable(descr=<SizeDescr 64>)
+840: setfield_gc(p56, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+845: setfield_gc(p56, p33, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+850: setfield_gc(p56, p23, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+862: setfield_gc(p56, ConstPtr(ptr57), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+867: setfield_gc(p56, p21, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_0 40 pure>)
+872: p58 = new_with_vtable(descr=<SizeDescr 16>)
+884: setfield_gc(p58, i25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+895: setfield_gc(p56, p58, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_1 48 pure>)
+900: setfield_gc(p56, p30, descr=<FieldP pycket.small_list.LetContSize3.inst__vals_w_2 56 pure>)
+905: setfield_gc(p53, p56, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+909: setfield_gc(p53, ConstPtr(ptr59), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+920: p60 = new_with_vtable(descr=<SizeDescr 24>)
+931: setfield_gc(p60, p56, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+935: setfield_gc(p60, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+943: setfield_gc(p53, p60, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+947: setfield_gc(p52, p53, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+951: setfield_gc(p52, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+959: setfield_gc(p47, p48, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+963: setfield_gc(p47, p52, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+967: jump(p47, p53, descr=TargetToken(60615520))
+1008: --end of the loop--
[3e4bfe51f072353] jit-log-opt-bridge}
[3e4bfe51f28310c] {jit-backend
[3e4bfe51f300f33] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd5a
[3e4bfe51f30a47f] jit-backend-dump}
[3e4bfe51f314d1d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd694 +0  20000000
[3e4bfe51f316167] jit-backend-dump}
[3e4bfe51f31a18a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd995 +0  20000000
[3e4bfe51f31b021] jit-backend-dump}
[3e4bfe51f31e5d4] {jit-backend-addr
bridge out of Guard 0x3a9c650 has address 0x7f4c76fbd690 to 0x7f4c76fbd990
       gc table: 0x7f4c76fbd5a0
    jump target: 0x7f4c76fbd690
         resops: 0x7f4c76fbd69e
       failures: 0x7f4c76fbd990
            end: 0x7f4c76fbdc73
[3e4bfe51f320a9e] jit-backend-addr}
[3e4bfe51f323fab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd6ae +0  21030000
[3e4bfe51f324d7e] jit-backend-dump}
[3e4bfe51f327ff0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd6c5 +0  26030000
[3e4bfe51f328cdb] jit-backend-dump}
[3e4bfe51f32c23e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd6d1 +0  52030000
[3e4bfe51f32cf25] jit-backend-dump}
[3e4bfe51f3301ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd6e2 +0  5D030000
[3e4bfe51f330ea4] jit-backend-dump}
[3e4bfe51f333fd5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd6f9 +0  62030000
[3e4bfe51f334c2a] jit-backend-dump}
[3e4bfe51f337cff] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd707 +0  70030000
[3e4bfe51f33897c] jit-backend-dump}
[3e4bfe51f33ba5d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd71e +0  75030000
[3e4bfe51f33c6c4] jit-backend-dump}
[3e4bfe51f33f7ef] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd736 +0  79030000
[3e4bfe51f340466] jit-backend-dump}
[3e4bfe51f34353b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd74d +0  7E030000
[3e4bfe51f3441ab] jit-backend-dump}
[3e4bfe51f347268] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd75b +0  8C030000
[3e4bfe51f347edf] jit-backend-dump}
[3e4bfe51f34afc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd768 +0  9B030000
[3e4bfe51f34bc27] jit-backend-dump}
[3e4bfe51f34ece7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd776 +0  A9030000
[3e4bfe51f34f94e] jit-backend-dump}
[3e4bfe51f352a27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd78a +0  B1030000
[3e4bfe51f3536a0] jit-backend-dump}
[3e4bfe51f3567db] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd7a9 +0  AE030000
[3e4bfe51f35745d] jit-backend-dump}
[3e4bfe51f35a4d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd7ba +0  B9030000
[3e4bfe51f35b153] jit-backend-dump}
[3e4bfe51f35e201] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd7d1 +0  BE030000
[3e4bfe51f35ee6e] jit-backend-dump}
[3e4bfe51f361f1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd7df +0  CC030000
[3e4bfe51f362b95] jit-backend-dump}
[3e4bfe51f365c1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd7ff +0  C8030000
[3e4bfe51f36688b] jit-backend-dump}
[3e4bfe51f369958] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd811 +0  D2030000
[3e4bfe51f36a5bc] jit-backend-dump}
[3e4bfe51f36d64e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd81f +0  E0030000
[3e4bfe51f36e299] jit-backend-dump}
[3e4bfe51f37138a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd831 +0  EA030000
[3e4bfe51f372007] jit-backend-dump}
[3e4bfe51f375099] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd83a +0  FD030000
[3e4bfe51f375cfd] jit-backend-dump}
[3e4bfe51f378da4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbd847 +0  0C040000
[3e4bfe51f379a2d] jit-backend-dump}
[3e4bfe51f38088b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb9100 +0  8C450000
[3e4bfe51f38173e] jit-backend-dump}
[3e4bfe51f38588a] jit-backend}
[3e4bfe51f3893ac] {jit-log-opt-bridge
# bridge out of Guard 0x3a9c650 with 107 ops
[p0, p1]
+262: guard_class(p1, 16437352, descr=<Guard0x3aa1ee0>) [p0, p1]
+274: p3 = getfield_gc_r(p1, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+278: guard_nonnull_class(p3, ConstClass(ForwardLink), descr=<Guard0x3aa1f40>) [p0, p1]
debug_merge_point(0, 0, '(- x4849 1)')
+297: guard_not_invalidated(descr=<Guard0x3abc260>) [p0, p1]
+297: guard_class(p0, 16499664, descr=<Guard0x3abc2a8>) [p0, p1]
+309: p6 = getfield_gc_r(p0, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+313: guard_class(p6, 16478448, descr=<Guard0x3abc2f0>) [p0, p1]
+326: p8 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+330: guard_nonnull_class(p8, ConstClass(W_Fixnum), descr=<Guard0x3aa1fa0>) [p0, p1]
+349: i10 = getfield_gc_i(p8, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+353: i12 = int_sub_ovf(i10, 1)
+357: guard_no_overflow(descr=<Guard0x3abc338>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4862 AppRand1 y4851 z4853)')
+363: p13 = getfield_gc_r(p0, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+367: guard_nonnull_class(p13, 16584240, descr=<Guard0x3ac0020>) [p0, p1]
+386: p15 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+390: guard_nonnull_class(p15, ConstClass(W_Fixnum), descr=<Guard0x3ac0080>) [p0, p1]
+410: p17 = getfield_gc_r(p6, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+414: guard_nonnull_class(p17, ConstClass(W_Fixnum), descr=<Guard0x3ac00e0>) [p0, p1]
+433: p19 = getfield_gc_r(p6, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+433: i20 = getfield_gc_i(p15, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+438: i21 = int_lt(i20, i12)
+441: guard_false(i21, descr=<Guard0x3abc380>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+447: p22 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+451: p23 = getfield_gc_r(p13, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+451: i24 = instance_ptr_eq(p1, p22)
+454: guard_true(i24, descr=<Guard0x3abc3c8>) [p0, p1]
+460: guard_class(p22, 16437352, descr=<Guard0x3abc410>) [p0, p1]
+474: p26 = getfield_gc_r(p22, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+485: guard_value(p26, ConstPtr(ptr27), descr=<Guard0x3abc458>) [p0, p1]
+494: p28 = getfield_gc_r(p22, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+498: p29 = getfield_gc_r(p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+502: p30 = getfield_gc_r(p22, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+506: guard_nonnull_class(p28, 16584240, descr=<Guard0x3ac0140>) [p0, p1]
+525: i32 = getfield_gc_i(p17, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+529: guard_class(p30, 16438168, descr=<Guard0x3abc4a0>) [p0, p1]
+542: p34 = getfield_gc_r(p30, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+546: guard_nonnull_class(p34, ConstClass(ForwardLink), descr=<Guard0x3ac01a0>) [p0, p1]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)')
+565: guard_class(p29, 16478448, descr=<Guard0x3abc4e8>) [p0, p1]
+579: p37 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+584: p38 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+589: p39 = getfield_gc_r(p29, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+594: p40 = getfield_gc_r(p29, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+599: guard_class(p40, 16505296, descr=<Guard0x3abc530>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
debug_merge_point(0, 0, '(- y4851 1)')
+611: guard_nonnull_class(p39, ConstClass(W_Fixnum), descr=<Guard0x3ac0200>) [p0, p1]
+629: i43 = getfield_gc_i(p39, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+633: i45 = int_sub_ovf(i43, 1)
+637: guard_no_overflow(descr=<Guard0x3abc578>) [p0, p1]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+643: guard_nonnull_class(p38, ConstClass(W_Fixnum), descr=<Guard0x3ac0260>) [p0, p1]
+661: guard_nonnull(p37, descr=<Guard0x3abc5c0>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+670: i47 = getfield_gc_i(p38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+674: i48 = int_lt(i47, i45)
+677: guard_true(i48, descr=<Guard0x3abc608>) [p0, p1]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+683: p49 = new_with_vtable(descr=<SizeDescr 24>)
+727: p50 = new_with_vtable(descr=<SizeDescr 48>)
+745: setfield_gc(p50, ConstPtr(ptr51), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+756: setfield_gc(p50, ConstPtr(ptr52), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+760: p53 = new_with_vtable(descr=<SizeDescr 16>)
+771: setfield_gc(p53, i45, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+775: setfield_gc(p50, p53, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+779: setfield_gc(p50, p37, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+783: setfield_gc(p50, p38, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+787: p54 = new_with_vtable(descr=<SizeDescr 24>)
+798: p55 = new_with_vtable(descr=<SizeDescr 48>)
+816: setfield_gc(p55, p34, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+820: p56 = new_with_vtable(descr=<SizeDescr 48>)
+838: setfield_gc(p56, ConstPtr(ptr51), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+849: setfield_gc(p56, ConstPtr(ptr57), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+853: setfield_gc(p56, p53, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+857: setfield_gc(p56, p37, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+861: setfield_gc(p56, p38, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+865: setfield_gc(p55, p56, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+876: p58 = new_with_vtable(descr=<SizeDescr 56>)
+887: setfield_gc(p58, p34, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+891: setfield_gc(p58, p29, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+895: setfield_gc(p58, p30, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+906: setfield_gc(p58, ConstPtr(ptr59), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+910: setfield_gc(p58, i32, descr=<FieldS pycket.small_list.LetContSize2Fixed01.inst_vals_fixed_1 40 pure>)
+914: setfield_gc(p58, p28, descr=<FieldP pycket.small_list.LetContSize2Fixed01.inst_w_val0 48 pure>)
+918: setfield_gc(p55, p58, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+922: setfield_gc(p55, ConstPtr(ptr60), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+926: p61 = new_with_vtable(descr=<SizeDescr 24>)
+937: setfield_gc(p61, p58, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+941: setfield_gc(p61, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+949: setfield_gc(p55, p61, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+953: setfield_gc(p54, p55, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+957: setfield_gc(p54, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+965: setfield_gc(p49, p50, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+976: setfield_gc(p49, p54, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+980: jump(p49, p55, descr=TargetToken(60615520))
+1008: --end of the loop--
[3e4bfe51f3deaab] jit-log-opt-bridge}
[3e4bfe51f711f1d] {jit-backend
[3e4bfe51f74b506] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbdd
[3e4bfe51f750dab] jit-backend-dump}
[3e4bfe51f75b4f6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbdd64 +0  20000000
[3e4bfe51f75c946] jit-backend-dump}
[3e4bfe51f760740] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbdea5 +0  20000000
[3e4bfe51f7616ad] jit-backend-dump}
[3e4bfe51f7649be] {jit-backend-addr
bridge out of Guard 0x3a728d8 has address 0x7f4c76fbdd60 to 0x7f4c76fbdea0
       gc table: 0x7f4c76fbdd10
    jump target: 0x7f4c76fbdd60
         resops: 0x7f4c76fbdd6e
       failures: 0x7f4c76fbdea0
            end: 0x7f4c76fbdfa7
[3e4bfe51f766d6f] jit-backend-addr}
[3e4bfe51f76a2e1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbdd7e +0  61010000
[3e4bfe51f76b13b] jit-backend-dump}
[3e4bfe51f76e572] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbdd8e +0  6D010000
[3e4bfe51f76f2dd] jit-backend-dump}
[3e4bfe51f772495] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbdda5 +0  72010000
[3e4bfe51f77318c] jit-backend-dump}
[3e4bfe51f7762c6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbddbd +0  76010000
[3e4bfe51f776fdb] jit-backend-dump}
[3e4bfe51f77a288] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbddca +0  A1010000
[3e4bfe51f77afb6] jit-backend-dump}
[3e4bfe51f77e1fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbdde7 +0  A0010000
[3e4bfe51f77eefa] jit-backend-dump}
[3e4bfe51f782292] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb57be +0  9E850000
[3e4bfe51f782fc6] jit-backend-dump}
[3e4bfe51f78702a] jit-backend}
[3e4bfe51f78ac56] {jit-log-opt-bridge
# bridge out of Guard 0x3a728d8 with 36 ops
[p0, p1]
+102: guard_class(p1, 16499664, descr=<Guard0x3ac02c0>) [p0, p1]
+114: p3 = getfield_gc_r(p1, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+118: guard_class(p0, 16435208, descr=<Guard0x3abc650>) [p0, p1]
+130: p5 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+134: guard_nonnull_class(p5, ConstClass(ForwardLink), descr=<Guard0x3ac0320>) [p0, p1]
debug_merge_point(0, 0, 'k4859')
+153: p7 = getfield_gc_r(p1, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+157: guard_nonnull_class(p7, 16584240, descr=<Guard0x3ac0380>) [p0, p1]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+177: guard_not_invalidated(descr=<Guard0x3abc698>) [p0, p1]
+177: guard_class(p3, 16478448, descr=<Guard0x3abc6e0>) [p0, p1]
+190: p10 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+194: p11 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+198: p12 = getfield_gc_r(p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+202: p13 = getfield_gc_r(p3, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+206: guard_class(p13, 16505296, descr=<Guard0x3abc728>) [p0, p1]
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+219: p15 = new_with_vtable(descr=<SizeDescr 24>)
+266: p16 = new_with_vtable(descr=<SizeDescr 48>)
+277: setfield_gc(p16, p13, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+288: setfield_gc(p16, ConstPtr(ptr17), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+292: setfield_gc(p16, p10, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+296: setfield_gc(p16, p11, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+300: setfield_gc(p16, p12, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+304: p18 = new_with_vtable(descr=<SizeDescr 24>)
+315: p19 = new_with_vtable(descr=<SizeDescr 48>)
+326: setfield_gc(p19, p5, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+330: setfield_gc(p19, p3, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+334: setfield_gc(p19, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+345: setfield_gc(p19, ConstPtr(ptr20), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+349: setfield_gc(p19, p7, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+353: setfield_gc(p18, p19, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+357: setfield_gc(p18, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+365: setfield_gc(p15, p16, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+369: setfield_gc(p15, p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+373: jump(p15, p19, descr=TargetToken(60615520))
+400: --end of the loop--
[3e4bfe51f7abb54] jit-log-opt-bridge}
[3e4bfe521ccae41] {jit-backend
[3e4bfe521d2dd63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe140 +0  00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000048817D48FFFFFF000F8CE201000048FF0425E0A83D034883F80172068138705402000F85000000004883F90172068139601400000F85000000004883FF017206813F601400000F8500000000813AA81600000F85000000004C8B7A084983FF01720741813F900F00000F85000000004C8B7F084C8B69084D39EF0F8C000000004C8B68084C39EA0F850000000041817D00A81600000F85000000004D8B7D204C8B25E2FEFFFF4D39E70F85000000004D8B65284D8B7D104D8B55184983FC01720841813C24705402000F85000000004D8B6E0841813A480E00000F85000000004D8B4A084983F9017207418139900F00000F850000000041813F30B700000F85000000004D8B4F184D8B4720498B7728498B5F08813B102001000F85000000004883FE017206813E601400000F85000000004C8B7E084983EF010F80000000004983F8017207418138601400000F85000000004983F9017207418139601400000F85000000004C89A5380100004D8B60084D39FC0F8C000000004983EC010F80000000004D8B79084D39E70F8C00000000488B0C25F091F900488D5110483B14251092F9000F876B00000048891425F091F90048C701601400004C89690848899D30010000488B85380100004C89CF4889B5380100004C89D249BBB031FB764C7F000041FFE3662E0F1F84000000000048C7442408FFFFFF0049BBB8DFFB764C7F00004C895D204D8D9B3833FFFF41FFD3E9F8FDFFFF49BB28E1FB764C7F00004C895D204D8D9BC839FFFF41FFD3E980FFFFFFFF3507FDFFFF49BBC8DFFB764C7F000041534D8D9B3830FFFF41FFE3FF35F3FCFFFF49BBD8DFFB764C7F000041534D8D9B2830FFFF41FFE3FF35DFFCFFFF49BBE8DFFB764C7F000041534D8D9B1830FFFF41FFE3FF35CBFCFFFF49BBF8DFFB764C7F000041534D8D9B0830FFFF41FFE3FF35B7FCFFFF49BB08E0FB764C7F000041534D8D9BF82FFFFF41FFE3FF35A3FCFFFF49BB18E0FB764C7F000041534D8D9BE82FFFFF41FFE3FF358FFCFFFF49BB28E0FB764C7F000041534D8D9BD82FFFFF41FFE3FF357BFCFFFF49BB38E0FB764C7F000041534D8D9BC82FFFFF41FFE3FF3567FCFFFF49BB48E0FB764C7F000041534D8D9BB82FFFFF41FFE3FF355BFCFFFF49BB58E0FB764C7F000041534D8D9BA82FFFFF41FFE3FF3547FCFFFF49BB68E0FB764C7F000041534D8D9B982FFFFF41FFE3FF3533FCFFFF49BB78E0FB764C7F000041534D8D9B882FFFFF41FFE3FF351FFCFFFF49BB88E0FB764C7F000041534D8D9B782FFFFF41FFE3FF350BFCFFFF49BB98E0FB764C7F000041534D8D9B682FFFFF41FFE3FF35F7FBFFFF49BBA8E0FB764C7F000041534D8D9B582FFFFF41FFE3FF35E3FBFFFF49BBB8E0FB764C7F000041534D8D9B482FFFFF41FFE3FF35CFFBFFFF49BBC8E0FB764C7F000041534D8D9B382FFFFF41FFE3FF35BBFBFFFF49BBD8E0FB764C7F000041534D8D9B282FFFFF41FFE3FF35A7FBFFFF49BBE8E0FB764C7F000041534D8D9B182FFFFF41FFE3FF3593FBFFFF49BBF8E0FB764C7F000041534D8D9B082FFFFF41FFE3FF357FFBFFFF49BB08E1FB764C7F000041534D8D9BF82EFFFF41FFE3FF356BFBFFFF49BB18E1FB764C7F000041534D8D9BE82EFFFF41FFE3
[3e4bfe521d37d0e] jit-backend-dump}
[3e4bfe521d42dc3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe204 +0  20000000
[3e4bfe521d441e5] jit-backend-dump}
[3e4bfe521d481ad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe3f5 +0  20000000
[3e4bfe521d4903b] jit-backend-dump}
[3e4bfe521d4c318] {jit-backend-addr
bridge out of Guard 0x3a732b0 has address 0x7f4c76fbe200 to 0x7f4c76fbe3f0
       gc table: 0x7f4c76fbe140
    jump target: 0x7f4c76fbe200
         resops: 0x7f4c76fbe20e
       failures: 0x7f4c76fbe3f0
            end: 0x7f4c76fbe69b
[3e4bfe521d4e8a3] jit-backend-addr}
[3e4bfe521d52030] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe224 +0  27020000
[3e4bfe521d52e80] jit-backend-dump}
[3e4bfe521d561f0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe236 +0  31020000
[3e4bfe521d56e57] jit-backend-dump}
[3e4bfe521d59fad] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe248 +0  3B020000
[3e4bfe521d5abf0] jit-backend-dump}
[3e4bfe521d5dca6] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe254 +0  4B020000
[3e4bfe521d5e8d3] jit-backend-dump}
[3e4bfe521d61a5d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe26b +0  50020000
[3e4bfe521d626a3] jit-backend-dump}
[3e4bfe521d657d4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe27c +0  5B020000
[3e4bfe521d6640d] jit-backend-dump}
[3e4bfe521d694f5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe289 +0  6A020000
[3e4bfe521d6a140] jit-backend-dump}
[3e4bfe521d6d1fd] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe297 +0  78020000
[3e4bfe521d6de30] jit-backend-dump}
[3e4bfe521d70f1e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe2ab +0  80020000
[3e4bfe521d71b57] jit-backend-dump}
[3e4bfe521d74c0b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe2cb +0  7C020000
[3e4bfe521d7584a] jit-backend-dump}
[3e4bfe521d788bb] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe2dc +0  87020000
[3e4bfe521d79510] jit-backend-dump}
[3e4bfe521d7c5b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe2f3 +0  8C020000
[3e4bfe521d7d1e7] jit-backend-dump}
[3e4bfe521d8024e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe300 +0  9B020000
[3e4bfe521d80e91] jit-backend-dump}
[3e4bfe521d83f8e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe31c +0  9B020000
[3e4bfe521d84bd6] jit-backend-dump}
[3e4bfe521d8ae70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe32e +0  A5020000
[3e4bfe521d8bca2] jit-backend-dump}
[3e4bfe521d8f48d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe33c +0  B3020000
[3e4bfe521d9014d] jit-backend-dump}
[3e4bfe521d93275] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe34f +0  BC020000
[3e4bfe521d93f19] jit-backend-dump}
[3e4bfe521d9701c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe362 +0  C5020000
[3e4bfe521d97cab] jit-backend-dump}
[3e4bfe521d9ad50] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe376 +0  CD020000
[3e4bfe521d9b9cf] jit-backend-dump}
[3e4bfe521d9eb10] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe380 +0  DF020000
[3e4bfe521d9f795] jit-backend-dump}
[3e4bfe521da28b7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe38d +0  EE020000
[3e4bfe521da3543] jit-backend-dump}
[3e4bfe521da68c2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb6c9c +0  60750000
[3e4bfe521da757f] jit-backend-dump}
[3e4bfe521dab57e] jit-backend}
[3e4bfe521daf094] {jit-log-opt-bridge
# bridge out of Guard 0x3a732b0 with 70 ops
[p0, p1, p2, p3, p4, p5]
+214: guard_not_invalidated(descr=<Guard0x3ac03e0>) [p0, p1, p2, p3, p4, p5]
+214: guard_nonnull_class(p4, 16584240, descr=<Guard0x3ac0440>) [p0, p1, p2, p3, p4, p5]
+232: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3ac04a0>) [p0, p1, p2, p3, p4, p5]
+250: guard_nonnull_class(p2, ConstClass(W_Fixnum), descr=<Guard0x3ac0500>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+268: guard_class(p0, 16437352, descr=<Guard0x3abc770>) [p0, p1, p2, p3, p4, p5]
+280: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+284: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3ac0560>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(< y4851 x4849)')
+303: i12 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+307: i13 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+311: i14 = int_lt(i12, i13)
+314: guard_false(i14, descr=<Guard0x3abc7b8>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+320: p15 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+324: p16 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+324: i17 = instance_ptr_eq(p0, p15)
+327: guard_true(i17, descr=<Guard0x3abc800>) [p0, p1, p2, p3, p4, p5]
+333: guard_class(p15, 16437352, descr=<Guard0x3abc848>) [p0, p1, p2, p3, p4, p5]
+347: p19 = getfield_gc_r(p15, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+358: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3abc890>) [p0, p1, p2, p3, p4, p5]
+367: p21 = getfield_gc_r(p15, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+371: p22 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+375: p23 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+379: guard_nonnull_class(p21, 16584240, descr=<Guard0x3ac05c0>) [p0, p1, p2, p3, p4, p5]
+399: i25 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+403: guard_class(p23, 16435208, descr=<Guard0x3abc8d8>) [p0, p1, p2, p3, p4, p5]
+416: p27 = getfield_gc_r(p23, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+420: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x3ac0620>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)')
+439: guard_class(p22, 16478448, descr=<Guard0x3abc920>) [p0, p1, p2, p3, p4, p5]
+452: p30 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+456: p31 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+460: p32 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+464: p33 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+468: guard_class(p33, 16505296, descr=<Guard0x3abc968>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
debug_merge_point(0, 0, '(- y4851 1)')
+480: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3ac0680>) [p0, p1, p2, p3, p4, p5]
+498: i36 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+502: i38 = int_sub_ovf(i36, 1)
+506: guard_no_overflow(descr=<Guard0x3abc9b0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+512: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3ac06e0>) [p0, p1, p2, p3, p4, p5]
+531: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3ac0740>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+550: i41 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+561: i42 = int_lt(i41, i38)
+564: guard_false(i42, descr=<Guard0x3abc9f8>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+570: i44 = int_sub_ovf(i41, 1)
+574: guard_no_overflow(descr=<Guard0x3abca40>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+580: i45 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+584: i46 = int_lt(i45, i44)
+587: guard_false(i46, descr=<Guard0x3abca88>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)')
+593: p47 = new_with_vtable(descr=<SizeDescr 16>)
+634: setfield_gc(p47, i25, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+638: jump(p33, p21, p47, p30, p32, p23, descr=TargetToken(61039664))
+688: --end of the loop--
[3e4bfe521def146] jit-log-opt-bridge}
[3e4bfe522060482] {jit-backend
[3e4bfe5220b007e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe
[3e4bfe5220b5aab] jit-backend-dump}
[3e4bfe5220c056a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe7a4 +0  20000000
[3e4bfe5220c1a59] jit-backend-dump}
[3e4bfe5220c58c1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe925 +0  20000000
[3e4bfe5220c67f7] jit-backend-dump}
[3e4bfe5220c9c3d] {jit-backend-addr
bridge out of Guard 0x3a734a8 has address 0x7f4c76fbe7a0 to 0x7f4c76fbe920
       gc table: 0x7f4c76fbe740
    jump target: 0x7f4c76fbe7a0
         resops: 0x7f4c76fbe7ae
       failures: 0x7f4c76fbe920
            end: 0x7f4c76fbea27
[3e4bfe5220cbec5] jit-backend-addr}
[3e4bfe5220cf4ec] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe7bb +0  C0010000
[3e4bfe5220d031b] jit-backend-dump}
[3e4bfe5220d3660] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe7cd +0  CA010000
[3e4bfe5220d4332] jit-backend-dump}
[3e4bfe5220d7497] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe7df +0  D4010000
[3e4bfe5220d814b] jit-backend-dump}
[3e4bfe5220db2a1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe7eb +0  E4010000
[3e4bfe5220dbf79] jit-backend-dump}
[3e4bfe5220df10f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe802 +0  E9010000
[3e4bfe5220dfdad] jit-backend-dump}
[3e4bfe5220e2f1c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe813 +0  F4010000
[3e4bfe5220e3ba7] jit-backend-dump}
[3e4bfe5220e7071] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fb72b4 +0  E8740000
[3e4bfe5220e7d31] jit-backend-dump}
[3e4bfe5220ebd9e] jit-backend}
[3e4bfe5220ef978] {jit-log-opt-bridge
# bridge out of Guard 0x3a734a8 with 47 ops
[p0, p1, p2, p3, p4, p5]
+118: guard_not_invalidated(descr=<Guard0x3ac07a0>) [p0, p1, p2, p3, p4, p5]
+118: guard_nonnull(p4, descr=<Guard0x3abcad0>) [p0, p1, p2, p3, p4, p5]
+127: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3ac0800>) [p0, p1, p2, p3, p4, p5]
+145: guard_nonnull_class(p2, ConstClass(W_Fixnum), descr=<Guard0x3ac0860>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+163: guard_class(p0, 16435208, descr=<Guard0x3abcb18>) [p0, p1, p2, p3, p4, p5]
+175: p9 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+179: guard_nonnull_class(p9, ConstClass(ForwardLink), descr=<Guard0x3ac08c0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(< y4851 x4849)')
+198: i11 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+202: i12 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+206: i13 = int_lt(i11, i12)
+209: guard_true(i13, descr=<Guard0x3abcb60>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+215: p14 = new_with_vtable(descr=<SizeDescr 24>)
+265: p15 = new_with_vtable(descr=<SizeDescr 48>)
+283: setfield_gc(p15, ConstPtr(ptr16), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+294: setfield_gc(p15, ConstPtr(ptr17), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+298: setfield_gc(p15, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+302: setfield_gc(p15, p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+313: setfield_gc(p15, p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+317: p18 = new_with_vtable(descr=<SizeDescr 24>)
+328: p19 = new_with_vtable(descr=<SizeDescr 48>)
+339: setfield_gc(p19, p9, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+343: p20 = new_with_vtable(descr=<SizeDescr 48>)
+354: setfield_gc(p20, ConstPtr(ptr16), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+365: setfield_gc(p20, ConstPtr(ptr21), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+369: setfield_gc(p20, p3, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+373: setfield_gc(p20, p1, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+377: setfield_gc(p20, p2, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+381: setfield_gc(p19, p20, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+385: setfield_gc(p19, p0, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+396: setfield_gc(p19, ConstPtr(ptr22), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+400: p23 = new_with_vtable(descr=<SizeDescr 24>)
+411: setfield_gc(p23, p0, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+415: setfield_gc(p23, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+423: setfield_gc(p19, p23, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+427: setfield_gc(p18, p19, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+431: setfield_gc(p18, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+439: setfield_gc(p14, p15, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+443: setfield_gc(p14, p18, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+447: jump(p14, p19, descr=TargetToken(60615520))
+480: --end of the loop--
[3e4bfe522118224] jit-log-opt-bridge}
[3e4bfe524662003] {jit-backend
[3e4bfe5246b4550] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbeb
[3e4bfe5246bbd68] jit-backend-dump}
[3e4bfe5246c6a13] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbec24 +0  20000000
[3e4bfe5246c7fee] jit-backend-dump}
[3e4bfe5246cc11c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbede5 +0  20000000
[3e4bfe5246ccfb6] jit-backend-dump}
[3e4bfe5246d03f0] {jit-backend-addr
bridge out of Guard 0x3a9d148 has address 0x7f4c76fbec20 to 0x7f4c76fbede0
       gc table: 0x7f4c76fbeb80
    jump target: 0x7f4c76fbec20
         resops: 0x7f4c76fbec2e
       failures: 0x7f4c76fbede0
            end: 0x7f4c76fbf037
[3e4bfe5246d2a04] jit-backend-addr}
[3e4bfe5246d666b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbec44 +0  F7010000
[3e4bfe5246d74dd] jit-backend-dump}
[3e4bfe5246da8e3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbec56 +0  01020000
[3e4bfe5246db5e0] jit-backend-dump}
[3e4bfe5246de748] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbec68 +0  0B020000
[3e4bfe5246df417] jit-backend-dump}
[3e4bfe5246e2579] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbec74 +0  1B020000
[3e4bfe5246e322d] jit-backend-dump}
[3e4bfe5246e633f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbec8b +0  20020000
[3e4bfe5246e6fbc] jit-backend-dump}
[3e4bfe5246ea04e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbec9c +0  2B020000
[3e4bfe5246eacd7] jit-backend-dump}
[3e4bfe5246edd9d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbeca9 +0  3A020000
[3e4bfe5246eea47] jit-backend-dump}
[3e4bfe5246f1af5] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbecb6 +0  49020000
[3e4bfe5246f2777] jit-backend-dump}
[3e4bfe5246f5853] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbecca +0  51020000
[3e4bfe5246f651c] jit-backend-dump}
[3e4bfe5246f961f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbece8 +0  4F020000
[3e4bfe5246fa2a8] jit-backend-dump}
[3e4bfe5246fd393] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbecfa +0  59020000
[3e4bfe5246fe028] jit-backend-dump}
[3e4bfe52470116e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbed11 +0  5E020000
[3e4bfe524701df4] jit-backend-dump}
[3e4bfe524704ecf] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbed2d +0  5E020000
[3e4bfe524705b74] jit-backend-dump}
[3e4bfe524708c8f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbed40 +0  67020000
[3e4bfe52470993d] jit-backend-dump}
[3e4bfe52470ca15] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbed4e +0  75020000
[3e4bfe52470d6e7] jit-backend-dump}
[3e4bfe5247107d2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbed61 +0  7E020000
[3e4bfe52471145e] jit-backend-dump}
[3e4bfe52471455e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbed73 +0  88020000
[3e4bfe5247151f3] jit-backend-dump}
[3e4bfe52471836e] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbed80 +0  97020000
[3e4bfe524719000] jit-backend-dump}
[3e4bfe52471c40f] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbad0a +0  123F0000
[3e4bfe52471d10f] jit-backend-dump}
[3e4bfe52472121b] jit-backend}
[3e4bfe524724e41] {jit-log-opt-bridge
# bridge out of Guard 0x3a9d148 with 56 ops
[p0, p1, p2, p3, p4, p5]
+182: guard_not_invalidated(descr=<Guard0x3ac0920>) [p0, p1, p2, p3, p4, p5]
+182: guard_nonnull_class(p4, 16584240, descr=<Guard0x3ac0980>) [p0, p1, p2, p3, p4, p5]
+200: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3ac09e0>) [p0, p1, p2, p3, p4, p5]
+218: guard_nonnull_class(p2, ConstClass(W_Fixnum), descr=<Guard0x3ac0a40>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+236: guard_class(p0, 16437488, descr=<Guard0x3abcba8>) [p0, p1, p2, p3, p4, p5]
+248: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+252: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3ac0aa0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(< y4851 x4849)')
+271: i12 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+275: i13 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+279: i14 = int_lt(i12, i13)
+282: guard_false(i14, descr=<Guard0x3abcbf0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+288: p15 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+292: p16 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+292: i17 = instance_ptr_eq(p0, p15)
+295: guard_true(i17, descr=<Guard0x3abcc38>) [p0, p1, p2, p3, p4, p5]
+301: guard_class(p15, 16437488, descr=<Guard0x3abcc80>) [p0, p1, p2, p3, p4, p5]
+314: p19 = getfield_gc_r(p15, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+325: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3abccc8>) [p0, p1, p2, p3, p4, p5]
+334: p21 = getfield_gc_r(p15, descr=<FieldP pycket.small_list.LetContSize2Fixed01.inst_w_val0 48 pure>)
+338: i22 = getfield_gc_i(p15, descr=<FieldS pycket.small_list.LetContSize2Fixed01.inst_vals_fixed_1 40 pure>)
+342: p23 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+346: p24 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+350: guard_class(p23, 16478448, descr=<Guard0x3abcd10>) [p0, p1, p2, p3, p4, p5]
+364: p26 = getfield_gc_r(p23, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+369: guard_class(p24, 16435208, descr=<Guard0x3abcd58>) [p0, p1, p2, p3, p4, p5]
+382: p28 = getfield_gc_r(p24, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+386: guard_nonnull_class(p28, ConstClass(ForwardLink), descr=<Guard0x3ac0b00>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851)))) from (k4847 z4853)')
+405: p30 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+410: p31 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+415: p32 = getfield_gc_r(p23, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+420: guard_class(p26, 16505296, descr=<Guard0x3abcda0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))')
debug_merge_point(0, 0, '(- z4853 1)')
+433: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3ac0b60>) [p0, p1, p2, p3, p4, p5]
+452: i35 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+456: i37 = int_sub_ovf(i35, 1)
+460: guard_no_overflow(descr=<Guard0x3abcde8>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4874 AppRand5 x4849 y4851)')
+466: guard_nonnull_class(p30, ConstClass(W_Fixnum), descr=<Guard0x3ac0bc0>) [p0, p1, p2, p3, p4, p5]
+485: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3ac0c20>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+503: i40 = getfield_gc_i(p30, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+507: i41 = int_lt(i40, i37)
+510: guard_false(i41, descr=<Guard0x3abce30>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
debug_merge_point(0, 0, '(ctak-aux k4859 AppRand2 AppRand4 AppRand6) from (k4847 z4853)')
+516: p42 = new_with_vtable(descr=<SizeDescr 16>)
+557: setfield_gc(p42, i22, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+561: jump(p26, p21, p42, p1, p32, p24, descr=TargetToken(61039664))
+608: --end of the loop--
[3e4bfe52475b376] jit-log-opt-bridge}
[3e4bfe52706f796] {jit-backend
[3e4bfe5270edef9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf1b
[3e4bfe5270f6a14] jit-backend-dump}
[3e4bfe527101eb7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf284 +0  20000000
[3e4bfe52710343f] jit-backend-dump}
[3e4bfe5271074d1] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf545 +0  20000000
[3e4bfe52710842c] jit-backend-dump}
[3e4bfe52710b9aa] {jit-backend-addr
bridge out of Guard 0x3abc9f8 has address 0x7f4c76fbf280 to 0x7f4c76fbf540
       gc table: 0x7f4c76fbf1b0
    jump target: 0x7f4c76fbf280
         resops: 0x7f4c76fbf28e
       failures: 0x7f4c76fbf540
            end: 0x7f4c76fbf7b3
[3e4bfe52710dfe0] jit-backend-addr}
[3e4bfe5271118ab] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf2a4 +0  F7020000
[3e4bfe527112708] jit-backend-dump}
[3e4bfe527115c27] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf2b6 +0  01030000
[3e4bfe527116921] jit-backend-dump}
[3e4bfe527119aba] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf2c8 +0  0B030000
[3e4bfe52711a783] jit-backend-dump}
[3e4bfe52711d8c4] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf2d4 +0  1B030000
[3e4bfe52711e57a] jit-backend-dump}
[3e4bfe527121693] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf2eb +0  20030000
[3e4bfe527122343] jit-backend-dump}
[3e4bfe527125490] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf2fc +0  2B030000
[3e4bfe527126147] jit-backend-dump}
[3e4bfe527129272] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf309 +0  3A030000
[3e4bfe527129eee] jit-backend-dump}
[3e4bfe52712d06c] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf317 +0  48030000
[3e4bfe52712dd22] jit-backend-dump}
[3e4bfe527130e63] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf32b +0  50030000
[3e4bfe527131b29] jit-backend-dump}
[3e4bfe527134cb3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf34a +0  4D030000
[3e4bfe527135982] jit-backend-dump}
[3e4bfe527138e70] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf35b +0  58030000
[3e4bfe527139b27] jit-backend-dump}
[3e4bfe52713cd7b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf372 +0  5D030000
[3e4bfe52713da22] jit-backend-dump}
[3e4bfe527140bc7] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf37f +0  6C030000
[3e4bfe52714188a] jit-backend-dump}
[3e4bfe5271449fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf3aa +0  5D030000
[3e4bfe5271456a6] jit-backend-dump}
[3e4bfe5271487f9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf3be +0  65030000
[3e4bfe5271494d1] jit-backend-dump}
[3e4bfe52714c60b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf3cd +0  72030000
[3e4bfe52714d2c5] jit-backend-dump}
[3e4bfe5271503d8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf3df +0  7C030000
[3e4bfe52715107c] jit-backend-dump}
[3e4bfe52715418b] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf3e8 +0  8F030000
[3e4bfe527154e39] jit-backend-dump}
[3e4bfe527157f79] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf3f5 +0  9E030000
[3e4bfe527158c0e] jit-backend-dump}
[3e4bfe52715bf9a] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe376 +0  060F0000
[3e4bfe52715cc7b] jit-backend-dump}
[3e4bfe527160cf2] jit-backend}
[3e4bfe5271649c6] {jit-log-opt-bridge
# bridge out of Guard 0x3abc9f8 with 94 ops
[p0, p1, p2, p3, p4, p5]
+230: guard_not_invalidated(descr=<Guard0x3ac0c80>) [p0, p1, p2, p3, p4, p5]
+230: guard_nonnull_class(p4, 16584240, descr=<Guard0x3ac0ce0>) [p0, p1, p2, p3, p4, p5]
+248: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3ac0d40>) [p0, p1, p2, p3, p4, p5]
+266: guard_nonnull_class(p2, ConstClass(W_Fixnum), descr=<Guard0x3ac0da0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+284: guard_class(p0, 16437352, descr=<Guard0x3abce78>) [p0, p1, p2, p3, p4, p5]
+296: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+300: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3ac0e00>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(< y4851 x4849)')
+319: i12 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+323: i13 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+327: i14 = int_lt(i12, i13)
+330: guard_false(i14, descr=<Guard0x3abcec0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+336: p15 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+340: p16 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+340: i17 = instance_ptr_eq(p0, p15)
+343: guard_true(i17, descr=<Guard0x3abcf08>) [p0, p1, p2, p3, p4, p5]
+349: guard_class(p15, 16437352, descr=<Guard0x3abcf50>) [p0, p1, p2, p3, p4, p5]
+363: p19 = getfield_gc_r(p15, descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+374: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3abcf98>) [p0, p1, p2, p3, p4, p5]
+383: p21 = getfield_gc_r(p15, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+387: p22 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+391: p23 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+395: guard_nonnull_class(p21, 16584240, descr=<Guard0x3ac0e60>) [p0, p1, p2, p3, p4, p5]
+414: i25 = getfield_gc_i(p1, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+418: guard_class(p23, 16435208, descr=<Guard0x3abcfe0>) [p0, p1, p2, p3, p4, p5]
+431: p27 = getfield_gc_r(p23, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+435: guard_nonnull_class(p27, ConstClass(ForwardLink), descr=<Guard0x3ac0ec0>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849)))) from (k4847 z4853)')
+454: guard_class(p22, 16478448, descr=<Guard0x3abd028>) [p0, p1, p2, p3, p4, p5]
+467: p30 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+471: p31 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+475: p32 = getfield_gc_r(p22, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+486: p33 = getfield_gc_r(p22, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+497: guard_class(p33, 16505296, descr=<Guard0x3abd070>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))')
debug_merge_point(0, 0, '(- y4851 1)')
+510: guard_nonnull_class(p32, ConstClass(W_Fixnum), descr=<Guard0x3ac0f20>) [p0, p1, p2, p3, p4, p5]
+530: i36 = getfield_gc_i(p32, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+535: i38 = int_sub_ovf(i36, 1)
+539: guard_no_overflow(descr=<Guard0x3abd0b8>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(ctak-aux k4868 AppRand3 z4853 x4849)')
+545: guard_nonnull_class(p31, ConstClass(W_Fixnum), descr=<Guard0x3ac0f80>) [p0, p1, p2, p3, p4, p5]
+563: guard_nonnull(p30, descr=<Guard0x3abd100>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
+572: i40 = getfield_gc_i(p31, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+576: i41 = int_lt(i40, i38)
+579: guard_true(i41, descr=<Guard0x3abd148>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+585: p42 = new_with_vtable(descr=<SizeDescr 24>)
+629: p43 = new_with_vtable(descr=<SizeDescr 48>)
+647: setfield_gc(p43, ConstPtr(ptr44), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+658: setfield_gc(p43, ConstPtr(ptr45), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+662: p46 = new_with_vtable(descr=<SizeDescr 16>)
+673: setfield_gc(p46, i38, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+677: setfield_gc(p43, p46, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+681: setfield_gc(p43, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+685: setfield_gc(p43, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+689: p47 = new_with_vtable(descr=<SizeDescr 24>)
+700: p48 = new_with_vtable(descr=<SizeDescr 48>)
+711: setfield_gc(p48, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+715: p49 = new_with_vtable(descr=<SizeDescr 48>)
+727: setfield_gc(p49, ConstPtr(ptr44), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+739: setfield_gc(p49, ConstPtr(ptr50), descr=<FieldP pycket.values.W_Closure1AsEnv.inst_caselam 16 pure>)
+744: setfield_gc(p49, p46, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_0 24 pure>)
+749: setfield_gc(p49, p30, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_1 32 pure>)
+754: setfield_gc(p49, p31, descr=<FieldP rpython.tool.pairtype.W_Closure1AsEnvSize3.inst__vals_2 40 pure>)
+759: setfield_gc(p48, p49, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+763: p51 = new_with_vtable(descr=<SizeDescr 56>)
+775: setfield_gc(p51, p27, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+779: setfield_gc(p51, p22, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+783: setfield_gc(p51, p23, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+794: setfield_gc(p51, ConstPtr(ptr52), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+798: setfield_gc(p51, i25, descr=<FieldS pycket.small_list.LetContSize2Fixed01.inst_vals_fixed_1 40 pure>)
+802: setfield_gc(p51, p21, descr=<FieldP pycket.small_list.LetContSize2Fixed01.inst_w_val0 48 pure>)
+813: setfield_gc(p48, p51, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+817: setfield_gc(p48, ConstPtr(ptr53), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+828: p54 = new_with_vtable(descr=<SizeDescr 24>)
+840: setfield_gc(p54, p51, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+844: setfield_gc(p54, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+852: setfield_gc(p48, p54, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+856: setfield_gc(p47, p48, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+860: setfield_gc(p47, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+868: setfield_gc(p42, p43, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+872: setfield_gc(p42, p47, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+876: jump(p42, p48, descr=TargetToken(60615520))
+912: --end of the loop--
[3e4bfe5271b927b] jit-log-opt-bridge}
[3e4bfe52745bca3] {jit-backend
[3e4bfe5274bdf58] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf
[3e4bfe5274c5c0a] jit-backend-dump}
[3e4bfe5274d07ae] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf9d4 +0  20000000
[3e4bfe5274d1c78] jit-backend-dump}
[3e4bfe5274d5de0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfc05 +0  20000000
[3e4bfe5274d6cd0] jit-backend-dump}
[3e4bfe5274da122] {jit-backend-addr
bridge out of Guard 0x3abcb60 has address 0x7f4c76fbf9d0 to 0x7f4c76fbfc00
       gc table: 0x7f4c76fbf910
    jump target: 0x7f4c76fbf9d0
         resops: 0x7f4c76fbf9de
       failures: 0x7f4c76fbfc00
            end: 0x7f4c76fbfe57
[3e4bfe5274dc746] jit-backend-addr}
[3e4bfe5274e00a0] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbf9f4 +0  67020000
[3e4bfe5274e0f25] jit-backend-dump}
[3e4bfe5274e42e8] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfa06 +0  71020000
[3e4bfe5274e4f9b] jit-backend-dump}
[3e4bfe5274e8144] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfa18 +0  7B020000
[3e4bfe5274e8dcf] jit-backend-dump}
[3e4bfe5274ebf4d] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfa24 +0  8B020000
[3e4bfe5274ecc13] jit-backend-dump}
[3e4bfe5274efdac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfa3b +0  90020000
[3e4bfe5274f0a1c] jit-backend-dump}
[3e4bfe5274f3c08] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfa4c +0  9B020000
[3e4bfe5274f487b] jit-backend-dump}
[3e4bfe5274f79ea] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfa59 +0  AA020000
[3e4bfe5274f8651] jit-backend-dump}
[3e4bfe5274fb745] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfa66 +0  B9020000
[3e4bfe5274fc3b2] jit-backend-dump}
[3e4bfe5274ff4fc] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfa7a +0  C1020000
[3e4bfe527500184] jit-backend-dump}
[3e4bfe527503266] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfa8f +0  C8020000
[3e4bfe527503ed6] jit-backend-dump}
[3e4bfe527506ff2] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfaa0 +0  D3020000
[3e4bfe527507c56] jit-backend-dump}
[3e4bfe52750adac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfab7 +0  D8020000
[3e4bfe52750ba47] jit-backend-dump}
[3e4bfe52750ebac] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfac5 +0  E6020000
[3e4bfe52750f835] jit-backend-dump}
[3e4bfe527512972] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfad9 +0  EE020000
[3e4bfe5275135df] jit-backend-dump}
[3e4bfe527516754] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfae6 +0  FD020000
[3e4bfe5275173d3] jit-backend-dump}
[3e4bfe52751a545] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfaf4 +0  0B030000
[3e4bfe52751b1b2] jit-backend-dump}
[3e4bfe52751e2e9] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfb0c +0  0F030000
[3e4bfe52751ef87] jit-backend-dump}
[3e4bfe5275220a3] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbfb19 +0  1E030000
[3e4bfe527522d75] jit-backend-dump}
[3e4bfe527526129] {jit-backend-dump
BACKEND x86_64
SYS_EXECUTABLE ??
CODE_DUMP @7f4c76fbe813 +0  B9110000
[3e4bfe527526dca] jit-backend-dump}
[3e4bfe52752ae43] jit-backend}
[3e4bfe52752eb61] {jit-log-opt-bridge
# bridge out of Guard 0x3abcb60 with 83 ops
[p0, p1, p2, p3, p4, p5]
+214: guard_not_invalidated(descr=<Guard0x3ac0fe0>) [p0, p1, p2, p3, p4, p5]
+214: guard_nonnull_class(p4, 16584240, descr=<Guard0x3ac1040>) [p0, p1, p2, p3, p4, p5]
+232: guard_nonnull_class(p3, ConstClass(W_Fixnum), descr=<Guard0x3ac10a0>) [p0, p1, p2, p3, p4, p5]
+250: guard_nonnull_class(p2, ConstClass(W_Fixnum), descr=<Guard0x3ac1100>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
+268: guard_class(p0, 16435208, descr=<Guard0x3abd190>) [p0, p1, p2, p3, p4, p5]
+280: p10 = getfield_gc_r(p0, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+284: guard_nonnull_class(p10, ConstClass(ForwardLink), descr=<Guard0x3ac1160>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(< y4851 x4849)')
+303: i12 = getfield_gc_i(p2, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+307: i13 = getfield_gc_i(p3, descr=<FieldS pycket.values.W_Fixnum.inst_value 8 pure>)
+311: i14 = int_lt(i12, i13)
+314: guard_false(i14, descr=<Guard0x3abd1d8>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(k4847 z4853)')
+320: p15 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+324: p16 = getfield_gc_r(p4, descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+324: i17 = instance_ptr_eq(p0, p15)
+327: guard_true(i17, descr=<Guard0x3abd220>) [p0, p1, p2, p3, p4, p5]
+333: guard_class(p15, 16435208, descr=<Guard0x3abd268>) [p0, p1, p2, p3, p4, p5]
+346: p19 = getfield_gc_r(p15, descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+357: guard_value(p19, ConstPtr(ptr20), descr=<Guard0x3abd2b0>) [p0, p1, p2, p3, p4, p5]
+366: p21 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+370: p22 = getfield_gc_r(p15, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
debug_merge_point(0, 0, '(doloop4887 (add1 i4889)) from (k4847 z4853)')
+374: guard_class(p21, 16504944, descr=<Guard0x3abd2f8>) [p0, p1, p2, p3, p4, p5]
+387: p24 = getfield_gc_r(p21, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+391: guard_class(p24, 16499664, descr=<Guard0x3abd340>) [p0, p1, p2, p3, p4, p5]
+404: p26 = getfield_gc_r(p24, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+408: guard_nonnull_class(p26, 16510992, descr=<Guard0x3ac11c0>) [p0, p1, p2, p3, p4, p5]
+427: i28 = getfield_gc_i(p21, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+431: i30 = int_add_ovf(i28, 1)
+435: guard_no_overflow(descr=<Guard0x3abd388>) [p0, p1, p2, p3, p4, p5]
+441: p31 = getfield_gc_r(p26, descr=<FieldP pycket.values.W_Closure.inst_caselam 8 pure>)
+452: guard_value(p31, ConstPtr(ptr32), descr=<Guard0x3abd3d0>) [p0, p1, p2, p3, p4, p5]
+461: p33 = getfield_gc_r(p26, descr=<FieldP rpython.tool.pairtype.W_ClosureSize1.inst__envs_0 16 pure>)
+465: i34 = instance_ptr_eq(p24, p33)
+468: guard_true(i34, descr=<Guard0x3abd418>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(let ([if1 (> i4889 ctak-iters)]) (if if1 (begin (void) (void)) (begin (ctak 18 12 6) (doloop4887 (add1 i4889))))) from (doloop4887 (add1 i4889))')
+474: guard_class(p22, 16528368, descr=<Guard0x3abd460>) [p0, p1, p2, p3, p4, p5]
+488: p36 = getfield_gc_r(p22, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+493: guard_nonnull_class(p36, ConstClass(ForwardLink), descr=<Guard0x3ac1220>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(> i4889 ctak-iters)')
+512: i39 = int_gt(i30, 500)
+519: guard_false(i39, descr=<Guard0x3abd4a8>) [p0, p1, p2, p3, p4, p5]
debug_merge_point(0, 0, '(if if1 (begin (void) (void)) (begin (ctak 18 12 6) (doloop4887 (add1 i4889))))')
debug_merge_point(0, 0, '(begin (ctak 18 12 6) (doloop4887 (add1 i4889)))')
debug_merge_point(0, 0, '(ctak 18 12 6)')
+525: p40 = getfield_gc_r(p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k) (ctak-aux k x y z)))')
debug_merge_point(0, 0, '(ctak-aux k x y z)')
debug_merge_point(0, 0, '(let ([AppRand0 (< y4851 x4849)]) (if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))))')
debug_merge_point(0, 0, '(< y4851 x4849)')
debug_merge_point(0, 0, '(if (not AppRand0) (k4847 z4853) (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)))))')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, '(let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6)) from (call-with-current-continuation (lambda (k4859) (let ([k4859 k4859][AppRand2 (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))][AppRand4 (call-with-current-continuation (lambda (k4868) (let ([AppRand3 (- y4851 1)]) (ctak-aux k4868 AppRand3 z4853 x4849))))][AppRand6 (call-with-current-continuation (lambda (k4874) (let ([AppRand5 (- z4853 1)]) (ctak-aux k4874 AppRand5 x4849 y4851))))]) (ctak-aux k4859 AppRand2 AppRand4 AppRand6))))')
debug_merge_point(0, 0, 'k4859')
debug_merge_point(0, 0, '(call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
debug_merge_point(0, 0, '(let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853)) from (call-with-current-continuation (lambda (k4862) (let ([AppRand1 (- x4849 1)]) (ctak-aux k4862 AppRand1 y4851 z4853))))')
+525: p41 = new_with_vtable(descr=<SizeDescr 24>)
+569: p42 = new_with_vtable(descr=<SizeDescr 24>)
+580: p43 = new_with_vtable(descr=<SizeDescr 48>)
+591: setfield_gc(p43, p36, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+602: setfield_gc(p43, ConstPtr(ptr44), descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+606: p45 = new_with_vtable(descr=<SizeDescr 40>)
+617: setfield_gc(p45, p36, descr=<FieldP pycket.cont.BaseCont.inst_marks 8>)
+621: p46 = new_with_vtable(descr=<SizeDescr 24>)
+632: setfield_gc(p46, p24, descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+636: setfield_gc(p46, i30, descr=<FieldS pycket.small_list.ConsEnvSize1Fixed.inst_vals_fixed_0 16 pure>)
+640: setfield_gc(p45, p46, descr=<FieldP pycket.cont.Cont.inst_env 16 pure>)
+644: setfield_gc(p45, p22, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+648: setfield_gc(p45, ConstPtr(ptr47), descr=<FieldP pycket.interpreter.BeginCont.inst_counting_ast 32 pure>)
+652: setfield_gc(p43, p45, descr=<FieldP pycket.cont.Cont.inst_prev 24 pure>)
+663: setfield_gc(p43, ConstPtr(ptr48), descr=<FieldP pycket.interpreter.LetCont.inst_counting_ast 32 pure>)
+667: p49 = new_with_vtable(descr=<SizeDescr 24>)
+679: setfield_gc(p49, p45, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+683: setfield_gc(p49, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+691: setfield_gc(p43, p49, descr=<FieldP pycket.small_list.LetContSize1.inst__vals_w_0 40 pure>)
+695: setfield_gc(p42, p43, descr=<FieldP pycket.values.W_Continuation.inst_cont 8 pure>)
+699: setfield_gc(p42, ConstPtr(null), descr=<FieldP pycket.values.W_Continuation.inst_prompt_tag 16 pure>)
+714: setfield_gc(p41, ConstPtr(ptr52), descr=<FieldP pycket.env.ConsEnv.inst__prev 8 pure>)
+718: setfield_gc(p41, p42, descr=<FieldP rpython.tool.pairtype.ConsEnvSize1.inst__vals_0 16 pure>)
+722: jump(p41, p43, descr=TargetToken(60615520))
+752: --end of the loop--
[3e4bfe52757c341] jit-log-opt-bridge}
[3e4bfe6dd06c720] {jit-summary
Tracing:      	36	0.030724
Backend:      	36	0.011399
TOTAL:      		2.925431
ops:             	50669
recorded ops:    	8706
  calls:         	0
guards:          	1920
opt ops:         	2742
opt guards:      	816
opt guards shared:	554
forcings:        	0
abort: trace too long:	0
abort: compiling:	0
abort: vable escape:	0
abort: bad loop: 	0
abort: force quasi-immut:	0
nvirtuals:       	55
nvholes:         	0
nvreused:        	0
vecopt tried:    	0
vecopt success:  	0
Total # of loops:	5
Total # of bridges:	31
Freed # of loops:	0
Freed # of bridges:	0
[3e4bfe6dd07e91b] jit-summary}
[3e4bfe6dd0894d4] {jit-backend-counts
entry 1:124
TargetToken(60615520):32259938
TargetToken(60615600):47249909
entry 2:11
TargetToken(61039584):11
TargetToken(61039664):79509844
entry 3:425
entry 4:408
bridge 61020456:66749821
entry 6:652
bridge 60724752:19854907
bridge 61021896:38639858
bridge 61021248:261
bridge 60724536:12404926
bridge 61285032:125
bridge 61286112:30344850
bridge 61021536:14439901
bridge 61021104:37
bridge 61284456:6454931
bridge 61288488:30
bridge 61284816:196
bridge 61287480:6269911
bridge 61286544:6134922
bridge 61021608:5059935
bridge 61285248:55
bridge 61289712:6134909
bridge 61290072:2954923
bridge 61285680:2389936
bridge 61285536:2159937
bridge 61289424:3179937
bridge 61020528:1284947
bridge 61457712:2119931
bridge 61289568:789940
bridge 61458000:794931
bridge 61286616:112
bridge 61289136:9950
bridge 61289640:9948
bridge 61460808:4950
bridge 61590008:4923
bridge 61590368:4923
[3e4bfe6dd091f72] jit-backend-counts}
